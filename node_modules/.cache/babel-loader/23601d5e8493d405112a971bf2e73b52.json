{"ast":null,"code":"import axios from 'axios';\nimport router from './../../router';\nexport default {\n  data() {\n    return {\n      listbrand: [],\n      category: [],\n      subcategory: [],\n      mtypelist: [],\n      purchasedlist: null,\n      productlist: null,\n      unitlist: null,\n      pdid: this.$route.query.purchase_id\n    };\n  },\n\n  mounted() {\n    this.showdata();\n    this.doshow('brand');\n    this.doshow('category');\n    this.doshow('subcategory');\n    this.doshow('unittype');\n  },\n\n  watch: {\n    purchasedlist(val) {\n      this.dat.destroy();\n      this.$nextTick(() => {\n        this.dat = $(this.$refs.tablefeature).DataTable({\n          \"fnRowCallback\": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {\n            $('td:eq(0)', nRow).html(iDisplayIndexFull + 1);\n          }\n        });\n      });\n    }\n\n  },\n  methods: {\n    doshow: function (database) {\n      axios.get(localStorage.getItem(\"link\") + \"/api/\" + database).then(response => {\n        if (database == 'brand') {\n          this.listbrand = response.data;\n        }\n\n        if (database == 'category') {\n          this.category = response.data;\n        }\n\n        if (database == 'subcategory') {\n          this.subcategory = response.data;\n        }\n\n        if (database == 'unittype') {\n          this.mtypelist = response.data;\n        }\n      }).catch(error => {\n        this.errorMessage = error.message;\n        console.error(\"There was an error!\", error);\n      });\n    },\n    showdata: function () {\n      //                 \n      axios.get(localStorage.getItem(\"link\") + \"/api/purchasedetail/\" + this.pdid).then(response => {\n        console.log(response);\n        this.purchasedlist = response.data;\n      }).catch(error => {\n        this.errorMessage = error.message;\n        console.error(\"There was an error!\", error);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAoCA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,eAAe;EACXC,IAAG,GAAK;IAGJ,OAAO;MACHC,SAAS,EAAC,EADP;MAGfC,QAAQ,EAAC,EAHM;MAIfC,WAAW,EAAC,EAJG;MAKfC,SAAS,EAAC,EALK;MAMHC,aAAa,EAAC,IANX;MAOHC,WAAW,EAAC,IAPT;MAQHC,QAAQ,EAAC,IARN;MASHC,IAAI,EAAC,KAAKC,MAAL,CAAYC,KAAZ,CAAkBC;IATpB,CAAP;EAWH,CAfU;;EAgBXC,OAAM,GAAK;IACP,KAAKC,QAAL;IACA,KAAKC,MAAL,CAAY,OAAZ;IACA,KAAKA,MAAL,CAAY,UAAZ;IACA,KAAKA,MAAL,CAAY,aAAZ;IACA,KAAKA,MAAL,CAAY,UAAZ;EACH,CAtBU;;EAuBXC,KAAK,EAAE;IACHV,aAAa,CAACW,GAAD,EAAM;MACvB,KAAKC,GAAL,CAASC,OAAT;MACA,KAAKC,SAAL,CAAe,MAAM;QACjB,KAAKF,GAAL,GAAUG,CAAC,CAAC,KAAKC,KAAL,CAAWC,YAAZ,CAAD,CAA2BC,SAA3B,CAAqC;UAE3C,iBAAiB,UAAUC,IAAV,EAAgBC,KAAhB,EAAuBC,aAAvB,EAAsCC,iBAAtC,EAA0D;YAC/EP,CAAC,CAAC,UAAD,EAAaI,IAAb,CAAD,CAAoBI,IAApB,CAAyBD,iBAAgB,GAAG,CAA5C;UACJ;QAJmD,CAArC,CAAV;MAOH,CARD;IASA;;EAZO,CAvBI;EAqCXE,OAAO,EAAE;IAELf,MAAM,EAAC,UAASgB,QAAT,EAAkB;MAGjChC,KAAK,CAACiC,GAAN,CAAUC,YAAY,CAACC,OAAb,CAAqB,MAArB,IAA6B,OAA7B,GAAqCH,QAA/C,EACII,IADJ,CACSC,QAAO,IAAK;QACjB,IAAGL,QAAQ,IAAE,OAAb,EACA;UACI,KAAK7B,SAAL,GAAiBkC,QAAQ,CAACnC,IAA1B;QACJ;;QACA,IAAG8B,QAAQ,IAAE,UAAb,EACA;UACI,KAAK5B,QAAL,GAAgBiC,QAAQ,CAACnC,IAAzB;QACJ;;QACA,IAAG8B,QAAQ,IAAE,aAAb,EACA;UACI,KAAK3B,WAAL,GAAmBgC,QAAQ,CAACnC,IAA5B;QACJ;;QACA,IAAG8B,QAAQ,IAAE,UAAb,EACA;UACI,KAAK1B,SAAL,GAAiB+B,QAAQ,CAACnC,IAA1B;QACJ;MAMA,CAvBJ,EAwBIoC,KAxBJ,CAwBUC,KAAI,IAAK;QACd,KAAKC,YAAL,GAAoBD,KAAK,CAACE,OAA1B;QACAC,OAAO,CAACH,KAAR,CAAc,qBAAd,EAAqCA,KAArC;MAA6C,CA1BlD;IA6BQ,CAlCK;IAoCLxB,QAAQ,EAAC,YAAW;;MAKhBf,KAAK,CAACiC,GAAN,CAAUC,YAAY,CAACC,OAAb,CAAqB,MAArB,IAA6B,sBAA7B,GAAoD,KAAKzB,IAAnE,EACR0B,IADQ,CACHC,QAAO,IAAI;QACpBK,OAAO,CAACC,GAAR,CAAYN,QAAZ;QACE,KAAK9B,aAAL,GAAmB8B,QAAQ,CAACnC,IAA5B;MAGE,CANQ,EAORoC,KAPQ,CAOFC,KAAI,IAAK;QACd,KAAKC,YAAL,GAAoBD,KAAK,CAACE,OAA1B;QACAC,OAAO,CAACH,KAAR,CAAc,qBAAd,EAAqCA,KAArC;MACE,CAVK;IAcP;EAvDQ;AArCE,CAAf","names":["axios","router","data","listbrand","category","subcategory","mtypelist","purchasedlist","productlist","unitlist","pdid","$route","query","purchase_id","mounted","showdata","doshow","watch","val","dat","destroy","$nextTick","$","$refs","tablefeature","DataTable","nRow","aData","iDisplayIndex","iDisplayIndexFull","html","methods","database","get","localStorage","getItem","then","response","catch","error","errorMessage","message","console","log"],"sourceRoot":"","sources":["/Users/sithuhein/Desktop/PosSystem/pos_project_bk/src/views/Management/purchasedetail.vue"],"sourcesContent":["<template>\n    <div>\n        <div class=\"row d-flex justify-content-center\">\n            <div class=\"col-md-12\">\n                <table class=\"table table-striped\" style=\"width:100%\">\n                    <thead>\n                        <tr>\n                            <th>No</th>\n                            <th>Product</th>\n                            <th>Unit Type</th>\n                            <th>Amount</th>\n                            <th>Price</th>\n                            <th>Note</th>\n                         \n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr v-for=\"(pl,index) in purchasedlist\">\n                            \n                            <td>{{ ++index }}</td>\n                            <td>{{ pl.product_id }}</td>\n                            <td>{{ pl.productstock_id }}</td>\n                            <td>{{ pl.amount }}</td>\n                            <td>{{ pl.price }}</td>\n                            <td>{{ pl.note }}</td>\n                          \n                        </tr>\n                    </tbody>\n                </table>\n\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport router from './../../router'\nexport default {\n    data () {\n        \n\n        return {\n            listbrand:[],\n\ncategory:[],\nsubcategory:[],\nmtypelist:[],\n            purchasedlist:null,\n            productlist:null,\n            unitlist:null,\n            pdid:this.$route.query.purchase_id,\n        }\n    },\n    mounted () {\n        this.showdata();\n        this.doshow('brand')\n        this.doshow('category')\n        this.doshow('subcategory')\n        this.doshow('unittype')\n    },\n    watch: {\n        purchasedlist(val) {\n    this.dat.destroy();\n    this.$nextTick(() => {\n        this.dat= $(this.$refs.tablefeature).DataTable({\n\n            \"fnRowCallback\": function( nRow, aData, iDisplayIndex, iDisplayIndexFull ) {\n        $('td:eq(0)', nRow).html(iDisplayIndexFull +1);\n    }\n\n        })\n    });\n    }\n    },\n    methods: {\n        \n        doshow:function(database){\n\n\naxios.get(localStorage.getItem(\"link\")+\"/api/\"+database)\n   .then(response => {\n    if(database=='brand')\n    {\n        this.listbrand = response.data\n    }\n    if(database=='category')\n    {\n        this.category = response.data\n    }\n    if(database=='subcategory')\n    {\n        this.subcategory = response.data\n    }\n    if(database=='unittype')\n    {\n        this.mtypelist = response.data\n    }\n\n\n  \n    \n       \n   })\n   .catch(error => {\n     this.errorMessage = error.message;\n     console.error(\"There was an error!\", error);});\n     \n\n       },\n       \n        showdata:function() {\n\n//                 \n\n \n            axios.get(localStorage.getItem(\"link\")+\"/api/purchasedetail/\"+this.pdid)\n   .then(response =>{\nconsole.log(response)\n  this.purchasedlist=response.data;\n \n \n   })\n   .catch(error => {\n     this.errorMessage = error.message;\n     console.error(\"There was an error!\", error);\n      })\n      \n      \n\n    },\n \n    },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}