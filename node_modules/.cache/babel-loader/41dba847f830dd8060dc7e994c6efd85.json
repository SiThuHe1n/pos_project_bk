{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.unshift.js\";\n\n/*! DataTables 1.13.1\n * Â©2008-2022 SpryMedia Ltd - datatables.net/license\n */\nimport jQuery from 'jquery'; // DataTables code uses $ internally, but we want to be able to\n// reassign $ with the `use` method below, so it is a regular var.\n\nlet $ = jQuery;\n\nvar DataTable = function (selector, options) {\n  // When creating with `new`, create a new DataTable, returning the API instance\n  if (this instanceof DataTable) {\n    return $(selector).DataTable(options);\n  } else {\n    // Argument switching\n    options = selector;\n  }\n  /**\n   * Perform a jQuery selector action on the table's TR elements (from the tbody) and\n   * return the resulting jQuery object.\n   *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n   *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n   *  @param {string} [oOpts.filter=none] Select TR elements that meet the current filter\n   *    criterion (\"applied\") or all TR elements (i.e. no filter).\n   *  @param {string} [oOpts.order=current] Order of the TR elements in the processed array.\n   *    Can be either 'current', whereby the current sorting of the table is used, or\n   *    'original' whereby the original order the data was read into the table is used.\n   *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n   *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n   *    'current' and filter is 'applied', regardless of what they might be given as.\n   *  @returns {object} jQuery object, filtered by the given selector.\n   *  @dtopt API\n   *  @deprecated Since v1.10\n   *\n   *  @example\n   *    $(document).ready(function() {\n   *      var oTable = $('#example').dataTable();\n   *\n   *      // Highlight every second row\n   *      oTable.$('tr:odd').css('backgroundColor', 'blue');\n   *    } );\n   *\n   *  @example\n   *    $(document).ready(function() {\n   *      var oTable = $('#example').dataTable();\n   *\n   *      // Filter to rows with 'Webkit' in them, add a background colour and then\n   *      // remove the filter, thus highlighting the 'Webkit' rows only.\n   *      oTable.fnFilter('Webkit');\n   *      oTable.$('tr', {\"search\": \"applied\"}).css('backgroundColor', 'blue');\n   *      oTable.fnFilter('');\n   *    } );\n   */\n\n\n  this.$ = function (sSelector, oOpts) {\n    return this.api(true).$(sSelector, oOpts);\n  };\n  /**\n   * Almost identical to $ in operation, but in this case returns the data for the matched\n   * rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes\n   * rather than any descendants, so the data can be obtained for the row/cell. If matching\n   * rows are found, the data returned is the original data array/object that was used to\n   * create the row (or a generated array if from a DOM source).\n   *\n   * This method is often useful in-combination with $ where both functions are given the\n   * same parameters and the array indexes will match identically.\n   *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n   *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n   *  @param {string} [oOpts.filter=none] Select elements that meet the current filter\n   *    criterion (\"applied\") or all elements (i.e. no filter).\n   *  @param {string} [oOpts.order=current] Order of the data in the processed array.\n   *    Can be either 'current', whereby the current sorting of the table is used, or\n   *    'original' whereby the original order the data was read into the table is used.\n   *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n   *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n   *    'current' and filter is 'applied', regardless of what they might be given as.\n   *  @returns {array} Data for the matched elements. If any elements, as a result of the\n   *    selector, were not TR, TD or TH elements in the DataTable, they will have a null\n   *    entry in the array.\n   *  @dtopt API\n   *  @deprecated Since v1.10\n   *\n   *  @example\n   *    $(document).ready(function() {\n   *      var oTable = $('#example').dataTable();\n   *\n   *      // Get the data from the first row in the table\n   *      var data = oTable._('tr:first');\n   *\n   *      // Do something useful with the data\n   *      alert( \"First cell is: \"+data[0] );\n   *    } );\n   *\n   *  @example\n   *    $(document).ready(function() {\n   *      var oTable = $('#example').dataTable();\n   *\n   *      // Filter to 'Webkit' and get all data for\n   *      oTable.fnFilter('Webkit');\n   *      var data = oTable._('tr', {\"search\": \"applied\"});\n   *\n   *      // Do something with the data\n   *      alert( data.length+\" rows matched the search\" );\n   *    } );\n   */\n\n\n  this._ = function (sSelector, oOpts) {\n    return this.api(true).rows(sSelector, oOpts).data();\n  };\n  /**\n   * Create a DataTables Api instance, with the currently selected tables for\n   * the Api's context.\n   * @param {boolean} [traditional=false] Set the API instance's context to be\n   *   only the table referred to by the `DataTable.ext.iApiIndex` option, as was\n   *   used in the API presented by DataTables 1.9- (i.e. the traditional mode),\n   *   or if all tables captured in the jQuery object should be used.\n   * @return {DataTables.Api}\n   */\n\n\n  this.api = function (traditional) {\n    return traditional ? new _Api(_fnSettingsFromNode(this[_ext.iApiIndex])) : new _Api(this);\n  };\n  /**\n   * Add a single new row or multiple rows of data to the table. Please note\n   * that this is suitable for client-side processing only - if you are using\n   * server-side processing (i.e. \"bServerSide\": true), then to add data, you\n   * must add it to the data source, i.e. the server-side, through an Ajax call.\n   *  @param {array|object} data The data to be added to the table. This can be:\n   *    <ul>\n   *      <li>1D array of data - add a single row with the data provided</li>\n   *      <li>2D array of arrays - add multiple rows in a single call</li>\n   *      <li>object - data object when using <i>mData</i></li>\n   *      <li>array of objects - multiple data objects when using <i>mData</i></li>\n   *    </ul>\n   *  @param {bool} [redraw=true] redraw the table or not\n   *  @returns {array} An array of integers, representing the list of indexes in\n   *    <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to\n   *    the table.\n   *  @dtopt API\n   *  @deprecated Since v1.10\n   *\n   *  @example\n   *    // Global var for counter\n   *    var giCount = 2;\n   *\n   *    $(document).ready(function() {\n   *      $('#example').dataTable();\n   *    } );\n   *\n   *    function fnClickAddRow() {\n   *      $('#example').dataTable().fnAddData( [\n   *        giCount+\".1\",\n   *        giCount+\".2\",\n   *        giCount+\".3\",\n   *        giCount+\".4\" ]\n   *      );\n   *\n   *      giCount++;\n   *    }\n   */\n\n\n  this.fnAddData = function (data, redraw) {\n    var api = this.api(true);\n    /* Check if we want to add multiple rows or not */\n\n    var rows = Array.isArray(data) && (Array.isArray(data[0]) || $.isPlainObject(data[0])) ? api.rows.add(data) : api.row.add(data);\n\n    if (redraw === undefined || redraw) {\n      api.draw();\n    }\n\n    return rows.flatten().toArray();\n  };\n  /**\n   * This function will make DataTables recalculate the column sizes, based on the data\n   * contained in the table and the sizes applied to the columns (in the DOM, CSS or\n   * through the sWidth parameter). This can be useful when the width of the table's\n   * parent element changes (for example a window resize).\n   *  @param {boolean} [bRedraw=true] Redraw the table or not, you will typically want to\n   *  @dtopt API\n   *  @deprecated Since v1.10\n   *\n   *  @example\n   *    $(document).ready(function() {\n   *      var oTable = $('#example').dataTable( {\n   *        \"sScrollY\": \"200px\",\n   *        \"bPaginate\": false\n   *      } );\n   *\n   *      $(window).on('resize', function () {\n   *        oTable.fnAdjustColumnSizing();\n   *      } );\n   *    } );\n   */\n\n\n  this.fnAdjustColumnSizing = function (bRedraw) {\n    var api = this.api(true).columns.adjust();\n    var settings = api.settings()[0];\n    var scroll = settings.oScroll;\n\n    if (bRedraw === undefined || bRedraw) {\n      api.draw(false);\n    } else if (scroll.sX !== \"\" || scroll.sY !== \"\") {\n      /* If not redrawing, but scrolling, we want to apply the new column sizes anyway */\n      _fnScrollDraw(settings);\n    }\n  };\n  /**\n   * Quickly and simply clear a table\n   *  @param {bool} [bRedraw=true] redraw the table or not\n   *  @dtopt API\n   *  @deprecated Since v1.10\n   *\n   *  @example\n   *    $(document).ready(function() {\n   *      var oTable = $('#example').dataTable();\n   *\n   *      // Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)\n   *      oTable.fnClearTable();\n   *    } );\n   */\n\n\n  this.fnClearTable = function (bRedraw) {\n    var api = this.api(true).clear();\n\n    if (bRedraw === undefined || bRedraw) {\n      api.draw();\n    }\n  };\n  /**\n   * The exact opposite of 'opening' a row, this function will close any rows which\n   * are currently 'open'.\n   *  @param {node} nTr the table row to 'close'\n   *  @returns {int} 0 on success, or 1 if failed (can't find the row)\n   *  @dtopt API\n   *  @deprecated Since v1.10\n   *\n   *  @example\n   *    $(document).ready(function() {\n   *      var oTable;\n   *\n   *      // 'open' an information row when a row is clicked on\n   *      $('#example tbody tr').click( function () {\n   *        if ( oTable.fnIsOpen(this) ) {\n   *          oTable.fnClose( this );\n   *        } else {\n   *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n   *        }\n   *      } );\n   *\n   *      oTable = $('#example').dataTable();\n   *    } );\n   */\n\n\n  this.fnClose = function (nTr) {\n    this.api(true).row(nTr).child.hide();\n  };\n  /**\n   * Remove a row for the table\n   *  @param {mixed} target The index of the row from aoData to be deleted, or\n   *    the TR element you want to delete\n   *  @param {function|null} [callBack] Callback function\n   *  @param {bool} [redraw=true] Redraw the table or not\n   *  @returns {array} The row that was deleted\n   *  @dtopt API\n   *  @deprecated Since v1.10\n   *\n   *  @example\n   *    $(document).ready(function() {\n   *      var oTable = $('#example').dataTable();\n   *\n   *      // Immediately remove the first row\n   *      oTable.fnDeleteRow( 0 );\n   *    } );\n   */\n\n\n  this.fnDeleteRow = function (target, callback, redraw) {\n    var api = this.api(true);\n    var rows = api.rows(target);\n    var settings = rows.settings()[0];\n    var data = settings.aoData[rows[0][0]];\n    rows.remove();\n\n    if (callback) {\n      callback.call(this, settings, data);\n    }\n\n    if (redraw === undefined || redraw) {\n      api.draw();\n    }\n\n    return data;\n  };\n  /**\n   * Restore the table to it's original state in the DOM by removing all of DataTables\n   * enhancements, alterations to the DOM structure of the table and event listeners.\n   *  @param {boolean} [remove=false] Completely remove the table from the DOM\n   *  @dtopt API\n   *  @deprecated Since v1.10\n   *\n   *  @example\n   *    $(document).ready(function() {\n   *      // This example is fairly pointless in reality, but shows how fnDestroy can be used\n   *      var oTable = $('#example').dataTable();\n   *      oTable.fnDestroy();\n   *    } );\n   */\n\n\n  this.fnDestroy = function (remove) {\n    this.api(true).destroy(remove);\n  };\n  /**\n   * Redraw the table\n   *  @param {bool} [complete=true] Re-filter and resort (if enabled) the table before the draw.\n   *  @dtopt API\n   *  @deprecated Since v1.10\n   *\n   *  @example\n   *    $(document).ready(function() {\n   *      var oTable = $('#example').dataTable();\n   *\n   *      // Re-draw the table - you wouldn't want to do it here, but it's an example :-)\n   *      oTable.fnDraw();\n   *    } );\n   */\n\n\n  this.fnDraw = function (complete) {\n    // Note that this isn't an exact match to the old call to _fnDraw - it takes\n    // into account the new data, but can hold position.\n    this.api(true).draw(complete);\n  };\n  /**\n   * Filter the input based on data\n   *  @param {string} sInput String to filter the table on\n   *  @param {int|null} [iColumn] Column to limit filtering to\n   *  @param {bool} [bRegex=false] Treat as regular expression or not\n   *  @param {bool} [bSmart=true] Perform smart filtering or not\n   *  @param {bool} [bShowGlobal=true] Show the input global filter in it's input box(es)\n   *  @param {bool} [bCaseInsensitive=true] Do case-insensitive matching (true) or not (false)\n   *  @dtopt API\n   *  @deprecated Since v1.10\n   *\n   *  @example\n   *    $(document).ready(function() {\n   *      var oTable = $('#example').dataTable();\n   *\n   *      // Sometime later - filter...\n   *      oTable.fnFilter( 'test string' );\n   *    } );\n   */\n\n\n  this.fnFilter = function (sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive) {\n    var api = this.api(true);\n\n    if (iColumn === null || iColumn === undefined) {\n      api.search(sInput, bRegex, bSmart, bCaseInsensitive);\n    } else {\n      api.column(iColumn).search(sInput, bRegex, bSmart, bCaseInsensitive);\n    }\n\n    api.draw();\n  };\n  /**\n   * Get the data for the whole table, an individual row or an individual cell based on the\n   * provided parameters.\n   *  @param {int|node} [src] A TR row node, TD/TH cell node or an integer. If given as\n   *    a TR node then the data source for the whole row will be returned. If given as a\n   *    TD/TH cell node then iCol will be automatically calculated and the data for the\n   *    cell returned. If given as an integer, then this is treated as the aoData internal\n   *    data index for the row (see fnGetPosition) and the data for that row used.\n   *  @param {int} [col] Optional column index that you want the data of.\n   *  @returns {array|object|string} If mRow is undefined, then the data for all rows is\n   *    returned. If mRow is defined, just data for that row, and is iCol is\n   *    defined, only data for the designated cell is returned.\n   *  @dtopt API\n   *  @deprecated Since v1.10\n   *\n   *  @example\n   *    // Row data\n   *    $(document).ready(function() {\n   *      oTable = $('#example').dataTable();\n   *\n   *      oTable.$('tr').click( function () {\n   *        var data = oTable.fnGetData( this );\n   *        // ... do something with the array / object of data for the row\n   *      } );\n   *    } );\n   *\n   *  @example\n   *    // Individual cell data\n   *    $(document).ready(function() {\n   *      oTable = $('#example').dataTable();\n   *\n   *      oTable.$('td').click( function () {\n   *        var sData = oTable.fnGetData( this );\n   *        alert( 'The cell clicked on had the value of '+sData );\n   *      } );\n   *    } );\n   */\n\n\n  this.fnGetData = function (src, col) {\n    var api = this.api(true);\n\n    if (src !== undefined) {\n      var type = src.nodeName ? src.nodeName.toLowerCase() : '';\n      return col !== undefined || type == 'td' || type == 'th' ? api.cell(src, col).data() : api.row(src).data() || null;\n    }\n\n    return api.data().toArray();\n  };\n  /**\n   * Get an array of the TR nodes that are used in the table's body. Note that you will\n   * typically want to use the '$' API method in preference to this as it is more\n   * flexible.\n   *  @param {int} [iRow] Optional row index for the TR element you want\n   *  @returns {array|node} If iRow is undefined, returns an array of all TR elements\n   *    in the table's body, or iRow is defined, just the TR element requested.\n   *  @dtopt API\n   *  @deprecated Since v1.10\n   *\n   *  @example\n   *    $(document).ready(function() {\n   *      var oTable = $('#example').dataTable();\n   *\n   *      // Get the nodes from the table\n   *      var nNodes = oTable.fnGetNodes( );\n   *    } );\n   */\n\n\n  this.fnGetNodes = function (iRow) {\n    var api = this.api(true);\n    return iRow !== undefined ? api.row(iRow).node() : api.rows().nodes().flatten().toArray();\n  };\n  /**\n   * Get the array indexes of a particular cell from it's DOM element\n   * and column index including hidden columns\n   *  @param {node} node this can either be a TR, TD or TH in the table's body\n   *  @returns {int} If nNode is given as a TR, then a single index is returned, or\n   *    if given as a cell, an array of [row index, column index (visible),\n   *    column index (all)] is given.\n   *  @dtopt API\n   *  @deprecated Since v1.10\n   *\n   *  @example\n   *    $(document).ready(function() {\n   *      $('#example tbody td').click( function () {\n   *        // Get the position of the current data from the node\n   *        var aPos = oTable.fnGetPosition( this );\n   *\n   *        // Get the data array for this row\n   *        var aData = oTable.fnGetData( aPos[0] );\n   *\n   *        // Update the data array and return the value\n   *        aData[ aPos[1] ] = 'clicked';\n   *        this.innerHTML = 'clicked';\n   *      } );\n   *\n   *      // Init DataTables\n   *      oTable = $('#example').dataTable();\n   *    } );\n   */\n\n\n  this.fnGetPosition = function (node) {\n    var api = this.api(true);\n    var nodeName = node.nodeName.toUpperCase();\n\n    if (nodeName == 'TR') {\n      return api.row(node).index();\n    } else if (nodeName == 'TD' || nodeName == 'TH') {\n      var cell = api.cell(node).index();\n      return [cell.row, cell.columnVisible, cell.column];\n    }\n\n    return null;\n  };\n  /**\n   * Check to see if a row is 'open' or not.\n   *  @param {node} nTr the table row to check\n   *  @returns {boolean} true if the row is currently open, false otherwise\n   *  @dtopt API\n   *  @deprecated Since v1.10\n   *\n   *  @example\n   *    $(document).ready(function() {\n   *      var oTable;\n   *\n   *      // 'open' an information row when a row is clicked on\n   *      $('#example tbody tr').click( function () {\n   *        if ( oTable.fnIsOpen(this) ) {\n   *          oTable.fnClose( this );\n   *        } else {\n   *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n   *        }\n   *      } );\n   *\n   *      oTable = $('#example').dataTable();\n   *    } );\n   */\n\n\n  this.fnIsOpen = function (nTr) {\n    return this.api(true).row(nTr).child.isShown();\n  };\n  /**\n   * This function will place a new row directly after a row which is currently\n   * on display on the page, with the HTML contents that is passed into the\n   * function. This can be used, for example, to ask for confirmation that a\n   * particular record should be deleted.\n   *  @param {node} nTr The table row to 'open'\n   *  @param {string|node|jQuery} mHtml The HTML to put into the row\n   *  @param {string} sClass Class to give the new TD cell\n   *  @returns {node} The row opened. Note that if the table row passed in as the\n   *    first parameter, is not found in the table, this method will silently\n   *    return.\n   *  @dtopt API\n   *  @deprecated Since v1.10\n   *\n   *  @example\n   *    $(document).ready(function() {\n   *      var oTable;\n   *\n   *      // 'open' an information row when a row is clicked on\n   *      $('#example tbody tr').click( function () {\n   *        if ( oTable.fnIsOpen(this) ) {\n   *          oTable.fnClose( this );\n   *        } else {\n   *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n   *        }\n   *      } );\n   *\n   *      oTable = $('#example').dataTable();\n   *    } );\n   */\n\n\n  this.fnOpen = function (nTr, mHtml, sClass) {\n    return this.api(true).row(nTr).child(mHtml, sClass).show().child()[0];\n  };\n  /**\n   * Change the pagination - provides the internal logic for pagination in a simple API\n   * function. With this function you can have a DataTables table go to the next,\n   * previous, first or last pages.\n   *  @param {string|int} mAction Paging action to take: \"first\", \"previous\", \"next\" or \"last\"\n   *    or page number to jump to (integer), note that page 0 is the first page.\n   *  @param {bool} [bRedraw=true] Redraw the table or not\n   *  @dtopt API\n   *  @deprecated Since v1.10\n   *\n   *  @example\n   *    $(document).ready(function() {\n   *      var oTable = $('#example').dataTable();\n   *      oTable.fnPageChange( 'next' );\n   *    } );\n   */\n\n\n  this.fnPageChange = function (mAction, bRedraw) {\n    var api = this.api(true).page(mAction);\n\n    if (bRedraw === undefined || bRedraw) {\n      api.draw(false);\n    }\n  };\n  /**\n   * Show a particular column\n   *  @param {int} iCol The column whose display should be changed\n   *  @param {bool} bShow Show (true) or hide (false) the column\n   *  @param {bool} [bRedraw=true] Redraw the table or not\n   *  @dtopt API\n   *  @deprecated Since v1.10\n   *\n   *  @example\n   *    $(document).ready(function() {\n   *      var oTable = $('#example').dataTable();\n   *\n   *      // Hide the second column after initialisation\n   *      oTable.fnSetColumnVis( 1, false );\n   *    } );\n   */\n\n\n  this.fnSetColumnVis = function (iCol, bShow, bRedraw) {\n    var api = this.api(true).column(iCol).visible(bShow);\n\n    if (bRedraw === undefined || bRedraw) {\n      api.columns.adjust().draw();\n    }\n  };\n  /**\n   * Get the settings for a particular table for external manipulation\n   *  @returns {object} DataTables settings object. See\n   *    {@link DataTable.models.oSettings}\n   *  @dtopt API\n   *  @deprecated Since v1.10\n   *\n   *  @example\n   *    $(document).ready(function() {\n   *      var oTable = $('#example').dataTable();\n   *      var oSettings = oTable.fnSettings();\n   *\n   *      // Show an example parameter from the settings\n   *      alert( oSettings._iDisplayStart );\n   *    } );\n   */\n\n\n  this.fnSettings = function () {\n    return _fnSettingsFromNode(this[_ext.iApiIndex]);\n  };\n  /**\n   * Sort the table by a particular column\n   *  @param {int} iCol the data index to sort on. Note that this will not match the\n   *    'display index' if you have hidden data entries\n   *  @dtopt API\n   *  @deprecated Since v1.10\n   *\n   *  @example\n   *    $(document).ready(function() {\n   *      var oTable = $('#example').dataTable();\n   *\n   *      // Sort immediately with columns 0 and 1\n   *      oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );\n   *    } );\n   */\n\n\n  this.fnSort = function (aaSort) {\n    this.api(true).order(aaSort).draw();\n  };\n  /**\n   * Attach a sort listener to an element for a given column\n   *  @param {node} nNode the element to attach the sort listener to\n   *  @param {int} iColumn the column that a click on this node will sort on\n   *  @param {function} [fnCallback] callback function when sort is run\n   *  @dtopt API\n   *  @deprecated Since v1.10\n   *\n   *  @example\n   *    $(document).ready(function() {\n   *      var oTable = $('#example').dataTable();\n   *\n   *      // Sort on column 1, when 'sorter' is clicked on\n   *      oTable.fnSortListener( document.getElementById('sorter'), 1 );\n   *    } );\n   */\n\n\n  this.fnSortListener = function (nNode, iColumn, fnCallback) {\n    this.api(true).order.listener(nNode, iColumn, fnCallback);\n  };\n  /**\n   * Update a table cell or row - this method will accept either a single value to\n   * update the cell with, an array of values with one element for each column or\n   * an object in the same format as the original data source. The function is\n   * self-referencing in order to make the multi column updates easier.\n   *  @param {object|array|string} mData Data to update the cell/row with\n   *  @param {node|int} mRow TR element you want to update or the aoData index\n   *  @param {int} [iColumn] The column to update, give as null or undefined to\n   *    update a whole row.\n   *  @param {bool} [bRedraw=true] Redraw the table or not\n   *  @param {bool} [bAction=true] Perform pre-draw actions or not\n   *  @returns {int} 0 on success, 1 on error\n   *  @dtopt API\n   *  @deprecated Since v1.10\n   *\n   *  @example\n   *    $(document).ready(function() {\n   *      var oTable = $('#example').dataTable();\n   *      oTable.fnUpdate( 'Example update', 0, 0 ); // Single cell\n   *      oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], $('tbody tr')[0] ); // Row\n   *    } );\n   */\n\n\n  this.fnUpdate = function (mData, mRow, iColumn, bRedraw, bAction) {\n    var api = this.api(true);\n\n    if (iColumn === undefined || iColumn === null) {\n      api.row(mRow).data(mData);\n    } else {\n      api.cell(mRow, iColumn).data(mData);\n    }\n\n    if (bAction === undefined || bAction) {\n      api.columns.adjust();\n    }\n\n    if (bRedraw === undefined || bRedraw) {\n      api.draw();\n    }\n\n    return 0;\n  };\n  /**\n   * Provide a common method for plug-ins to check the version of DataTables being used, in order\n   * to ensure compatibility.\n   *  @param {string} sVersion Version string to check for, in the format \"X.Y.Z\". Note that the\n   *    formats \"X\" and \"X.Y\" are also acceptable.\n   *  @returns {boolean} true if this version of DataTables is greater or equal to the required\n   *    version, or false if this version of DataTales is not suitable\n   *  @method\n   *  @dtopt API\n   *  @deprecated Since v1.10\n   *\n   *  @example\n   *    $(document).ready(function() {\n   *      var oTable = $('#example').dataTable();\n   *      alert( oTable.fnVersionCheck( '1.9.0' ) );\n   *    } );\n   */\n\n\n  this.fnVersionCheck = _ext.fnVersionCheck;\n\n  var _that = this;\n\n  var emptyInit = options === undefined;\n  var len = this.length;\n\n  if (emptyInit) {\n    options = {};\n  }\n\n  this.oApi = this.internal = _ext.internal; // Extend with old style plug-in API methods\n\n  for (var fn in DataTable.ext.internal) {\n    if (fn) {\n      this[fn] = _fnExternApiFunc(fn);\n    }\n  }\n\n  this.each(function () {\n    // For each initialisation we want to give it a clean initialisation\n    // object that can be bashed around\n    var o = {};\n    var oInit = len > 1 ? // optimisation for single table case\n    _fnExtend(o, options, true) : options;\n    /*global oInit,_that,emptyInit*/\n\n    var i = 0,\n        iLen,\n        j,\n        jLen,\n        k,\n        kLen;\n    var sId = this.getAttribute('id');\n    var bInitHandedOff = false;\n    var defaults = DataTable.defaults;\n    var $this = $(this);\n    /* Sanity check */\n\n    if (this.nodeName.toLowerCase() != 'table') {\n      _fnLog(null, 0, 'Non-table node initialisation (' + this.nodeName + ')', 2);\n\n      return;\n    }\n    /* Backwards compatibility for the defaults */\n\n\n    _fnCompatOpts(defaults);\n\n    _fnCompatCols(defaults.column);\n    /* Convert the camel-case defaults to Hungarian */\n\n\n    _fnCamelToHungarian(defaults, defaults, true);\n\n    _fnCamelToHungarian(defaults.column, defaults.column, true);\n    /* Setting up the initialisation object */\n\n\n    _fnCamelToHungarian(defaults, $.extend(oInit, $this.data()), true);\n    /* Check to see if we are re-initialising a table */\n\n\n    var allSettings = DataTable.settings;\n\n    for (i = 0, iLen = allSettings.length; i < iLen; i++) {\n      var s = allSettings[i];\n      /* Base check on table node */\n\n      if (s.nTable == this || s.nTHead && s.nTHead.parentNode == this || s.nTFoot && s.nTFoot.parentNode == this) {\n        var bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;\n        var bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;\n\n        if (emptyInit || bRetrieve) {\n          return s.oInstance;\n        } else if (bDestroy) {\n          s.oInstance.fnDestroy();\n          break;\n        } else {\n          _fnLog(s, 0, 'Cannot reinitialise DataTable', 3);\n\n          return;\n        }\n      }\n      /* If the element we are initialising has the same ID as a table which was previously\n       * initialised, but the table nodes don't match (from before) then we destroy the old\n       * instance by simply deleting it. This is under the assumption that the table has been\n       * destroyed by other methods. Anyone using non-id selectors will need to do this manually\n       */\n\n\n      if (s.sTableId == this.id) {\n        allSettings.splice(i, 1);\n        break;\n      }\n    }\n    /* Ensure the table has an ID - required for accessibility */\n\n\n    if (sId === null || sId === \"\") {\n      sId = \"DataTables_Table_\" + DataTable.ext._unique++;\n      this.id = sId;\n    }\n    /* Create the settings object for this table and set some of the default parameters */\n\n\n    var oSettings = $.extend(true, {}, DataTable.models.oSettings, {\n      \"sDestroyWidth\": $this[0].style.width,\n      \"sInstance\": sId,\n      \"sTableId\": sId\n    });\n    oSettings.nTable = this;\n    oSettings.oApi = _that.internal;\n    oSettings.oInit = oInit;\n    allSettings.push(oSettings); // Need to add the instance after the instance after the settings object has been added\n    // to the settings array, so we can self reference the table instance if more than one\n\n    oSettings.oInstance = _that.length === 1 ? _that : $this.dataTable(); // Backwards compatibility, before we apply all the defaults\n\n    _fnCompatOpts(oInit);\n\n    _fnLanguageCompat(oInit.oLanguage); // If the length menu is given, but the init display length is not, use the length menu\n\n\n    if (oInit.aLengthMenu && !oInit.iDisplayLength) {\n      oInit.iDisplayLength = Array.isArray(oInit.aLengthMenu[0]) ? oInit.aLengthMenu[0][0] : oInit.aLengthMenu[0];\n    } // Apply the defaults and init options to make a single init object will all\n    // options defined from defaults and instance options.\n\n\n    oInit = _fnExtend($.extend(true, {}, defaults), oInit); // Map the initialisation options onto the settings object\n\n    _fnMap(oSettings.oFeatures, oInit, [\"bPaginate\", \"bLengthChange\", \"bFilter\", \"bSort\", \"bSortMulti\", \"bInfo\", \"bProcessing\", \"bAutoWidth\", \"bSortClasses\", \"bServerSide\", \"bDeferRender\"]);\n\n    _fnMap(oSettings, oInit, [\"asStripeClasses\", \"ajax\", \"fnServerData\", \"fnFormatNumber\", \"sServerMethod\", \"aaSorting\", \"aaSortingFixed\", \"aLengthMenu\", \"sPaginationType\", \"sAjaxSource\", \"sAjaxDataProp\", \"iStateDuration\", \"sDom\", \"bSortCellsTop\", \"iTabIndex\", \"fnStateLoadCallback\", \"fnStateSaveCallback\", \"renderer\", \"searchDelay\", \"rowId\", [\"iCookieDuration\", \"iStateDuration\"], // backwards compat\n    [\"oSearch\", \"oPreviousSearch\"], [\"aoSearchCols\", \"aoPreSearchCols\"], [\"iDisplayLength\", \"_iDisplayLength\"]]);\n\n    _fnMap(oSettings.oScroll, oInit, [[\"sScrollX\", \"sX\"], [\"sScrollXInner\", \"sXInner\"], [\"sScrollY\", \"sY\"], [\"bScrollCollapse\", \"bCollapse\"]]);\n\n    _fnMap(oSettings.oLanguage, oInit, \"fnInfoCallback\");\n    /* Callback functions which are array driven */\n\n\n    _fnCallbackReg(oSettings, 'aoDrawCallback', oInit.fnDrawCallback, 'user');\n\n    _fnCallbackReg(oSettings, 'aoServerParams', oInit.fnServerParams, 'user');\n\n    _fnCallbackReg(oSettings, 'aoStateSaveParams', oInit.fnStateSaveParams, 'user');\n\n    _fnCallbackReg(oSettings, 'aoStateLoadParams', oInit.fnStateLoadParams, 'user');\n\n    _fnCallbackReg(oSettings, 'aoStateLoaded', oInit.fnStateLoaded, 'user');\n\n    _fnCallbackReg(oSettings, 'aoRowCallback', oInit.fnRowCallback, 'user');\n\n    _fnCallbackReg(oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow, 'user');\n\n    _fnCallbackReg(oSettings, 'aoHeaderCallback', oInit.fnHeaderCallback, 'user');\n\n    _fnCallbackReg(oSettings, 'aoFooterCallback', oInit.fnFooterCallback, 'user');\n\n    _fnCallbackReg(oSettings, 'aoInitComplete', oInit.fnInitComplete, 'user');\n\n    _fnCallbackReg(oSettings, 'aoPreDrawCallback', oInit.fnPreDrawCallback, 'user');\n\n    oSettings.rowIdFn = _fnGetObjectDataFn(oInit.rowId);\n    /* Browser support detection */\n\n    _fnBrowserDetect(oSettings);\n\n    var oClasses = oSettings.oClasses;\n    $.extend(oClasses, DataTable.ext.classes, oInit.oClasses);\n    $this.addClass(oClasses.sTable);\n\n    if (oSettings.iInitDisplayStart === undefined) {\n      /* Display start point, taking into account the save saving */\n      oSettings.iInitDisplayStart = oInit.iDisplayStart;\n      oSettings._iDisplayStart = oInit.iDisplayStart;\n    }\n\n    if (oInit.iDeferLoading !== null) {\n      oSettings.bDeferLoading = true;\n      var tmp = Array.isArray(oInit.iDeferLoading);\n      oSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;\n      oSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading;\n    }\n    /* Language definitions */\n\n\n    var oLanguage = oSettings.oLanguage;\n    $.extend(true, oLanguage, oInit.oLanguage);\n\n    if (oLanguage.sUrl) {\n      /* Get the language definitions from a file - because this Ajax call makes the language\n       * get async to the remainder of this function we use bInitHandedOff to indicate that\n       * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor\n       */\n      $.ajax({\n        dataType: 'json',\n        url: oLanguage.sUrl,\n        success: function (json) {\n          _fnCamelToHungarian(defaults.oLanguage, json);\n\n          _fnLanguageCompat(json);\n\n          $.extend(true, oLanguage, json, oSettings.oInit.oLanguage);\n\n          _fnCallbackFire(oSettings, null, 'i18n', [oSettings]);\n\n          _fnInitialise(oSettings);\n        },\n        error: function () {\n          // Error occurred loading language file, continue on as best we can\n          _fnInitialise(oSettings);\n        }\n      });\n      bInitHandedOff = true;\n    } else {\n      _fnCallbackFire(oSettings, null, 'i18n', [oSettings]);\n    }\n    /*\n     * Stripes\n     */\n\n\n    if (oInit.asStripeClasses === null) {\n      oSettings.asStripeClasses = [oClasses.sStripeOdd, oClasses.sStripeEven];\n    }\n    /* Remove row stripe classes if they are already on the table row */\n\n\n    var stripeClasses = oSettings.asStripeClasses;\n    var rowOne = $this.children('tbody').find('tr').eq(0);\n\n    if ($.inArray(true, $.map(stripeClasses, function (el, i) {\n      return rowOne.hasClass(el);\n    })) !== -1) {\n      $('tbody tr', this).removeClass(stripeClasses.join(' '));\n      oSettings.asDestroyStripes = stripeClasses.slice();\n    }\n    /*\n     * Columns\n     * See if we should load columns automatically or use defined ones\n     */\n\n\n    var anThs = [];\n    var aoColumnsInit;\n    var nThead = this.getElementsByTagName('thead');\n\n    if (nThead.length !== 0) {\n      _fnDetectHeader(oSettings.aoHeader, nThead[0]);\n\n      anThs = _fnGetUniqueThs(oSettings);\n    }\n    /* If not given a column array, generate one with nulls */\n\n\n    if (oInit.aoColumns === null) {\n      aoColumnsInit = [];\n\n      for (i = 0, iLen = anThs.length; i < iLen; i++) {\n        aoColumnsInit.push(null);\n      }\n    } else {\n      aoColumnsInit = oInit.aoColumns;\n    }\n    /* Add the columns */\n\n\n    for (i = 0, iLen = aoColumnsInit.length; i < iLen; i++) {\n      _fnAddColumn(oSettings, anThs ? anThs[i] : null);\n    }\n    /* Apply the column definitions */\n\n\n    _fnApplyColumnDefs(oSettings, oInit.aoColumnDefs, aoColumnsInit, function (iCol, oDef) {\n      _fnColumnOptions(oSettings, iCol, oDef);\n    });\n    /* HTML5 attribute detection - build an mData object automatically if the\n     * attributes are found\n     */\n\n\n    if (rowOne.length) {\n      var a = function (cell, name) {\n        return cell.getAttribute('data-' + name) !== null ? name : null;\n      };\n\n      $(rowOne[0]).children('th, td').each(function (i, cell) {\n        var col = oSettings.aoColumns[i];\n\n        if (!col) {\n          _fnLog(oSettings, 0, 'Incorrect column count', 18);\n        }\n\n        if (col.mData === i) {\n          var sort = a(cell, 'sort') || a(cell, 'order');\n          var filter = a(cell, 'filter') || a(cell, 'search');\n\n          if (sort !== null || filter !== null) {\n            col.mData = {\n              _: i + '.display',\n              sort: sort !== null ? i + '.@data-' + sort : undefined,\n              type: sort !== null ? i + '.@data-' + sort : undefined,\n              filter: filter !== null ? i + '.@data-' + filter : undefined\n            };\n\n            _fnColumnOptions(oSettings, i);\n          }\n        }\n      });\n    }\n\n    var features = oSettings.oFeatures;\n\n    var loadedInit = function () {\n      /*\n       * Sorting\n       * @todo For modularisation (1.11) this needs to do into a sort start up handler\n       */\n      // If aaSorting is not defined, then we use the first indicator in asSorting\n      // in case that has been altered, so the default sort reflects that option\n      if (oInit.aaSorting === undefined) {\n        var sorting = oSettings.aaSorting;\n\n        for (i = 0, iLen = sorting.length; i < iLen; i++) {\n          sorting[i][1] = oSettings.aoColumns[i].asSorting[0];\n        }\n      }\n      /* Do a first pass on the sorting classes (allows any size changes to be taken into\n       * account, and also will apply sorting disabled classes if disabled\n       */\n\n\n      _fnSortingClasses(oSettings);\n\n      if (features.bSort) {\n        _fnCallbackReg(oSettings, 'aoDrawCallback', function () {\n          if (oSettings.bSorted) {\n            var aSort = _fnSortFlatten(oSettings);\n\n            var sortedColumns = {};\n            $.each(aSort, function (i, val) {\n              sortedColumns[val.src] = val.dir;\n            });\n\n            _fnCallbackFire(oSettings, null, 'order', [oSettings, aSort, sortedColumns]);\n\n            _fnSortAria(oSettings);\n          }\n        });\n      }\n\n      _fnCallbackReg(oSettings, 'aoDrawCallback', function () {\n        if (oSettings.bSorted || _fnDataSource(oSettings) === 'ssp' || features.bDeferRender) {\n          _fnSortingClasses(oSettings);\n        }\n      }, 'sc');\n      /*\n       * Final init\n       * Cache the header, body and footer as required, creating them if needed\n       */\n      // Work around for Webkit bug 83867 - store the caption-side before removing from doc\n\n\n      var captions = $this.children('caption').each(function () {\n        this._captionSide = $(this).css('caption-side');\n      });\n      var thead = $this.children('thead');\n\n      if (thead.length === 0) {\n        thead = $('<thead/>').appendTo($this);\n      }\n\n      oSettings.nTHead = thead[0];\n      var tbody = $this.children('tbody');\n\n      if (tbody.length === 0) {\n        tbody = $('<tbody/>').insertAfter(thead);\n      }\n\n      oSettings.nTBody = tbody[0];\n      var tfoot = $this.children('tfoot');\n\n      if (tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== \"\" || oSettings.oScroll.sY !== \"\")) {\n        // If we are a scrolling table, and no footer has been given, then we need to create\n        // a tfoot element for the caption element to be appended to\n        tfoot = $('<tfoot/>').appendTo($this);\n      }\n\n      if (tfoot.length === 0 || tfoot.children().length === 0) {\n        $this.addClass(oClasses.sNoFooter);\n      } else if (tfoot.length > 0) {\n        oSettings.nTFoot = tfoot[0];\n\n        _fnDetectHeader(oSettings.aoFooter, oSettings.nTFoot);\n      }\n      /* Check if there is data passing into the constructor */\n\n\n      if (oInit.aaData) {\n        for (i = 0; i < oInit.aaData.length; i++) {\n          _fnAddData(oSettings, oInit.aaData[i]);\n        }\n      } else if (oSettings.bDeferLoading || _fnDataSource(oSettings) == 'dom') {\n        /* Grab the data from the page - only do this when deferred loading or no Ajax\n         * source since there is no point in reading the DOM data if we are then going\n         * to replace it with Ajax data\n         */\n        _fnAddTr(oSettings, $(oSettings.nTBody).children('tr'));\n      }\n      /* Copy the data index array */\n\n\n      oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n      /* Initialisation complete - table can be drawn */\n\n      oSettings.bInitialised = true;\n      /* Check if we need to initialise the table (it might not have been handed off to the\n       * language processor)\n       */\n\n      if (bInitHandedOff === false) {\n        _fnInitialise(oSettings);\n      }\n    };\n    /* Must be done after everything which can be overridden by the state saving! */\n\n\n    _fnCallbackReg(oSettings, 'aoDrawCallback', _fnSaveState, 'state_save');\n\n    if (oInit.bStateSave) {\n      features.bStateSave = true;\n\n      _fnLoadState(oSettings, oInit, loadedInit);\n    } else {\n      loadedInit();\n    }\n  });\n  _that = null;\n  return this;\n};\n/*\n * It is useful to have variables which are scoped locally so only the\n * DataTables functions can access them and they don't leak into global space.\n * At the same time these functions are often useful over multiple files in the\n * core and API, so we list, or at least document, all variables which are used\n * by DataTables as private variables here. This also ensures that there is no\n * clashing of variable names and that they can easily referenced for reuse.\n */\n// Defined else where\n//  _selector_run\n//  _selector_opts\n//  _selector_first\n//  _selector_row_indexes\n\n\nvar _ext; // DataTable.ext\n\n\nvar _Api; // DataTable.Api\n\n\nvar _api_register; // DataTable.Api.register\n\n\nvar _api_registerPlural; // DataTable.Api.registerPlural\n\n\nvar _re_dic = {};\nvar _re_new_lines = /[\\r\\n\\u2028]/g;\nvar _re_html = /<.*?>/g; // This is not strict ISO8601 - Date.parse() is quite lax, although\n// implementations differ between browsers.\n\nvar _re_date = /^\\d{2,4}[\\.\\/\\-]\\d{1,2}[\\.\\/\\-]\\d{1,2}([T ]{1}\\d{1,2}[:\\.]\\d{2}([\\.:]\\d{2})?)?$/; // Escape regular expression special characters\n\nvar _re_escape_regex = new RegExp('(\\\\' + ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-'].join('|\\\\') + ')', 'g'); // http://en.wikipedia.org/wiki/Foreign_exchange_market\n// - \\u20BD - Russian ruble.\n// - \\u20a9 - South Korean Won\n// - \\u20BA - Turkish Lira\n// - \\u20B9 - Indian Rupee\n// - R - Brazil (R$) and South Africa\n// - fr - Swiss Franc\n// - kr - Swedish krona, Norwegian krone and Danish krone\n// - \\u2009 is thin space and \\u202F is narrow no-break space, both used in many\n// - É - Bitcoin\n// - Î - Ethereum\n//   standards as thousands separators.\n\n\nvar _re_formatted_numeric = /['\\u00A0,$Â£â¬Â¥%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfkÉÎ]/gi;\n\nvar _empty = function (d) {\n  return !d || d === true || d === '-' ? true : false;\n};\n\nvar _intVal = function (s) {\n  var integer = parseInt(s, 10);\n  return !isNaN(integer) && isFinite(s) ? integer : null;\n}; // Convert from a formatted number with characters other than `.` as the\n// decimal place, to a Javascript number\n\n\nvar _numToDecimal = function (num, decimalPoint) {\n  // Cache created regular expressions for speed as this function is called often\n  if (!_re_dic[decimalPoint]) {\n    _re_dic[decimalPoint] = new RegExp(_fnEscapeRegex(decimalPoint), 'g');\n  }\n\n  return typeof num === 'string' && decimalPoint !== '.' ? num.replace(/\\./g, '').replace(_re_dic[decimalPoint], '.') : num;\n};\n\nvar _isNumber = function (d, decimalPoint, formatted) {\n  var strType = typeof d === 'string'; // If empty return immediately so there must be a number if it is a\n  // formatted string (this stops the string \"k\", or \"kr\", etc being detected\n  // as a formatted number for currency\n\n  if (_empty(d)) {\n    return true;\n  }\n\n  if (decimalPoint && strType) {\n    d = _numToDecimal(d, decimalPoint);\n  }\n\n  if (formatted && strType) {\n    d = d.replace(_re_formatted_numeric, '');\n  }\n\n  return !isNaN(parseFloat(d)) && isFinite(d);\n}; // A string without HTML in it can be considered to be HTML still\n\n\nvar _isHtml = function (d) {\n  return _empty(d) || typeof d === 'string';\n};\n\nvar _htmlNumeric = function (d, decimalPoint, formatted) {\n  if (_empty(d)) {\n    return true;\n  }\n\n  var html = _isHtml(d);\n\n  return !html ? null : _isNumber(_stripHtml(d), decimalPoint, formatted) ? true : null;\n};\n\nvar _pluck = function (a, prop, prop2) {\n  var out = [];\n  var i = 0,\n      ien = a.length; // Could have the test in the loop for slightly smaller code, but speed\n  // is essential here\n\n  if (prop2 !== undefined) {\n    for (; i < ien; i++) {\n      if (a[i] && a[i][prop]) {\n        out.push(a[i][prop][prop2]);\n      }\n    }\n  } else {\n    for (; i < ien; i++) {\n      if (a[i]) {\n        out.push(a[i][prop]);\n      }\n    }\n  }\n\n  return out;\n}; // Basically the same as _pluck, but rather than looping over `a` we use `order`\n// as the indexes to pick from `a`\n\n\nvar _pluck_order = function (a, order, prop, prop2) {\n  var out = [];\n  var i = 0,\n      ien = order.length; // Could have the test in the loop for slightly smaller code, but speed\n  // is essential here\n\n  if (prop2 !== undefined) {\n    for (; i < ien; i++) {\n      if (a[order[i]][prop]) {\n        out.push(a[order[i]][prop][prop2]);\n      }\n    }\n  } else {\n    for (; i < ien; i++) {\n      out.push(a[order[i]][prop]);\n    }\n  }\n\n  return out;\n};\n\nvar _range = function (len, start) {\n  var out = [];\n  var end;\n\n  if (start === undefined) {\n    start = 0;\n    end = len;\n  } else {\n    end = start;\n    start = len;\n  }\n\n  for (var i = start; i < end; i++) {\n    out.push(i);\n  }\n\n  return out;\n};\n\nvar _removeEmpty = function (a) {\n  var out = [];\n\n  for (var i = 0, ien = a.length; i < ien; i++) {\n    if (a[i]) {\n      // careful - will remove all falsy values!\n      out.push(a[i]);\n    }\n  }\n\n  return out;\n};\n\nvar _stripHtml = function (d) {\n  return d.replace(_re_html, '');\n};\n/**\n * Determine if all values in the array are unique. This means we can short\n * cut the _unique method at the cost of a single loop. A sorted array is used\n * to easily check the values.\n *\n * @param  {array} src Source array\n * @return {boolean} true if all unique, false otherwise\n * @ignore\n */\n\n\nvar _areAllUnique = function (src) {\n  if (src.length < 2) {\n    return true;\n  }\n\n  var sorted = src.slice().sort();\n  var last = sorted[0];\n\n  for (var i = 1, ien = sorted.length; i < ien; i++) {\n    if (sorted[i] === last) {\n      return false;\n    }\n\n    last = sorted[i];\n  }\n\n  return true;\n};\n/**\n * Find the unique elements in a source array.\n *\n * @param  {array} src Source array\n * @return {array} Array of unique items\n * @ignore\n */\n\n\nvar _unique = function (src) {\n  if (_areAllUnique(src)) {\n    return src.slice();\n  } // A faster unique method is to use object keys to identify used values,\n  // but this doesn't work with arrays or objects, which we must also\n  // consider. See jsperf.com/compare-array-unique-versions/4 for more\n  // information.\n\n\n  var out = [],\n      val,\n      i,\n      ien = src.length,\n      j,\n      k = 0;\n\n  again: for (i = 0; i < ien; i++) {\n    val = src[i];\n\n    for (j = 0; j < k; j++) {\n      if (out[j] === val) {\n        continue again;\n      }\n    }\n\n    out.push(val);\n    k++;\n  }\n\n  return out;\n}; // Surprisingly this is faster than [].concat.apply\n// https://jsperf.com/flatten-an-array-loop-vs-reduce/2\n\n\nvar _flatten = function (out, val) {\n  if (Array.isArray(val)) {\n    for (var i = 0; i < val.length; i++) {\n      _flatten(out, val[i]);\n    }\n  } else {\n    out.push(val);\n  }\n\n  return out;\n};\n\nvar _includes = function (search, start) {\n  if (start === undefined) {\n    start = 0;\n  }\n\n  return this.indexOf(search, start) !== -1;\n}; // Array.isArray polyfill.\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray\n\n\nif (!Array.isArray) {\n  Array.isArray = function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n  };\n}\n\nif (!Array.prototype.includes) {\n  Array.prototype.includes = _includes;\n} // .trim() polyfill\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/trim\n\n\nif (!String.prototype.trim) {\n  String.prototype.trim = function () {\n    return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  };\n}\n\nif (!String.prototype.includes) {\n  String.prototype.includes = _includes;\n}\n/**\n * DataTables utility methods\n * \n * This namespace provides helper methods that DataTables uses internally to\n * create a DataTable, but which are not exclusively used only for DataTables.\n * These methods can be used by extension authors to save the duplication of\n * code.\n *\n *  @namespace\n */\n\n\nDataTable.util = {\n  /**\n   * Throttle the calls to a function. Arguments and context are maintained\n   * for the throttled function.\n   *\n   * @param {function} fn Function to be called\n   * @param {integer} freq Call frequency in mS\n   * @return {function} Wrapped function\n   */\n  throttle: function (fn, freq) {\n    var frequency = freq !== undefined ? freq : 200,\n        last,\n        timer;\n    return function () {\n      var that = this,\n          now = +new Date(),\n          args = arguments;\n\n      if (last && now < last + frequency) {\n        clearTimeout(timer);\n        timer = setTimeout(function () {\n          last = undefined;\n          fn.apply(that, args);\n        }, frequency);\n      } else {\n        last = now;\n        fn.apply(that, args);\n      }\n    };\n  },\n\n  /**\n   * Escape a string such that it can be used in a regular expression\n   *\n   *  @param {string} val string to escape\n   *  @returns {string} escaped string\n   */\n  escapeRegex: function (val) {\n    return val.replace(_re_escape_regex, '\\\\$1');\n  },\n\n  /**\n   * Create a function that will write to a nested object or array\n   * @param {*} source JSON notation string\n   * @returns Write function\n   */\n  set: function (source) {\n    if ($.isPlainObject(source)) {\n      /* Unlike get, only the underscore (global) option is used for for\n       * setting data since we don't know the type here. This is why an object\n       * option is not documented for `mData` (which is read/write), but it is\n       * for `mRender` which is read only.\n       */\n      return DataTable.util.set(source._);\n    } else if (source === null) {\n      // Nothing to do when the data source is null\n      return function () {};\n    } else if (typeof source === 'function') {\n      return function (data, val, meta) {\n        source(data, 'set', val, meta);\n      };\n    } else if (typeof source === 'string' && (source.indexOf('.') !== -1 || source.indexOf('[') !== -1 || source.indexOf('(') !== -1)) {\n      // Like the get, we need to get data from a nested object\n      var setData = function (data, val, src) {\n        var a = _fnSplitObjNotation(src),\n            b;\n\n        var aLast = a[a.length - 1];\n        var arrayNotation, funcNotation, o, innerSrc;\n\n        for (var i = 0, iLen = a.length - 1; i < iLen; i++) {\n          // Protect against prototype pollution\n          if (a[i] === '__proto__' || a[i] === 'constructor') {\n            throw new Error('Cannot set prototype values');\n          } // Check if we are dealing with an array notation request\n\n\n          arrayNotation = a[i].match(__reArray);\n          funcNotation = a[i].match(__reFn);\n\n          if (arrayNotation) {\n            a[i] = a[i].replace(__reArray, '');\n            data[a[i]] = []; // Get the remainder of the nested object to set so we can recurse\n\n            b = a.slice();\n            b.splice(0, i + 1);\n            innerSrc = b.join('.'); // Traverse each entry in the array setting the properties requested\n\n            if (Array.isArray(val)) {\n              for (var j = 0, jLen = val.length; j < jLen; j++) {\n                o = {};\n                setData(o, val[j], innerSrc);\n                data[a[i]].push(o);\n              }\n            } else {\n              // We've been asked to save data to an array, but it\n              // isn't array data to be saved. Best that can be done\n              // is to just save the value.\n              data[a[i]] = val;\n            } // The inner call to setData has already traversed through the remainder\n            // of the source and has set the data, thus we can exit here\n\n\n            return;\n          } else if (funcNotation) {\n            // Function call\n            a[i] = a[i].replace(__reFn, '');\n            data = data[a[i]](val);\n          } // If the nested object doesn't currently exist - since we are\n          // trying to set the value - create it\n\n\n          if (data[a[i]] === null || data[a[i]] === undefined) {\n            data[a[i]] = {};\n          }\n\n          data = data[a[i]];\n        } // Last item in the input - i.e, the actual set\n\n\n        if (aLast.match(__reFn)) {\n          // Function call\n          data = data[aLast.replace(__reFn, '')](val);\n        } else {\n          // If array notation is used, we just want to strip it and use the property name\n          // and assign the value. If it isn't used, then we get the result we want anyway\n          data[aLast.replace(__reArray, '')] = val;\n        }\n      };\n\n      return function (data, val) {\n        // meta is also passed in, but not used\n        return setData(data, val, source);\n      };\n    } else {\n      // Array or flat object mapping\n      return function (data, val) {\n        // meta is also passed in, but not used\n        data[source] = val;\n      };\n    }\n  },\n\n  /**\n   * Create a function that will read nested objects from arrays, based on JSON notation\n   * @param {*} source JSON notation string\n   * @returns Value read\n   */\n  get: function (source) {\n    if ($.isPlainObject(source)) {\n      // Build an object of get functions, and wrap them in a single call\n      var o = {};\n      $.each(source, function (key, val) {\n        if (val) {\n          o[key] = DataTable.util.get(val);\n        }\n      });\n      return function (data, type, row, meta) {\n        var t = o[type] || o._;\n        return t !== undefined ? t(data, type, row, meta) : data;\n      };\n    } else if (source === null) {\n      // Give an empty string for rendering / sorting etc\n      return function (data) {\n        // type, row and meta also passed, but not used\n        return data;\n      };\n    } else if (typeof source === 'function') {\n      return function (data, type, row, meta) {\n        return source(data, type, row, meta);\n      };\n    } else if (typeof source === 'string' && (source.indexOf('.') !== -1 || source.indexOf('[') !== -1 || source.indexOf('(') !== -1)) {\n      /* If there is a . in the source string then the data source is in a\n       * nested object so we loop over the data for each level to get the next\n       * level down. On each loop we test for undefined, and if found immediately\n       * return. This allows entire objects to be missing and sDefaultContent to\n       * be used if defined, rather than throwing an error\n       */\n      var fetchData = function (data, type, src) {\n        var arrayNotation, funcNotation, out, innerSrc;\n\n        if (src !== \"\") {\n          var a = _fnSplitObjNotation(src);\n\n          for (var i = 0, iLen = a.length; i < iLen; i++) {\n            // Check if we are dealing with special notation\n            arrayNotation = a[i].match(__reArray);\n            funcNotation = a[i].match(__reFn);\n\n            if (arrayNotation) {\n              // Array notation\n              a[i] = a[i].replace(__reArray, ''); // Condition allows simply [] to be passed in\n\n              if (a[i] !== \"\") {\n                data = data[a[i]];\n              }\n\n              out = []; // Get the remainder of the nested object to get\n\n              a.splice(0, i + 1);\n              innerSrc = a.join('.'); // Traverse each entry in the array getting the properties requested\n\n              if (Array.isArray(data)) {\n                for (var j = 0, jLen = data.length; j < jLen; j++) {\n                  out.push(fetchData(data[j], type, innerSrc));\n                }\n              } // If a string is given in between the array notation indicators, that\n              // is used to join the strings together, otherwise an array is returned\n\n\n              var join = arrayNotation[0].substring(1, arrayNotation[0].length - 1);\n              data = join === \"\" ? out : out.join(join); // The inner call to fetchData has already traversed through the remainder\n              // of the source requested, so we exit from the loop\n\n              break;\n            } else if (funcNotation) {\n              // Function call\n              a[i] = a[i].replace(__reFn, '');\n              data = data[a[i]]();\n              continue;\n            }\n\n            if (data === null || data[a[i]] === undefined) {\n              return undefined;\n            }\n\n            data = data[a[i]];\n          }\n        }\n\n        return data;\n      };\n\n      return function (data, type) {\n        // row and meta also passed, but not used\n        return fetchData(data, type, source);\n      };\n    } else {\n      // Array or flat object mapping\n      return function (data, type) {\n        // row and meta also passed, but not used\n        return data[source];\n      };\n    }\n  }\n};\n/**\n * Create a mapping object that allows camel case parameters to be looked up\n * for their Hungarian counterparts. The mapping is stored in a private\n * parameter called `_hungarianMap` which can be accessed on the source object.\n *  @param {object} o\n *  @memberof DataTable#oApi\n */\n\nfunction _fnHungarianMap(o) {\n  var hungarian = 'a aa ai ao as b fn i m o s ',\n      match,\n      newKey,\n      map = {};\n  $.each(o, function (key, val) {\n    match = key.match(/^([^A-Z]+?)([A-Z])/);\n\n    if (match && hungarian.indexOf(match[1] + ' ') !== -1) {\n      newKey = key.replace(match[0], match[2].toLowerCase());\n      map[newKey] = key;\n\n      if (match[1] === 'o') {\n        _fnHungarianMap(o[key]);\n      }\n    }\n  });\n  o._hungarianMap = map;\n}\n/**\n * Convert from camel case parameters to Hungarian, based on a Hungarian map\n * created by _fnHungarianMap.\n *  @param {object} src The model object which holds all parameters that can be\n *    mapped.\n *  @param {object} user The object to convert from camel case to Hungarian.\n *  @param {boolean} force When set to `true`, properties which already have a\n *    Hungarian value in the `user` object will be overwritten. Otherwise they\n *    won't be.\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnCamelToHungarian(src, user, force) {\n  if (!src._hungarianMap) {\n    _fnHungarianMap(src);\n  }\n\n  var hungarianKey;\n  $.each(user, function (key, val) {\n    hungarianKey = src._hungarianMap[key];\n\n    if (hungarianKey !== undefined && (force || user[hungarianKey] === undefined)) {\n      // For objects, we need to buzz down into the object to copy parameters\n      if (hungarianKey.charAt(0) === 'o') {\n        // Copy the camelCase options over to the hungarian\n        if (!user[hungarianKey]) {\n          user[hungarianKey] = {};\n        }\n\n        $.extend(true, user[hungarianKey], user[key]);\n\n        _fnCamelToHungarian(src[hungarianKey], user[hungarianKey], force);\n      } else {\n        user[hungarianKey] = user[key];\n      }\n    }\n  });\n}\n/**\n * Language compatibility - when certain options are given, and others aren't, we\n * need to duplicate the values over, in order to provide backwards compatibility\n * with older language files.\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnLanguageCompat(lang) {\n  // Note the use of the Hungarian notation for the parameters in this method as\n  // this is called after the mapping of camelCase to Hungarian\n  var defaults = DataTable.defaults.oLanguage; // Default mapping\n\n  var defaultDecimal = defaults.sDecimal;\n\n  if (defaultDecimal) {\n    _addNumericSort(defaultDecimal);\n  }\n\n  if (lang) {\n    var zeroRecords = lang.sZeroRecords; // Backwards compatibility - if there is no sEmptyTable given, then use the same as\n    // sZeroRecords - assuming that is given.\n\n    if (!lang.sEmptyTable && zeroRecords && defaults.sEmptyTable === \"No data available in table\") {\n      _fnMap(lang, lang, 'sZeroRecords', 'sEmptyTable');\n    } // Likewise with loading records\n\n\n    if (!lang.sLoadingRecords && zeroRecords && defaults.sLoadingRecords === \"Loading...\") {\n      _fnMap(lang, lang, 'sZeroRecords', 'sLoadingRecords');\n    } // Old parameter name of the thousands separator mapped onto the new\n\n\n    if (lang.sInfoThousands) {\n      lang.sThousands = lang.sInfoThousands;\n    }\n\n    var decimal = lang.sDecimal;\n\n    if (decimal && defaultDecimal !== decimal) {\n      _addNumericSort(decimal);\n    }\n  }\n}\n/**\n * Map one parameter onto another\n *  @param {object} o Object to map\n *  @param {*} knew The new parameter name\n *  @param {*} old The old parameter name\n */\n\n\nvar _fnCompatMap = function (o, knew, old) {\n  if (o[knew] !== undefined) {\n    o[old] = o[knew];\n  }\n};\n/**\n * Provide backwards compatibility for the main DT options. Note that the new\n * options are mapped onto the old parameters, so this is an external interface\n * change only.\n *  @param {object} init Object to map\n */\n\n\nfunction _fnCompatOpts(init) {\n  _fnCompatMap(init, 'ordering', 'bSort');\n\n  _fnCompatMap(init, 'orderMulti', 'bSortMulti');\n\n  _fnCompatMap(init, 'orderClasses', 'bSortClasses');\n\n  _fnCompatMap(init, 'orderCellsTop', 'bSortCellsTop');\n\n  _fnCompatMap(init, 'order', 'aaSorting');\n\n  _fnCompatMap(init, 'orderFixed', 'aaSortingFixed');\n\n  _fnCompatMap(init, 'paging', 'bPaginate');\n\n  _fnCompatMap(init, 'pagingType', 'sPaginationType');\n\n  _fnCompatMap(init, 'pageLength', 'iDisplayLength');\n\n  _fnCompatMap(init, 'searching', 'bFilter'); // Boolean initialisation of x-scrolling\n\n\n  if (typeof init.sScrollX === 'boolean') {\n    init.sScrollX = init.sScrollX ? '100%' : '';\n  }\n\n  if (typeof init.scrollX === 'boolean') {\n    init.scrollX = init.scrollX ? '100%' : '';\n  } // Column search objects are in an array, so it needs to be converted\n  // element by element\n\n\n  var searchCols = init.aoSearchCols;\n\n  if (searchCols) {\n    for (var i = 0, ien = searchCols.length; i < ien; i++) {\n      if (searchCols[i]) {\n        _fnCamelToHungarian(DataTable.models.oSearch, searchCols[i]);\n      }\n    }\n  }\n}\n/**\n * Provide backwards compatibility for column options. Note that the new options\n * are mapped onto the old parameters, so this is an external interface change\n * only.\n *  @param {object} init Object to map\n */\n\n\nfunction _fnCompatCols(init) {\n  _fnCompatMap(init, 'orderable', 'bSortable');\n\n  _fnCompatMap(init, 'orderData', 'aDataSort');\n\n  _fnCompatMap(init, 'orderSequence', 'asSorting');\n\n  _fnCompatMap(init, 'orderDataType', 'sortDataType'); // orderData can be given as an integer\n\n\n  var dataSort = init.aDataSort;\n\n  if (typeof dataSort === 'number' && !Array.isArray(dataSort)) {\n    init.aDataSort = [dataSort];\n  }\n}\n/**\n * Browser feature detection for capabilities, quirks\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnBrowserDetect(settings) {\n  // We don't need to do this every time DataTables is constructed, the values\n  // calculated are specific to the browser and OS configuration which we\n  // don't expect to change between initialisations\n  if (!DataTable.__browser) {\n    var browser = {};\n    DataTable.__browser = browser; // Scrolling feature / quirks detection\n\n    var n = $('<div/>').css({\n      position: 'fixed',\n      top: 0,\n      left: $(window).scrollLeft() * -1,\n      // allow for scrolling\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    }).append($('<div/>').css({\n      position: 'absolute',\n      top: 1,\n      left: 1,\n      width: 100,\n      overflow: 'scroll'\n    }).append($('<div/>').css({\n      width: '100%',\n      height: 10\n    }))).appendTo('body');\n    var outer = n.children();\n    var inner = outer.children(); // Numbers below, in order, are:\n    // inner.offsetWidth, inner.clientWidth, outer.offsetWidth, outer.clientWidth\n    //\n    // IE6 XP:                           100 100 100  83\n    // IE7 Vista:                        100 100 100  83\n    // IE 8+ Windows:                     83  83 100  83\n    // Evergreen Windows:                 83  83 100  83\n    // Evergreen Mac with scrollbars:     85  85 100  85\n    // Evergreen Mac without scrollbars: 100 100 100 100\n    // Get scrollbar width\n\n    browser.barWidth = outer[0].offsetWidth - outer[0].clientWidth; // IE6/7 will oversize a width 100% element inside a scrolling element, to\n    // include the width of the scrollbar, while other browsers ensure the inner\n    // element is contained without forcing scrolling\n\n    browser.bScrollOversize = inner[0].offsetWidth === 100 && outer[0].clientWidth !== 100; // In rtl text layout, some browsers (most, but not all) will place the\n    // scrollbar on the left, rather than the right.\n\n    browser.bScrollbarLeft = Math.round(inner.offset().left) !== 1; // IE8- don't provide height and width for getBoundingClientRect\n\n    browser.bBounding = n[0].getBoundingClientRect().width ? true : false;\n    n.remove();\n  }\n\n  $.extend(settings.oBrowser, DataTable.__browser);\n  settings.oScroll.iBarWidth = DataTable.__browser.barWidth;\n}\n/**\n * Array.prototype reduce[Right] method, used for browsers which don't support\n * JS 1.6. Done this way to reduce code size, since we iterate either way\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnReduce(that, fn, init, start, end, inc) {\n  var i = start,\n      value,\n      isSet = false;\n\n  if (init !== undefined) {\n    value = init;\n    isSet = true;\n  }\n\n  while (i !== end) {\n    if (!that.hasOwnProperty(i)) {\n      continue;\n    }\n\n    value = isSet ? fn(value, that[i], i, that) : that[i];\n    isSet = true;\n    i += inc;\n  }\n\n  return value;\n}\n/**\n * Add a column to the list used for the table with default values\n *  @param {object} oSettings dataTables settings object\n *  @param {node} nTh The th element for this column\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnAddColumn(oSettings, nTh) {\n  // Add column to aoColumns array\n  var oDefaults = DataTable.defaults.column;\n  var iCol = oSettings.aoColumns.length;\n  var oCol = $.extend({}, DataTable.models.oColumn, oDefaults, {\n    \"nTh\": nTh ? nTh : document.createElement('th'),\n    \"sTitle\": oDefaults.sTitle ? oDefaults.sTitle : nTh ? nTh.innerHTML : '',\n    \"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\n    \"mData\": oDefaults.mData ? oDefaults.mData : iCol,\n    idx: iCol\n  });\n  oSettings.aoColumns.push(oCol); // Add search object for column specific search. Note that the `searchCols[ iCol ]`\n  // passed into extend can be undefined. This allows the user to give a default\n  // with only some of the parameters defined, and also not give a default\n\n  var searchCols = oSettings.aoPreSearchCols;\n  searchCols[iCol] = $.extend({}, DataTable.models.oSearch, searchCols[iCol]); // Use the default column options function to initialise classes etc\n\n  _fnColumnOptions(oSettings, iCol, $(nTh).data());\n}\n/**\n * Apply options for a column\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iCol column index to consider\n *  @param {object} oOptions object with sType, bVisible and bSearchable etc\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnColumnOptions(oSettings, iCol, oOptions) {\n  var oCol = oSettings.aoColumns[iCol];\n  var oClasses = oSettings.oClasses;\n  var th = $(oCol.nTh); // Try to get width information from the DOM. We can't get it from CSS\n  // as we'd need to parse the CSS stylesheet. `width` option can override\n\n  if (!oCol.sWidthOrig) {\n    // Width attribute\n    oCol.sWidthOrig = th.attr('width') || null; // Style attribute\n\n    var t = (th.attr('style') || '').match(/width:\\s*(\\d+[pxem%]+)/);\n\n    if (t) {\n      oCol.sWidthOrig = t[1];\n    }\n  }\n  /* User specified column options */\n\n\n  if (oOptions !== undefined && oOptions !== null) {\n    // Backwards compatibility\n    _fnCompatCols(oOptions); // Map camel case parameters to their Hungarian counterparts\n\n\n    _fnCamelToHungarian(DataTable.defaults.column, oOptions, true);\n    /* Backwards compatibility for mDataProp */\n\n\n    if (oOptions.mDataProp !== undefined && !oOptions.mData) {\n      oOptions.mData = oOptions.mDataProp;\n    }\n\n    if (oOptions.sType) {\n      oCol._sManualType = oOptions.sType;\n    } // `class` is a reserved word in Javascript, so we need to provide\n    // the ability to use a valid name for the camel case input\n\n\n    if (oOptions.className && !oOptions.sClass) {\n      oOptions.sClass = oOptions.className;\n    }\n\n    if (oOptions.sClass) {\n      th.addClass(oOptions.sClass);\n    }\n\n    var origClass = oCol.sClass;\n    $.extend(oCol, oOptions);\n\n    _fnMap(oCol, oOptions, \"sWidth\", \"sWidthOrig\"); // Merge class from previously defined classes with this one, rather than just\n    // overwriting it in the extend above\n\n\n    if (origClass !== oCol.sClass) {\n      oCol.sClass = origClass + ' ' + oCol.sClass;\n    }\n    /* iDataSort to be applied (backwards compatibility), but aDataSort will take\n     * priority if defined\n     */\n\n\n    if (oOptions.iDataSort !== undefined) {\n      oCol.aDataSort = [oOptions.iDataSort];\n    }\n\n    _fnMap(oCol, oOptions, \"aDataSort\");\n  }\n  /* Cache the data get and set functions for speed */\n\n\n  var mDataSrc = oCol.mData;\n\n  var mData = _fnGetObjectDataFn(mDataSrc);\n\n  var mRender = oCol.mRender ? _fnGetObjectDataFn(oCol.mRender) : null;\n\n  var attrTest = function (src) {\n    return typeof src === 'string' && src.indexOf('@') !== -1;\n  };\n\n  oCol._bAttrSrc = $.isPlainObject(mDataSrc) && (attrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter));\n  oCol._setter = null;\n\n  oCol.fnGetData = function (rowData, type, meta) {\n    var innerData = mData(rowData, type, undefined, meta);\n    return mRender && type ? mRender(innerData, type, rowData, meta) : innerData;\n  };\n\n  oCol.fnSetData = function (rowData, val, meta) {\n    return _fnSetObjectDataFn(mDataSrc)(rowData, val, meta);\n  }; // Indicate if DataTables should read DOM data as an object or array\n  // Used in _fnGetRowElements\n\n\n  if (typeof mDataSrc !== 'number') {\n    oSettings._rowReadObject = true;\n  }\n  /* Feature sorting overrides column specific when off */\n\n\n  if (!oSettings.oFeatures.bSort) {\n    oCol.bSortable = false;\n    th.addClass(oClasses.sSortableNone); // Have to add class here as order event isn't called\n  }\n  /* Check that the class assignment is correct for sorting */\n\n\n  var bAsc = $.inArray('asc', oCol.asSorting) !== -1;\n  var bDesc = $.inArray('desc', oCol.asSorting) !== -1;\n\n  if (!oCol.bSortable || !bAsc && !bDesc) {\n    oCol.sSortingClass = oClasses.sSortableNone;\n    oCol.sSortingClassJUI = \"\";\n  } else if (bAsc && !bDesc) {\n    oCol.sSortingClass = oClasses.sSortableAsc;\n    oCol.sSortingClassJUI = oClasses.sSortJUIAscAllowed;\n  } else if (!bAsc && bDesc) {\n    oCol.sSortingClass = oClasses.sSortableDesc;\n    oCol.sSortingClassJUI = oClasses.sSortJUIDescAllowed;\n  } else {\n    oCol.sSortingClass = oClasses.sSortable;\n    oCol.sSortingClassJUI = oClasses.sSortJUI;\n  }\n}\n/**\n * Adjust the table column widths for new data. Note: you would probably want to\n * do a redraw after calling this function!\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnAdjustColumnSizing(settings) {\n  /* Not interested in doing column width calculation if auto-width is disabled */\n  if (settings.oFeatures.bAutoWidth !== false) {\n    var columns = settings.aoColumns;\n\n    _fnCalculateColumnWidths(settings);\n\n    for (var i = 0, iLen = columns.length; i < iLen; i++) {\n      columns[i].nTh.style.width = columns[i].sWidth;\n    }\n  }\n\n  var scroll = settings.oScroll;\n\n  if (scroll.sY !== '' || scroll.sX !== '') {\n    _fnScrollDraw(settings);\n  }\n\n  _fnCallbackFire(settings, null, 'column-sizing', [settings]);\n}\n/**\n * Convert the index of a visible column to the index in the data array (take account\n * of hidden columns)\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iMatch Visible column index to lookup\n *  @returns {int} i the data index\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnVisibleToColumnIndex(oSettings, iMatch) {\n  var aiVis = _fnGetColumns(oSettings, 'bVisible');\n\n  return typeof aiVis[iMatch] === 'number' ? aiVis[iMatch] : null;\n}\n/**\n * Convert the index of an index in the data array and convert it to the visible\n *   column index (take account of hidden columns)\n *  @param {int} iMatch Column index to lookup\n *  @param {object} oSettings dataTables settings object\n *  @returns {int} i the data index\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnColumnIndexToVisible(oSettings, iMatch) {\n  var aiVis = _fnGetColumns(oSettings, 'bVisible');\n\n  var iPos = $.inArray(iMatch, aiVis);\n  return iPos !== -1 ? iPos : null;\n}\n/**\n * Get the number of visible columns\n *  @param {object} oSettings dataTables settings object\n *  @returns {int} i the number of visible columns\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnVisbleColumns(oSettings) {\n  var vis = 0; // No reduce in IE8, use a loop for now\n\n  $.each(oSettings.aoColumns, function (i, col) {\n    if (col.bVisible && $(col.nTh).css('display') !== 'none') {\n      vis++;\n    }\n  });\n  return vis;\n}\n/**\n * Get an array of column indexes that match a given property\n *  @param {object} oSettings dataTables settings object\n *  @param {string} sParam Parameter in aoColumns to look for - typically\n *    bVisible or bSearchable\n *  @returns {array} Array of indexes with matched properties\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnGetColumns(oSettings, sParam) {\n  var a = [];\n  $.map(oSettings.aoColumns, function (val, i) {\n    if (val[sParam]) {\n      a.push(i);\n    }\n  });\n  return a;\n}\n/**\n * Calculate the 'type' of a column\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnColumnTypes(settings) {\n  var columns = settings.aoColumns;\n  var data = settings.aoData;\n  var types = DataTable.ext.type.detect;\n  var i, ien, j, jen, k, ken;\n  var col, cell, detectedType, cache; // For each column, spin over the \n\n  for (i = 0, ien = columns.length; i < ien; i++) {\n    col = columns[i];\n    cache = [];\n\n    if (!col.sType && col._sManualType) {\n      col.sType = col._sManualType;\n    } else if (!col.sType) {\n      for (j = 0, jen = types.length; j < jen; j++) {\n        for (k = 0, ken = data.length; k < ken; k++) {\n          // Use a cache array so we only need to get the type data\n          // from the formatter once (when using multiple detectors)\n          if (cache[k] === undefined) {\n            cache[k] = _fnGetCellData(settings, k, i, 'type');\n          }\n\n          detectedType = types[j](cache[k], settings); // If null, then this type can't apply to this column, so\n          // rather than testing all cells, break out. There is an\n          // exception for the last type which is `html`. We need to\n          // scan all rows since it is possible to mix string and HTML\n          // types\n\n          if (!detectedType && j !== types.length - 1) {\n            break;\n          } // Only a single match is needed for html type since it is\n          // bottom of the pile and very similar to string - but it\n          // must not be empty\n\n\n          if (detectedType === 'html' && !_empty(cache[k])) {\n            break;\n          }\n        } // Type is valid for all data points in the column - use this\n        // type\n\n\n        if (detectedType) {\n          col.sType = detectedType;\n          break;\n        }\n      } // Fall back - if no type was detected, always use string\n\n\n      if (!col.sType) {\n        col.sType = 'string';\n      }\n    }\n  }\n}\n/**\n * Take the column definitions and static columns arrays and calculate how\n * they relate to column indexes. The callback function will then apply the\n * definition found for a column to a suitable configuration object.\n *  @param {object} oSettings dataTables settings object\n *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\n *  @param {array} aoCols The aoColumns array that defines columns individually\n *  @param {function} fn Callback function - takes two parameters, the calculated\n *    column index and the definition for that column.\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnApplyColumnDefs(oSettings, aoColDefs, aoCols, fn) {\n  var i, iLen, j, jLen, k, kLen, def;\n  var columns = oSettings.aoColumns; // Column definitions with aTargets\n\n  if (aoColDefs) {\n    /* Loop over the definitions array - loop in reverse so first instance has priority */\n    for (i = aoColDefs.length - 1; i >= 0; i--) {\n      def = aoColDefs[i];\n      /* Each definition can target multiple columns, as it is an array */\n\n      var aTargets = def.target !== undefined ? def.target : def.targets !== undefined ? def.targets : def.aTargets;\n\n      if (!Array.isArray(aTargets)) {\n        aTargets = [aTargets];\n      }\n\n      for (j = 0, jLen = aTargets.length; j < jLen; j++) {\n        if (typeof aTargets[j] === 'number' && aTargets[j] >= 0) {\n          /* Add columns that we don't yet know about */\n          while (columns.length <= aTargets[j]) {\n            _fnAddColumn(oSettings);\n          }\n          /* Integer, basic index */\n\n\n          fn(aTargets[j], def);\n        } else if (typeof aTargets[j] === 'number' && aTargets[j] < 0) {\n          /* Negative integer, right to left column counting */\n          fn(columns.length + aTargets[j], def);\n        } else if (typeof aTargets[j] === 'string') {\n          /* Class name matching on TH element */\n          for (k = 0, kLen = columns.length; k < kLen; k++) {\n            if (aTargets[j] == \"_all\" || $(columns[k].nTh).hasClass(aTargets[j])) {\n              fn(k, def);\n            }\n          }\n        }\n      }\n    }\n  } // Statically defined columns array\n\n\n  if (aoCols) {\n    for (i = 0, iLen = aoCols.length; i < iLen; i++) {\n      fn(i, aoCols[i]);\n    }\n  }\n}\n/**\n * Add a data array to the table, creating DOM node etc. This is the parallel to\n * _fnGatherData, but for adding rows from a Javascript source, rather than a\n * DOM source.\n *  @param {object} oSettings dataTables settings object\n *  @param {array} aData data array to be added\n *  @param {node} [nTr] TR element to add to the table - optional. If not given,\n *    DataTables will create a row automatically\n *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n *    if nTr is.\n *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnAddData(oSettings, aDataIn, nTr, anTds) {\n  /* Create the object for storing information about this new row */\n  var iRow = oSettings.aoData.length;\n  var oData = $.extend(true, {}, DataTable.models.oRow, {\n    src: nTr ? 'dom' : 'data',\n    idx: iRow\n  });\n  oData._aData = aDataIn;\n  oSettings.aoData.push(oData);\n  /* Create the cells */\n\n  var nTd, sThisType;\n  var columns = oSettings.aoColumns; // Invalidate the column types as the new data needs to be revalidated\n\n  for (var i = 0, iLen = columns.length; i < iLen; i++) {\n    columns[i].sType = null;\n  }\n  /* Add to the display array */\n\n\n  oSettings.aiDisplayMaster.push(iRow);\n  var id = oSettings.rowIdFn(aDataIn);\n\n  if (id !== undefined) {\n    oSettings.aIds[id] = oData;\n  }\n  /* Create the DOM information, or register it if already present */\n\n\n  if (nTr || !oSettings.oFeatures.bDeferRender) {\n    _fnCreateTr(oSettings, iRow, nTr, anTds);\n  }\n\n  return iRow;\n}\n/**\n * Add one or more TR elements to the table. Generally we'd expect to\n * use this for reading data from a DOM sourced table, but it could be\n * used for an TR element. Note that if a TR is given, it is used (i.e.\n * it is not cloned).\n *  @param {object} settings dataTables settings object\n *  @param {array|node|jQuery} trs The TR element(s) to add to the table\n *  @returns {array} Array of indexes for the added rows\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnAddTr(settings, trs) {\n  var row; // Allow an individual node to be passed in\n\n  if (!(trs instanceof $)) {\n    trs = $(trs);\n  }\n\n  return trs.map(function (i, el) {\n    row = _fnGetRowElements(settings, el);\n    return _fnAddData(settings, row.data, el, row.cells);\n  });\n}\n/**\n * Take a TR element and convert it to an index in aoData\n *  @param {object} oSettings dataTables settings object\n *  @param {node} n the TR element to find\n *  @returns {int} index if the node is found, null if not\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnNodeToDataIndex(oSettings, n) {\n  return n._DT_RowIndex !== undefined ? n._DT_RowIndex : null;\n}\n/**\n * Take a TD element and convert it into a column data index (not the visible index)\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iRow The row number the TD/TH can be found in\n *  @param {node} n The TD/TH element to find\n *  @returns {int} index if the node is found, -1 if not\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnNodeToColumnIndex(oSettings, iRow, n) {\n  return $.inArray(n, oSettings.aoData[iRow].anCells);\n}\n/**\n * Get the data for a given cell from the internal cache, taking into account data mapping\n *  @param {object} settings dataTables settings object\n *  @param {int} rowIdx aoData row id\n *  @param {int} colIdx Column index\n *  @param {string} type data get type ('display', 'type' 'filter|search' 'sort|order')\n *  @returns {*} Cell data\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnGetCellData(settings, rowIdx, colIdx, type) {\n  if (type === 'search') {\n    type = 'filter';\n  } else if (type === 'order') {\n    type = 'sort';\n  }\n\n  var draw = settings.iDraw;\n  var col = settings.aoColumns[colIdx];\n  var rowData = settings.aoData[rowIdx]._aData;\n  var defaultContent = col.sDefaultContent;\n  var cellData = col.fnGetData(rowData, type, {\n    settings: settings,\n    row: rowIdx,\n    col: colIdx\n  });\n\n  if (cellData === undefined) {\n    if (settings.iDrawError != draw && defaultContent === null) {\n      _fnLog(settings, 0, \"Requested unknown parameter \" + (typeof col.mData == 'function' ? '{function}' : \"'\" + col.mData + \"'\") + \" for row \" + rowIdx + \", column \" + colIdx, 4);\n\n      settings.iDrawError = draw;\n    }\n\n    return defaultContent;\n  } // When the data source is null and a specific data type is requested (i.e.\n  // not the original data), we can use default column data\n\n\n  if ((cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined) {\n    cellData = defaultContent;\n  } else if (typeof cellData === 'function') {\n    // If the data source is a function, then we run it and use the return,\n    // executing in the scope of the data object (for instances)\n    return cellData.call(rowData);\n  }\n\n  if (cellData === null && type === 'display') {\n    return '';\n  }\n\n  if (type === 'filter') {\n    var fomatters = DataTable.ext.type.search;\n\n    if (fomatters[col.sType]) {\n      cellData = fomatters[col.sType](cellData);\n    }\n  }\n\n  return cellData;\n}\n/**\n * Set the value for a specific cell, into the internal data cache\n *  @param {object} settings dataTables settings object\n *  @param {int} rowIdx aoData row id\n *  @param {int} colIdx Column index\n *  @param {*} val Value to set\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnSetCellData(settings, rowIdx, colIdx, val) {\n  var col = settings.aoColumns[colIdx];\n  var rowData = settings.aoData[rowIdx]._aData;\n  col.fnSetData(rowData, val, {\n    settings: settings,\n    row: rowIdx,\n    col: colIdx\n  });\n} // Private variable that is used to match action syntax in the data property object\n\n\nvar __reArray = /\\[.*?\\]$/;\nvar __reFn = /\\(\\)$/;\n/**\n * Split string on periods, taking into account escaped periods\n * @param  {string} str String to split\n * @return {array} Split string\n */\n\nfunction _fnSplitObjNotation(str) {\n  return $.map(str.match(/(\\\\.|[^\\.])+/g) || [''], function (s) {\n    return s.replace(/\\\\\\./g, '.');\n  });\n}\n/**\n * Return a function that can be used to get data from a source object, taking\n * into account the ability to use nested objects as a source\n *  @param {string|int|function} mSource The data source for the object\n *  @returns {function} Data get function\n *  @memberof DataTable#oApi\n */\n\n\nvar _fnGetObjectDataFn = DataTable.util.get;\n/**\n * Return a function that can be used to set data from a source object, taking\n * into account the ability to use nested objects as a source\n *  @param {string|int|function} mSource The data source for the object\n *  @returns {function} Data set function\n *  @memberof DataTable#oApi\n */\n\nvar _fnSetObjectDataFn = DataTable.util.set;\n/**\n * Return an array with the full table data\n *  @param {object} oSettings dataTables settings object\n *  @returns array {array} aData Master data array\n *  @memberof DataTable#oApi\n */\n\nfunction _fnGetDataMaster(settings) {\n  return _pluck(settings.aoData, '_aData');\n}\n/**\n * Nuke the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnClearTable(settings) {\n  settings.aoData.length = 0;\n  settings.aiDisplayMaster.length = 0;\n  settings.aiDisplay.length = 0;\n  settings.aIds = {};\n}\n/**\n* Take an array of integers (index array) and remove a target integer (value - not\n* the key!)\n*  @param {array} a Index array to target\n*  @param {int} iTarget value to find\n*  @memberof DataTable#oApi\n*/\n\n\nfunction _fnDeleteIndex(a, iTarget, splice) {\n  var iTargetIndex = -1;\n\n  for (var i = 0, iLen = a.length; i < iLen; i++) {\n    if (a[i] == iTarget) {\n      iTargetIndex = i;\n    } else if (a[i] > iTarget) {\n      a[i]--;\n    }\n  }\n\n  if (iTargetIndex != -1 && splice === undefined) {\n    a.splice(iTargetIndex, 1);\n  }\n}\n/**\n * Mark cached data as invalid such that a re-read of the data will occur when\n * the cached data is next requested. Also update from the data source object.\n *\n * @param {object} settings DataTables settings object\n * @param {int}    rowIdx   Row index to invalidate\n * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'\n *     or 'data'\n * @param {int}    [colIdx] Column index to invalidate. If undefined the whole\n *     row will be invalidated\n * @memberof DataTable#oApi\n *\n * @todo For the modularisation of v1.11 this will need to become a callback, so\n *   the sort and filter methods can subscribe to it. That will required\n *   initialisation options for sorting, which is why it is not already baked in\n */\n\n\nfunction _fnInvalidate(settings, rowIdx, src, colIdx) {\n  var row = settings.aoData[rowIdx];\n  var i, ien;\n\n  var cellWrite = function (cell, col) {\n    // This is very frustrating, but in IE if you just write directly\n    // to innerHTML, and elements that are overwritten are GC'ed,\n    // even if there is a reference to them elsewhere\n    while (cell.childNodes.length) {\n      cell.removeChild(cell.firstChild);\n    }\n\n    cell.innerHTML = _fnGetCellData(settings, rowIdx, col, 'display');\n  }; // Are we reading last data from DOM or the data object?\n\n\n  if (src === 'dom' || (!src || src === 'auto') && row.src === 'dom') {\n    // Read the data from the DOM\n    row._aData = _fnGetRowElements(settings, row, colIdx, colIdx === undefined ? undefined : row._aData).data;\n  } else {\n    // Reading from data object, update the DOM\n    var cells = row.anCells;\n\n    if (cells) {\n      if (colIdx !== undefined) {\n        cellWrite(cells[colIdx], colIdx);\n      } else {\n        for (i = 0, ien = cells.length; i < ien; i++) {\n          cellWrite(cells[i], i);\n        }\n      }\n    }\n  } // For both row and cell invalidation, the cached data for sorting and\n  // filtering is nulled out\n\n\n  row._aSortData = null;\n  row._aFilterData = null; // Invalidate the type for a specific column (if given) or all columns since\n  // the data might have changed\n\n  var cols = settings.aoColumns;\n\n  if (colIdx !== undefined) {\n    cols[colIdx].sType = null;\n  } else {\n    for (i = 0, ien = cols.length; i < ien; i++) {\n      cols[i].sType = null;\n    } // Update DataTables special `DT_*` attributes for the row\n\n\n    _fnRowAttributes(settings, row);\n  }\n}\n/**\n * Build a data source object from an HTML row, reading the contents of the\n * cells that are in the row.\n *\n * @param {object} settings DataTables settings object\n * @param {node|object} TR element from which to read data or existing row\n *   object from which to re-read the data from the cells\n * @param {int} [colIdx] Optional column index\n * @param {array|object} [d] Data source object. If `colIdx` is given then this\n *   parameter should also be given and will be used to write the data into.\n *   Only the column in question will be written\n * @returns {object} Object with two parameters: `data` the data read, in\n *   document order, and `cells` and array of nodes (they can be useful to the\n *   caller, so rather than needing a second traversal to get them, just return\n *   them from here).\n * @memberof DataTable#oApi\n */\n\n\nfunction _fnGetRowElements(settings, row, colIdx, d) {\n  var tds = [],\n      td = row.firstChild,\n      name,\n      col,\n      o,\n      i = 0,\n      contents,\n      columns = settings.aoColumns,\n      objectRead = settings._rowReadObject; // Allow the data object to be passed in, or construct\n\n  d = d !== undefined ? d : objectRead ? {} : [];\n\n  var attr = function (str, td) {\n    if (typeof str === 'string') {\n      var idx = str.indexOf('@');\n\n      if (idx !== -1) {\n        var attr = str.substring(idx + 1);\n\n        var setter = _fnSetObjectDataFn(str);\n\n        setter(d, td.getAttribute(attr));\n      }\n    }\n  }; // Read data from a cell and store into the data object\n\n\n  var cellProcess = function (cell) {\n    if (colIdx === undefined || colIdx === i) {\n      col = columns[i];\n      contents = cell.innerHTML.trim();\n\n      if (col && col._bAttrSrc) {\n        var setter = _fnSetObjectDataFn(col.mData._);\n\n        setter(d, contents);\n        attr(col.mData.sort, cell);\n        attr(col.mData.type, cell);\n        attr(col.mData.filter, cell);\n      } else {\n        // Depending on the `data` option for the columns the data can\n        // be read to either an object or an array.\n        if (objectRead) {\n          if (!col._setter) {\n            // Cache the setter function\n            col._setter = _fnSetObjectDataFn(col.mData);\n          }\n\n          col._setter(d, contents);\n        } else {\n          d[i] = contents;\n        }\n      }\n    }\n\n    i++;\n  };\n\n  if (td) {\n    // `tr` element was passed in\n    while (td) {\n      name = td.nodeName.toUpperCase();\n\n      if (name == \"TD\" || name == \"TH\") {\n        cellProcess(td);\n        tds.push(td);\n      }\n\n      td = td.nextSibling;\n    }\n  } else {\n    // Existing row object passed in\n    tds = row.anCells;\n\n    for (var j = 0, jen = tds.length; j < jen; j++) {\n      cellProcess(tds[j]);\n    }\n  } // Read the ID from the DOM if present\n\n\n  var rowNode = row.firstChild ? row : row.nTr;\n\n  if (rowNode) {\n    var id = rowNode.getAttribute('id');\n\n    if (id) {\n      _fnSetObjectDataFn(settings.rowId)(d, id);\n    }\n  }\n\n  return {\n    data: d,\n    cells: tds\n  };\n}\n/**\n * Create a new TR element (and it's TD children) for a row\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iRow Row to consider\n *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\n *    DataTables will create a row automatically\n *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n *    if nTr is.\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnCreateTr(oSettings, iRow, nTrIn, anTds) {\n  var row = oSettings.aoData[iRow],\n      rowData = row._aData,\n      cells = [],\n      nTr,\n      nTd,\n      oCol,\n      i,\n      iLen,\n      create;\n\n  if (row.nTr === null) {\n    nTr = nTrIn || document.createElement('tr');\n    row.nTr = nTr;\n    row.anCells = cells;\n    /* Use a private property on the node to allow reserve mapping from the node\n     * to the aoData array for fast look up\n     */\n\n    nTr._DT_RowIndex = iRow;\n    /* Special parameters can be given by the data source to be used on the row */\n\n    _fnRowAttributes(oSettings, row);\n    /* Process each column */\n\n\n    for (i = 0, iLen = oSettings.aoColumns.length; i < iLen; i++) {\n      oCol = oSettings.aoColumns[i];\n      create = nTrIn ? false : true;\n      nTd = create ? document.createElement(oCol.sCellType) : anTds[i];\n\n      if (!nTd) {\n        _fnLog(oSettings, 0, 'Incorrect column count', 18);\n      }\n\n      nTd._DT_CellIndex = {\n        row: iRow,\n        column: i\n      };\n      cells.push(nTd); // Need to create the HTML if new, or if a rendering function is defined\n\n      if (create || (oCol.mRender || oCol.mData !== i) && (!$.isPlainObject(oCol.mData) || oCol.mData._ !== i + '.display')) {\n        nTd.innerHTML = _fnGetCellData(oSettings, iRow, i, 'display');\n      }\n      /* Add user defined class */\n\n\n      if (oCol.sClass) {\n        nTd.className += ' ' + oCol.sClass;\n      } // Visibility - add or remove as required\n\n\n      if (oCol.bVisible && !nTrIn) {\n        nTr.appendChild(nTd);\n      } else if (!oCol.bVisible && nTrIn) {\n        nTd.parentNode.removeChild(nTd);\n      }\n\n      if (oCol.fnCreatedCell) {\n        oCol.fnCreatedCell.call(oSettings.oInstance, nTd, _fnGetCellData(oSettings, iRow, i), rowData, iRow, i);\n      }\n    }\n\n    _fnCallbackFire(oSettings, 'aoRowCreatedCallback', null, [nTr, rowData, iRow, cells]);\n  }\n}\n/**\n * Add attributes to a row based on the special `DT_*` parameters in a data\n * source object.\n *  @param {object} settings DataTables settings object\n *  @param {object} DataTables row object for the row to be modified\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnRowAttributes(settings, row) {\n  var tr = row.nTr;\n  var data = row._aData;\n\n  if (tr) {\n    var id = settings.rowIdFn(data);\n\n    if (id) {\n      tr.id = id;\n    }\n\n    if (data.DT_RowClass) {\n      // Remove any classes added by DT_RowClass before\n      var a = data.DT_RowClass.split(' ');\n      row.__rowc = row.__rowc ? _unique(row.__rowc.concat(a)) : a;\n      $(tr).removeClass(row.__rowc.join(' ')).addClass(data.DT_RowClass);\n    }\n\n    if (data.DT_RowAttr) {\n      $(tr).attr(data.DT_RowAttr);\n    }\n\n    if (data.DT_RowData) {\n      $(tr).data(data.DT_RowData);\n    }\n  }\n}\n/**\n * Create the HTML header for the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnBuildHead(oSettings) {\n  var i, ien, cell, row, column;\n  var thead = oSettings.nTHead;\n  var tfoot = oSettings.nTFoot;\n  var createHeader = $('th, td', thead).length === 0;\n  var classes = oSettings.oClasses;\n  var columns = oSettings.aoColumns;\n\n  if (createHeader) {\n    row = $('<tr/>').appendTo(thead);\n  }\n\n  for (i = 0, ien = columns.length; i < ien; i++) {\n    column = columns[i];\n    cell = $(column.nTh).addClass(column.sClass);\n\n    if (createHeader) {\n      cell.appendTo(row);\n    } // 1.11 move into sorting\n\n\n    if (oSettings.oFeatures.bSort) {\n      cell.addClass(column.sSortingClass);\n\n      if (column.bSortable !== false) {\n        cell.attr('tabindex', oSettings.iTabIndex).attr('aria-controls', oSettings.sTableId);\n\n        _fnSortAttachListener(oSettings, column.nTh, i);\n      }\n    }\n\n    if (column.sTitle != cell[0].innerHTML) {\n      cell.html(column.sTitle);\n    }\n\n    _fnRenderer(oSettings, 'header')(oSettings, cell, column, classes);\n  }\n\n  if (createHeader) {\n    _fnDetectHeader(oSettings.aoHeader, thead);\n  }\n  /* Deal with the footer - add classes if required */\n\n\n  $(thead).children('tr').children('th, td').addClass(classes.sHeaderTH);\n  $(tfoot).children('tr').children('th, td').addClass(classes.sFooterTH); // Cache the footer cells. Note that we only take the cells from the first\n  // row in the footer. If there is more than one row the user wants to\n  // interact with, they need to use the table().foot() method. Note also this\n  // allows cells to be used for multiple columns using colspan\n\n  if (tfoot !== null) {\n    var cells = oSettings.aoFooter[0];\n\n    for (i = 0, ien = cells.length; i < ien; i++) {\n      column = columns[i];\n\n      if (column) {\n        column.nTf = cells[i].cell;\n\n        if (column.sClass) {\n          $(column.nTf).addClass(column.sClass);\n        }\n      } else {\n        _fnLog(oSettings, 0, 'Incorrect column count', 18);\n      }\n    }\n  }\n}\n/**\n * Draw the header (or footer) element based on the column visibility states. The\n * methodology here is to use the layout array from _fnDetectHeader, modified for\n * the instantaneous column visibility, to construct the new layout. The grid is\n * traversed over cell at a time in a rows x columns grid fashion, although each\n * cell insert can cover multiple elements in the grid - which is tracks using the\n * aApplied array. Cell inserts in the grid will only occur where there isn't\n * already a cell in that position.\n *  @param {object} oSettings dataTables settings object\n *  @param array {objects} aoSource Layout array from _fnDetectHeader\n *  @param {boolean} [bIncludeHidden=false] If true then include the hidden columns in the calc,\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnDrawHead(oSettings, aoSource, bIncludeHidden) {\n  var i, iLen, j, jLen, k, kLen, n, nLocalTr;\n  var aoLocal = [];\n  var aApplied = [];\n  var iColumns = oSettings.aoColumns.length;\n  var iRowspan, iColspan;\n\n  if (!aoSource) {\n    return;\n  }\n\n  if (bIncludeHidden === undefined) {\n    bIncludeHidden = false;\n  }\n  /* Make a copy of the master layout array, but without the visible columns in it */\n\n\n  for (i = 0, iLen = aoSource.length; i < iLen; i++) {\n    aoLocal[i] = aoSource[i].slice();\n    aoLocal[i].nTr = aoSource[i].nTr;\n    /* Remove any columns which are currently hidden */\n\n    for (j = iColumns - 1; j >= 0; j--) {\n      if (!oSettings.aoColumns[j].bVisible && !bIncludeHidden) {\n        aoLocal[i].splice(j, 1);\n      }\n    }\n    /* Prep the applied array - it needs an element for each row */\n\n\n    aApplied.push([]);\n  }\n\n  for (i = 0, iLen = aoLocal.length; i < iLen; i++) {\n    nLocalTr = aoLocal[i].nTr;\n    /* All cells are going to be replaced, so empty out the row */\n\n    if (nLocalTr) {\n      while (n = nLocalTr.firstChild) {\n        nLocalTr.removeChild(n);\n      }\n    }\n\n    for (j = 0, jLen = aoLocal[i].length; j < jLen; j++) {\n      iRowspan = 1;\n      iColspan = 1;\n      /* Check to see if there is already a cell (row/colspan) covering our target\n       * insert point. If there is, then there is nothing to do.\n       */\n\n      if (aApplied[i][j] === undefined) {\n        nLocalTr.appendChild(aoLocal[i][j].cell);\n        aApplied[i][j] = 1;\n        /* Expand the cell to cover as many rows as needed */\n\n        while (aoLocal[i + iRowspan] !== undefined && aoLocal[i][j].cell == aoLocal[i + iRowspan][j].cell) {\n          aApplied[i + iRowspan][j] = 1;\n          iRowspan++;\n        }\n        /* Expand the cell to cover as many columns as needed */\n\n\n        while (aoLocal[i][j + iColspan] !== undefined && aoLocal[i][j].cell == aoLocal[i][j + iColspan].cell) {\n          /* Must update the applied array over the rows for the columns */\n          for (k = 0; k < iRowspan; k++) {\n            aApplied[i + k][j + iColspan] = 1;\n          }\n\n          iColspan++;\n        }\n        /* Do the actual expansion in the DOM */\n\n\n        $(aoLocal[i][j].cell).attr('rowspan', iRowspan).attr('colspan', iColspan);\n      }\n    }\n  }\n}\n/**\n * Insert the required TR nodes into the table for display\n *  @param {object} oSettings dataTables settings object\n *  @param ajaxComplete true after ajax call to complete rendering\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnDraw(oSettings, ajaxComplete) {\n  // Allow for state saving and a custom start position\n  _fnStart(oSettings);\n  /* Provide a pre-callback function which can be used to cancel the draw is false is returned */\n\n\n  var aPreDraw = _fnCallbackFire(oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings]);\n\n  if ($.inArray(false, aPreDraw) !== -1) {\n    _fnProcessingDisplay(oSettings, false);\n\n    return;\n  }\n\n  var anRows = [];\n  var iRowCount = 0;\n  var asStripeClasses = oSettings.asStripeClasses;\n  var iStripes = asStripeClasses.length;\n  var oLang = oSettings.oLanguage;\n  var bServerSide = _fnDataSource(oSettings) == 'ssp';\n  var aiDisplay = oSettings.aiDisplay;\n  var iDisplayStart = oSettings._iDisplayStart;\n  var iDisplayEnd = oSettings.fnDisplayEnd();\n  oSettings.bDrawing = true;\n  /* Server-side processing draw intercept */\n\n  if (oSettings.bDeferLoading) {\n    oSettings.bDeferLoading = false;\n    oSettings.iDraw++;\n\n    _fnProcessingDisplay(oSettings, false);\n  } else if (!bServerSide) {\n    oSettings.iDraw++;\n  } else if (!oSettings.bDestroying && !ajaxComplete) {\n    _fnAjaxUpdate(oSettings);\n\n    return;\n  }\n\n  if (aiDisplay.length !== 0) {\n    var iStart = bServerSide ? 0 : iDisplayStart;\n    var iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;\n\n    for (var j = iStart; j < iEnd; j++) {\n      var iDataIndex = aiDisplay[j];\n      var aoData = oSettings.aoData[iDataIndex];\n\n      if (aoData.nTr === null) {\n        _fnCreateTr(oSettings, iDataIndex);\n      }\n\n      var nRow = aoData.nTr;\n      /* Remove the old striping classes and then add the new one */\n\n      if (iStripes !== 0) {\n        var sStripe = asStripeClasses[iRowCount % iStripes];\n\n        if (aoData._sRowStripe != sStripe) {\n          $(nRow).removeClass(aoData._sRowStripe).addClass(sStripe);\n          aoData._sRowStripe = sStripe;\n        }\n      } // Row callback functions - might want to manipulate the row\n      // iRowCount and j are not currently documented. Are they at all\n      // useful?\n\n\n      _fnCallbackFire(oSettings, 'aoRowCallback', null, [nRow, aoData._aData, iRowCount, j, iDataIndex]);\n\n      anRows.push(nRow);\n      iRowCount++;\n    }\n  } else {\n    /* Table is empty - create a row with an empty message in it */\n    var sZero = oLang.sZeroRecords;\n\n    if (oSettings.iDraw == 1 && _fnDataSource(oSettings) == 'ajax') {\n      sZero = oLang.sLoadingRecords;\n    } else if (oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0) {\n      sZero = oLang.sEmptyTable;\n    }\n\n    anRows[0] = $('<tr/>', {\n      'class': iStripes ? asStripeClasses[0] : ''\n    }).append($('<td />', {\n      'valign': 'top',\n      'colSpan': _fnVisbleColumns(oSettings),\n      'class': oSettings.oClasses.sRowEmpty\n    }).html(sZero))[0];\n  }\n  /* Header and footer callbacks */\n\n\n  _fnCallbackFire(oSettings, 'aoHeaderCallback', 'header', [$(oSettings.nTHead).children('tr')[0], _fnGetDataMaster(oSettings), iDisplayStart, iDisplayEnd, aiDisplay]);\n\n  _fnCallbackFire(oSettings, 'aoFooterCallback', 'footer', [$(oSettings.nTFoot).children('tr')[0], _fnGetDataMaster(oSettings), iDisplayStart, iDisplayEnd, aiDisplay]);\n\n  var body = $(oSettings.nTBody);\n  body.children().detach();\n  body.append($(anRows));\n  /* Call all required callback functions for the end of a draw */\n\n  _fnCallbackFire(oSettings, 'aoDrawCallback', 'draw', [oSettings]);\n  /* Draw is complete, sorting and filtering must be as well */\n\n\n  oSettings.bSorted = false;\n  oSettings.bFiltered = false;\n  oSettings.bDrawing = false;\n}\n/**\n * Redraw the table - taking account of the various features which are enabled\n *  @param {object} oSettings dataTables settings object\n *  @param {boolean} [holdPosition] Keep the current paging position. By default\n *    the paging is reset to the first page\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnReDraw(settings, holdPosition) {\n  var features = settings.oFeatures,\n      sort = features.bSort,\n      filter = features.bFilter;\n\n  if (sort) {\n    _fnSort(settings);\n  }\n\n  if (filter) {\n    _fnFilterComplete(settings, settings.oPreviousSearch);\n  } else {\n    // No filtering, so we want to just use the display master\n    settings.aiDisplay = settings.aiDisplayMaster.slice();\n  }\n\n  if (holdPosition !== true) {\n    settings._iDisplayStart = 0;\n  } // Let any modules know about the draw hold position state (used by\n  // scrolling internally)\n\n\n  settings._drawHold = holdPosition;\n\n  _fnDraw(settings);\n\n  settings._drawHold = false;\n}\n/**\n * Add the options to the page HTML for the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnAddOptionsHtml(oSettings) {\n  var classes = oSettings.oClasses;\n  var table = $(oSettings.nTable);\n  var holding = $('<div/>').insertBefore(table); // Holding element for speed\n\n  var features = oSettings.oFeatures; // All DataTables are wrapped in a div\n\n  var insert = $('<div/>', {\n    id: oSettings.sTableId + '_wrapper',\n    'class': classes.sWrapper + (oSettings.nTFoot ? '' : ' ' + classes.sNoFooter)\n  });\n  oSettings.nHolding = holding[0];\n  oSettings.nTableWrapper = insert[0];\n  oSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;\n  /* Loop over the user set positioning and place the elements as needed */\n\n  var aDom = oSettings.sDom.split('');\n  var featureNode, cOption, nNewNode, cNext, sAttr, j;\n\n  for (var i = 0; i < aDom.length; i++) {\n    featureNode = null;\n    cOption = aDom[i];\n\n    if (cOption == '<') {\n      /* New container div */\n      nNewNode = $('<div/>')[0];\n      /* Check to see if we should append an id and/or a class name to the container */\n\n      cNext = aDom[i + 1];\n\n      if (cNext == \"'\" || cNext == '\"') {\n        sAttr = \"\";\n        j = 2;\n\n        while (aDom[i + j] != cNext) {\n          sAttr += aDom[i + j];\n          j++;\n        }\n        /* Replace jQuery UI constants @todo depreciated */\n\n\n        if (sAttr == \"H\") {\n          sAttr = classes.sJUIHeader;\n        } else if (sAttr == \"F\") {\n          sAttr = classes.sJUIFooter;\n        }\n        /* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\n         * breaks the string into parts and applies them as needed\n         */\n\n\n        if (sAttr.indexOf('.') != -1) {\n          var aSplit = sAttr.split('.');\n          nNewNode.id = aSplit[0].substr(1, aSplit[0].length - 1);\n          nNewNode.className = aSplit[1];\n        } else if (sAttr.charAt(0) == \"#\") {\n          nNewNode.id = sAttr.substr(1, sAttr.length - 1);\n        } else {\n          nNewNode.className = sAttr;\n        }\n\n        i += j;\n        /* Move along the position array */\n      }\n\n      insert.append(nNewNode);\n      insert = $(nNewNode);\n    } else if (cOption == '>') {\n      /* End container div */\n      insert = insert.parent();\n    } // @todo Move options into their own plugins?\n    else if (cOption == 'l' && features.bPaginate && features.bLengthChange) {\n      /* Length */\n      featureNode = _fnFeatureHtmlLength(oSettings);\n    } else if (cOption == 'f' && features.bFilter) {\n      /* Filter */\n      featureNode = _fnFeatureHtmlFilter(oSettings);\n    } else if (cOption == 'r' && features.bProcessing) {\n      /* pRocessing */\n      featureNode = _fnFeatureHtmlProcessing(oSettings);\n    } else if (cOption == 't') {\n      /* Table */\n      featureNode = _fnFeatureHtmlTable(oSettings);\n    } else if (cOption == 'i' && features.bInfo) {\n      /* Info */\n      featureNode = _fnFeatureHtmlInfo(oSettings);\n    } else if (cOption == 'p' && features.bPaginate) {\n      /* Pagination */\n      featureNode = _fnFeatureHtmlPaginate(oSettings);\n    } else if (DataTable.ext.feature.length !== 0) {\n      /* Plug-in features */\n      var aoFeatures = DataTable.ext.feature;\n\n      for (var k = 0, kLen = aoFeatures.length; k < kLen; k++) {\n        if (cOption == aoFeatures[k].cFeature) {\n          featureNode = aoFeatures[k].fnInit(oSettings);\n          break;\n        }\n      }\n    }\n    /* Add to the 2D features array */\n\n\n    if (featureNode) {\n      var aanFeatures = oSettings.aanFeatures;\n\n      if (!aanFeatures[cOption]) {\n        aanFeatures[cOption] = [];\n      }\n\n      aanFeatures[cOption].push(featureNode);\n      insert.append(featureNode);\n    }\n  }\n  /* Built our DOM structure - replace the holding div with what we want */\n\n\n  holding.replaceWith(insert);\n  oSettings.nHolding = null;\n}\n/**\n * Use the DOM source to create up an array of header cells. The idea here is to\n * create a layout grid (array) of rows x columns, which contains a reference\n * to the cell that that point in the grid (regardless of col/rowspan), such that\n * any column / row could be removed and the new grid constructed\n *  @param array {object} aLayout Array to store the calculated layout in\n *  @param {node} nThead The header/footer element for the table\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnDetectHeader(aLayout, nThead) {\n  var nTrs = $(nThead).children('tr');\n  var nTr, nCell;\n  var i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;\n  var bUnique;\n\n  var fnShiftCol = function (a, i, j) {\n    var k = a[i];\n\n    while (k[j]) {\n      j++;\n    }\n\n    return j;\n  };\n\n  aLayout.splice(0, aLayout.length);\n  /* We know how many rows there are in the layout - so prep it */\n\n  for (i = 0, iLen = nTrs.length; i < iLen; i++) {\n    aLayout.push([]);\n  }\n  /* Calculate a layout array */\n\n\n  for (i = 0, iLen = nTrs.length; i < iLen; i++) {\n    nTr = nTrs[i];\n    iColumn = 0;\n    /* For every cell in the row... */\n\n    nCell = nTr.firstChild;\n\n    while (nCell) {\n      if (nCell.nodeName.toUpperCase() == \"TD\" || nCell.nodeName.toUpperCase() == \"TH\") {\n        /* Get the col and rowspan attributes from the DOM and sanitise them */\n        iColspan = nCell.getAttribute('colspan') * 1;\n        iRowspan = nCell.getAttribute('rowspan') * 1;\n        iColspan = !iColspan || iColspan === 0 || iColspan === 1 ? 1 : iColspan;\n        iRowspan = !iRowspan || iRowspan === 0 || iRowspan === 1 ? 1 : iRowspan;\n        /* There might be colspan cells already in this row, so shift our target\n         * accordingly\n         */\n\n        iColShifted = fnShiftCol(aLayout, i, iColumn);\n        /* Cache calculation for unique columns */\n\n        bUnique = iColspan === 1 ? true : false;\n        /* If there is col / rowspan, copy the information into the layout grid */\n\n        for (l = 0; l < iColspan; l++) {\n          for (k = 0; k < iRowspan; k++) {\n            aLayout[i + k][iColShifted + l] = {\n              \"cell\": nCell,\n              \"unique\": bUnique\n            };\n            aLayout[i + k].nTr = nTr;\n          }\n        }\n      }\n\n      nCell = nCell.nextSibling;\n    }\n  }\n}\n/**\n * Get an array of unique th elements, one for each column\n *  @param {object} oSettings dataTables settings object\n *  @param {node} nHeader automatically detect the layout from this node - optional\n *  @param {array} aLayout thead/tfoot layout from _fnDetectHeader - optional\n *  @returns array {node} aReturn list of unique th's\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnGetUniqueThs(oSettings, nHeader, aLayout) {\n  var aReturn = [];\n\n  if (!aLayout) {\n    aLayout = oSettings.aoHeader;\n\n    if (nHeader) {\n      aLayout = [];\n\n      _fnDetectHeader(aLayout, nHeader);\n    }\n  }\n\n  for (var i = 0, iLen = aLayout.length; i < iLen; i++) {\n    for (var j = 0, jLen = aLayout[i].length; j < jLen; j++) {\n      if (aLayout[i][j].unique && (!aReturn[j] || !oSettings.bSortCellsTop)) {\n        aReturn[j] = aLayout[i][j].cell;\n      }\n    }\n  }\n\n  return aReturn;\n}\n/**\n * Set the start position for draw\n *  @param {object} oSettings dataTables settings object\n */\n\n\nfunction _fnStart(oSettings) {\n  var bServerSide = _fnDataSource(oSettings) == 'ssp';\n  var iInitDisplayStart = oSettings.iInitDisplayStart; // Check and see if we have an initial draw position from state saving\n\n  if (iInitDisplayStart !== undefined && iInitDisplayStart !== -1) {\n    oSettings._iDisplayStart = bServerSide ? iInitDisplayStart : iInitDisplayStart >= oSettings.fnRecordsDisplay() ? 0 : iInitDisplayStart;\n    oSettings.iInitDisplayStart = -1;\n  }\n}\n/**\n * Create an Ajax call based on the table's settings, taking into account that\n * parameters can have multiple forms, and backwards compatibility.\n *\n * @param {object} oSettings dataTables settings object\n * @param {array} data Data to send to the server, required by\n *     DataTables - may be augmented by developer callbacks\n * @param {function} fn Callback function to run when data is obtained\n */\n\n\nfunction _fnBuildAjax(oSettings, data, fn) {\n  // Compatibility with 1.9-, allow fnServerData and event to manipulate\n  _fnCallbackFire(oSettings, 'aoServerParams', 'serverParams', [data]); // Convert to object based for 1.10+ if using the old array scheme which can\n  // come from server-side processing or serverParams\n\n\n  if (data && Array.isArray(data)) {\n    var tmp = {};\n    var rbracket = /(.*?)\\[\\]$/;\n    $.each(data, function (key, val) {\n      var match = val.name.match(rbracket);\n\n      if (match) {\n        // Support for arrays\n        var name = match[0];\n\n        if (!tmp[name]) {\n          tmp[name] = [];\n        }\n\n        tmp[name].push(val.value);\n      } else {\n        tmp[val.name] = val.value;\n      }\n    });\n    data = tmp;\n  }\n\n  var ajaxData;\n  var ajax = oSettings.ajax;\n  var instance = oSettings.oInstance;\n\n  var callback = function (json) {\n    var status = oSettings.jqXHR ? oSettings.jqXHR.status : null;\n\n    if (json === null || typeof status === 'number' && status == 204) {\n      json = {};\n\n      _fnAjaxDataSrc(oSettings, json, []);\n    }\n\n    var error = json.error || json.sError;\n\n    if (error) {\n      _fnLog(oSettings, 0, error);\n    }\n\n    oSettings.json = json;\n\n    _fnCallbackFire(oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR]);\n\n    fn(json);\n  };\n\n  if ($.isPlainObject(ajax) && ajax.data) {\n    ajaxData = ajax.data;\n    var newData = typeof ajaxData === 'function' ? ajaxData(data, oSettings) : // fn can manipulate data or return\n    ajaxData; // an object object or array to merge\n    // If the function returned something, use that alone\n\n    data = typeof ajaxData === 'function' && newData ? newData : $.extend(true, data, newData); // Remove the data property as we've resolved it already and don't want\n    // jQuery to do it again (it is restored at the end of the function)\n\n    delete ajax.data;\n  }\n\n  var baseAjax = {\n    \"data\": data,\n    \"success\": callback,\n    \"dataType\": \"json\",\n    \"cache\": false,\n    \"type\": oSettings.sServerMethod,\n    \"error\": function (xhr, error, thrown) {\n      var ret = _fnCallbackFire(oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR]);\n\n      if ($.inArray(true, ret) === -1) {\n        if (error == \"parsererror\") {\n          _fnLog(oSettings, 0, 'Invalid JSON response', 1);\n        } else if (xhr.readyState === 4) {\n          _fnLog(oSettings, 0, 'Ajax error', 7);\n        }\n      }\n\n      _fnProcessingDisplay(oSettings, false);\n    }\n  }; // Store the data submitted for the API\n\n  oSettings.oAjaxData = data; // Allow plug-ins and external processes to modify the data\n\n  _fnCallbackFire(oSettings, null, 'preXhr', [oSettings, data]);\n\n  if (oSettings.fnServerData) {\n    // DataTables 1.9- compatibility\n    oSettings.fnServerData.call(instance, oSettings.sAjaxSource, $.map(data, function (val, key) {\n      // Need to convert back to 1.9 trad format\n      return {\n        name: key,\n        value: val\n      };\n    }), callback, oSettings);\n  } else if (oSettings.sAjaxSource || typeof ajax === 'string') {\n    // DataTables 1.9- compatibility\n    oSettings.jqXHR = $.ajax($.extend(baseAjax, {\n      url: ajax || oSettings.sAjaxSource\n    }));\n  } else if (typeof ajax === 'function') {\n    // Is a function - let the caller define what needs to be done\n    oSettings.jqXHR = ajax.call(instance, data, callback, oSettings);\n  } else {\n    // Object to extend the base settings\n    oSettings.jqXHR = $.ajax($.extend(baseAjax, ajax)); // Restore for next time around\n\n    ajax.data = ajaxData;\n  }\n}\n/**\n * Update the table using an Ajax call\n *  @param {object} settings dataTables settings object\n *  @returns {boolean} Block the table drawing or not\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnAjaxUpdate(settings) {\n  settings.iDraw++;\n\n  _fnProcessingDisplay(settings, true);\n\n  _fnBuildAjax(settings, _fnAjaxParameters(settings), function (json) {\n    _fnAjaxUpdateDraw(settings, json);\n  });\n}\n/**\n * Build up the parameters in an object needed for a server-side processing\n * request. Note that this is basically done twice, is different ways - a modern\n * method which is used by default in DataTables 1.10 which uses objects and\n * arrays, or the 1.9- method with is name / value pairs. 1.9 method is used if\n * the sAjaxSource option is used in the initialisation, or the legacyAjax\n * option is set.\n *  @param {object} oSettings dataTables settings object\n *  @returns {bool} block the table drawing or not\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnAjaxParameters(settings) {\n  var columns = settings.aoColumns,\n      columnCount = columns.length,\n      features = settings.oFeatures,\n      preSearch = settings.oPreviousSearch,\n      preColSearch = settings.aoPreSearchCols,\n      i,\n      data = [],\n      dataProp,\n      column,\n      columnSearch,\n      sort = _fnSortFlatten(settings),\n      displayStart = settings._iDisplayStart,\n      displayLength = features.bPaginate !== false ? settings._iDisplayLength : -1;\n\n  var param = function (name, value) {\n    data.push({\n      'name': name,\n      'value': value\n    });\n  }; // DataTables 1.9- compatible method\n\n\n  param('sEcho', settings.iDraw);\n  param('iColumns', columnCount);\n  param('sColumns', _pluck(columns, 'sName').join(','));\n  param('iDisplayStart', displayStart);\n  param('iDisplayLength', displayLength); // DataTables 1.10+ method\n\n  var d = {\n    draw: settings.iDraw,\n    columns: [],\n    order: [],\n    start: displayStart,\n    length: displayLength,\n    search: {\n      value: preSearch.sSearch,\n      regex: preSearch.bRegex\n    }\n  };\n\n  for (i = 0; i < columnCount; i++) {\n    column = columns[i];\n    columnSearch = preColSearch[i];\n    dataProp = typeof column.mData == \"function\" ? 'function' : column.mData;\n    d.columns.push({\n      data: dataProp,\n      name: column.sName,\n      searchable: column.bSearchable,\n      orderable: column.bSortable,\n      search: {\n        value: columnSearch.sSearch,\n        regex: columnSearch.bRegex\n      }\n    });\n    param(\"mDataProp_\" + i, dataProp);\n\n    if (features.bFilter) {\n      param('sSearch_' + i, columnSearch.sSearch);\n      param('bRegex_' + i, columnSearch.bRegex);\n      param('bSearchable_' + i, column.bSearchable);\n    }\n\n    if (features.bSort) {\n      param('bSortable_' + i, column.bSortable);\n    }\n  }\n\n  if (features.bFilter) {\n    param('sSearch', preSearch.sSearch);\n    param('bRegex', preSearch.bRegex);\n  }\n\n  if (features.bSort) {\n    $.each(sort, function (i, val) {\n      d.order.push({\n        column: val.col,\n        dir: val.dir\n      });\n      param('iSortCol_' + i, val.col);\n      param('sSortDir_' + i, val.dir);\n    });\n    param('iSortingCols', sort.length);\n  } // If the legacy.ajax parameter is null, then we automatically decide which\n  // form to use, based on sAjaxSource\n\n\n  var legacy = DataTable.ext.legacy.ajax;\n\n  if (legacy === null) {\n    return settings.sAjaxSource ? data : d;\n  } // Otherwise, if legacy has been specified then we use that to decide on the\n  // form\n\n\n  return legacy ? data : d;\n}\n/**\n * Data the data from the server (nuking the old) and redraw the table\n *  @param {object} oSettings dataTables settings object\n *  @param {object} json json data return from the server.\n *  @param {string} json.sEcho Tracking flag for DataTables to match requests\n *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\n *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\n *  @param {array} json.aaData The data to display on this page\n *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnAjaxUpdateDraw(settings, json) {\n  // v1.10 uses camelCase variables, while 1.9 uses Hungarian notation.\n  // Support both\n  var compat = function (old, modern) {\n    return json[old] !== undefined ? json[old] : json[modern];\n  };\n\n  var data = _fnAjaxDataSrc(settings, json);\n\n  var draw = compat('sEcho', 'draw');\n  var recordsTotal = compat('iTotalRecords', 'recordsTotal');\n  var recordsFiltered = compat('iTotalDisplayRecords', 'recordsFiltered');\n\n  if (draw !== undefined) {\n    // Protect against out of sequence returns\n    if (draw * 1 < settings.iDraw) {\n      return;\n    }\n\n    settings.iDraw = draw * 1;\n  } // No data in returned object, so rather than an array, we show an empty table\n\n\n  if (!data) {\n    data = [];\n  }\n\n  _fnClearTable(settings);\n\n  settings._iRecordsTotal = parseInt(recordsTotal, 10);\n  settings._iRecordsDisplay = parseInt(recordsFiltered, 10);\n\n  for (var i = 0, ien = data.length; i < ien; i++) {\n    _fnAddData(settings, data[i]);\n  }\n\n  settings.aiDisplay = settings.aiDisplayMaster.slice();\n\n  _fnDraw(settings, true);\n\n  if (!settings._bInitComplete) {\n    _fnInitComplete(settings, json);\n  }\n\n  _fnProcessingDisplay(settings, false);\n}\n/**\n * Get the data from the JSON data source to use for drawing a table. Using\n * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\n * source object, or from a processing function.\n *  @param {object} oSettings dataTables settings object\n *  @param  {object} json Data source object / array from the server\n *  @return {array} Array of data to use\n */\n\n\nfunction _fnAjaxDataSrc(oSettings, json, write) {\n  var dataSrc = $.isPlainObject(oSettings.ajax) && oSettings.ajax.dataSrc !== undefined ? oSettings.ajax.dataSrc : oSettings.sAjaxDataProp; // Compatibility with 1.9-.\n\n  if (!write) {\n    if (dataSrc === 'data') {\n      // If the default, then we still want to support the old style, and safely ignore\n      // it if possible\n      return json.aaData || json[dataSrc];\n    }\n\n    return dataSrc !== \"\" ? _fnGetObjectDataFn(dataSrc)(json) : json;\n  } // set\n\n\n  _fnSetObjectDataFn(dataSrc)(json, write);\n}\n/**\n * Generate the node required for filtering text\n *  @returns {node} Filter control element\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnFeatureHtmlFilter(settings) {\n  var classes = settings.oClasses;\n  var tableId = settings.sTableId;\n  var language = settings.oLanguage;\n  var previousSearch = settings.oPreviousSearch;\n  var features = settings.aanFeatures;\n  var input = '<input type=\"search\" class=\"' + classes.sFilterInput + '\"/>';\n  var str = language.sSearch;\n  str = str.match(/_INPUT_/) ? str.replace('_INPUT_', input) : str + input;\n  var filter = $('<div/>', {\n    'id': !features.f ? tableId + '_filter' : null,\n    'class': classes.sFilter\n  }).append($('<label/>').append(str));\n\n  var searchFn = function (event) {\n    /* Update all other filter input elements for the new display */\n    var n = features.f;\n    var val = !this.value ? \"\" : this.value; // mental IE8 fix :-(\n\n    if (previousSearch.return && event.key !== \"Enter\") {\n      return;\n    }\n    /* Now do the filter */\n\n\n    if (val != previousSearch.sSearch) {\n      _fnFilterComplete(settings, {\n        \"sSearch\": val,\n        \"bRegex\": previousSearch.bRegex,\n        \"bSmart\": previousSearch.bSmart,\n        \"bCaseInsensitive\": previousSearch.bCaseInsensitive,\n        \"return\": previousSearch.return\n      }); // Need to redraw, without resorting\n\n\n      settings._iDisplayStart = 0;\n\n      _fnDraw(settings);\n    }\n  };\n\n  var searchDelay = settings.searchDelay !== null ? settings.searchDelay : _fnDataSource(settings) === 'ssp' ? 400 : 0;\n  var jqFilter = $('input', filter).val(previousSearch.sSearch).attr('placeholder', language.sSearchPlaceholder).on('keyup.DT search.DT input.DT paste.DT cut.DT', searchDelay ? _fnThrottle(searchFn, searchDelay) : searchFn).on('mouseup', function (e) {\n    // Edge fix! Edge 17 does not trigger anything other than mouse events when clicking\n    // on the clear icon (Edge bug 17584515). This is safe in other browsers as `searchFn`\n    // checks the value to see if it has changed. In other browsers it won't have.\n    setTimeout(function () {\n      searchFn.call(jqFilter[0], e);\n    }, 10);\n  }).on('keypress.DT', function (e) {\n    /* Prevent form submission */\n    if (e.keyCode == 13) {\n      return false;\n    }\n  }).attr('aria-controls', tableId); // Update the input elements whenever the table is filtered\n\n  $(settings.nTable).on('search.dt.DT', function (ev, s) {\n    if (settings === s) {\n      // IE9 throws an 'unknown error' if document.activeElement is used\n      // inside an iframe or frame...\n      try {\n        if (jqFilter[0] !== document.activeElement) {\n          jqFilter.val(previousSearch.sSearch);\n        }\n      } catch (e) {}\n    }\n  });\n  return filter[0];\n}\n/**\n * Filter the table using both the global filter and column based filtering\n *  @param {object} oSettings dataTables settings object\n *  @param {object} oSearch search information\n *  @param {int} [iForce] force a research of the master array (1) or not (undefined or 0)\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnFilterComplete(oSettings, oInput, iForce) {\n  var oPrevSearch = oSettings.oPreviousSearch;\n  var aoPrevSearch = oSettings.aoPreSearchCols;\n\n  var fnSaveFilter = function (oFilter) {\n    /* Save the filtering values */\n    oPrevSearch.sSearch = oFilter.sSearch;\n    oPrevSearch.bRegex = oFilter.bRegex;\n    oPrevSearch.bSmart = oFilter.bSmart;\n    oPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive;\n    oPrevSearch.return = oFilter.return;\n  };\n\n  var fnRegex = function (o) {\n    // Backwards compatibility with the bEscapeRegex option\n    return o.bEscapeRegex !== undefined ? !o.bEscapeRegex : o.bRegex;\n  }; // Resolve any column types that are unknown due to addition or invalidation\n  // @todo As per sort - can this be moved into an event handler?\n\n\n  _fnColumnTypes(oSettings);\n  /* In server-side processing all filtering is done by the server, so no point hanging around here */\n\n\n  if (_fnDataSource(oSettings) != 'ssp') {\n    /* Global filter */\n    _fnFilter(oSettings, oInput.sSearch, iForce, fnRegex(oInput), oInput.bSmart, oInput.bCaseInsensitive, oInput.return);\n\n    fnSaveFilter(oInput);\n    /* Now do the individual column filter */\n\n    for (var i = 0; i < aoPrevSearch.length; i++) {\n      _fnFilterColumn(oSettings, aoPrevSearch[i].sSearch, i, fnRegex(aoPrevSearch[i]), aoPrevSearch[i].bSmart, aoPrevSearch[i].bCaseInsensitive);\n    }\n    /* Custom filtering */\n\n\n    _fnFilterCustom(oSettings);\n  } else {\n    fnSaveFilter(oInput);\n  }\n  /* Tell the draw function we have been filtering */\n\n\n  oSettings.bFiltered = true;\n\n  _fnCallbackFire(oSettings, null, 'search', [oSettings]);\n}\n/**\n * Apply custom filtering functions\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnFilterCustom(settings) {\n  var filters = DataTable.ext.search;\n  var displayRows = settings.aiDisplay;\n  var row, rowIdx;\n\n  for (var i = 0, ien = filters.length; i < ien; i++) {\n    var rows = []; // Loop over each row and see if it should be included\n\n    for (var j = 0, jen = displayRows.length; j < jen; j++) {\n      rowIdx = displayRows[j];\n      row = settings.aoData[rowIdx];\n\n      if (filters[i](settings, row._aFilterData, rowIdx, row._aData, j)) {\n        rows.push(rowIdx);\n      }\n    } // So the array reference doesn't break set the results into the\n    // existing array\n\n\n    displayRows.length = 0;\n    $.merge(displayRows, rows);\n  }\n}\n/**\n * Filter the table on a per-column basis\n *  @param {object} oSettings dataTables settings object\n *  @param {string} sInput string to filter on\n *  @param {int} iColumn column to filter\n *  @param {bool} bRegex treat search string as a regular expression or not\n *  @param {bool} bSmart use smart filtering or not\n *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnFilterColumn(settings, searchStr, colIdx, regex, smart, caseInsensitive) {\n  if (searchStr === '') {\n    return;\n  }\n\n  var data;\n  var out = [];\n  var display = settings.aiDisplay;\n\n  var rpSearch = _fnFilterCreateSearch(searchStr, regex, smart, caseInsensitive);\n\n  for (var i = 0; i < display.length; i++) {\n    data = settings.aoData[display[i]]._aFilterData[colIdx];\n\n    if (rpSearch.test(data)) {\n      out.push(display[i]);\n    }\n  }\n\n  settings.aiDisplay = out;\n}\n/**\n * Filter the data table based on user input and draw the table\n *  @param {object} settings dataTables settings object\n *  @param {string} input string to filter on\n *  @param {int} force optional - force a research of the master array (1) or not (undefined or 0)\n *  @param {bool} regex treat as a regular expression or not\n *  @param {bool} smart perform smart filtering or not\n *  @param {bool} caseInsensitive Do case insensitive matching or not\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnFilter(settings, input, force, regex, smart, caseInsensitive) {\n  var rpSearch = _fnFilterCreateSearch(input, regex, smart, caseInsensitive);\n\n  var prevSearch = settings.oPreviousSearch.sSearch;\n  var displayMaster = settings.aiDisplayMaster;\n  var display, invalidated, i;\n  var filtered = []; // Need to take account of custom filtering functions - always filter\n\n  if (DataTable.ext.search.length !== 0) {\n    force = true;\n  } // Check if any of the rows were invalidated\n\n\n  invalidated = _fnFilterData(settings); // If the input is blank - we just want the full data set\n\n  if (input.length <= 0) {\n    settings.aiDisplay = displayMaster.slice();\n  } else {\n    // New search - start from the master array\n    if (invalidated || force || regex || prevSearch.length > input.length || input.indexOf(prevSearch) !== 0 || settings.bSorted // On resort, the display master needs to be\n    // re-filtered since indexes will have changed\n    ) {\n      settings.aiDisplay = displayMaster.slice();\n    } // Search the display array\n\n\n    display = settings.aiDisplay;\n\n    for (i = 0; i < display.length; i++) {\n      if (rpSearch.test(settings.aoData[display[i]]._sFilterRow)) {\n        filtered.push(display[i]);\n      }\n    }\n\n    settings.aiDisplay = filtered;\n  }\n}\n/**\n * Build a regular expression object suitable for searching a table\n *  @param {string} sSearch string to search for\n *  @param {bool} bRegex treat as a regular expression or not\n *  @param {bool} bSmart perform smart filtering or not\n *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n *  @returns {RegExp} constructed object\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnFilterCreateSearch(search, regex, smart, caseInsensitive) {\n  search = regex ? search : _fnEscapeRegex(search);\n\n  if (smart) {\n    /* For smart filtering we want to allow the search to work regardless of\n     * word order. We also want double quoted text to be preserved, so word\n     * order is important - a la google. So this is what we want to\n     * generate:\n     * \n     * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\n     */\n    var a = $.map(search.match(/\"[^\"]+\"|[^ ]+/g) || [''], function (word) {\n      if (word.charAt(0) === '\"') {\n        var m = word.match(/^\"(.*)\"$/);\n        word = m ? m[1] : word;\n      }\n\n      return word.replace('\"', '');\n    });\n    search = '^(?=.*?' + a.join(')(?=.*?') + ').*$';\n  }\n\n  return new RegExp(search, caseInsensitive ? 'i' : '');\n}\n/**\n * Escape a string such that it can be used in a regular expression\n *  @param {string} sVal string to escape\n *  @returns {string} escaped string\n *  @memberof DataTable#oApi\n */\n\n\nvar _fnEscapeRegex = DataTable.util.escapeRegex;\nvar __filter_div = $('<div>')[0];\n\nvar __filter_div_textContent = __filter_div.textContent !== undefined; // Update the filtering data for each row if needed (by invalidation or first run)\n\n\nfunction _fnFilterData(settings) {\n  var columns = settings.aoColumns;\n  var column;\n  var i, j, ien, jen, filterData, cellData, row;\n  var wasInvalidated = false;\n\n  for (i = 0, ien = settings.aoData.length; i < ien; i++) {\n    row = settings.aoData[i];\n\n    if (!row._aFilterData) {\n      filterData = [];\n\n      for (j = 0, jen = columns.length; j < jen; j++) {\n        column = columns[j];\n\n        if (column.bSearchable) {\n          cellData = _fnGetCellData(settings, i, j, 'filter'); // Search in DataTables 1.10 is string based. In 1.11 this\n          // should be altered to also allow strict type checking.\n\n          if (cellData === null) {\n            cellData = '';\n          }\n\n          if (typeof cellData !== 'string' && cellData.toString) {\n            cellData = cellData.toString();\n          }\n        } else {\n          cellData = '';\n        } // If it looks like there is an HTML entity in the string,\n        // attempt to decode it so sorting works as expected. Note that\n        // we could use a single line of jQuery to do this, but the DOM\n        // method used here is much faster http://jsperf.com/html-decode\n\n\n        if (cellData.indexOf && cellData.indexOf('&') !== -1) {\n          __filter_div.innerHTML = cellData;\n          cellData = __filter_div_textContent ? __filter_div.textContent : __filter_div.innerText;\n        }\n\n        if (cellData.replace) {\n          cellData = cellData.replace(/[\\r\\n\\u2028]/g, '');\n        }\n\n        filterData.push(cellData);\n      }\n\n      row._aFilterData = filterData;\n      row._sFilterRow = filterData.join('  ');\n      wasInvalidated = true;\n    }\n  }\n\n  return wasInvalidated;\n}\n/**\n * Convert from the internal Hungarian notation to camelCase for external\n * interaction\n *  @param {object} obj Object to convert\n *  @returns {object} Inverted object\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnSearchToCamel(obj) {\n  return {\n    search: obj.sSearch,\n    smart: obj.bSmart,\n    regex: obj.bRegex,\n    caseInsensitive: obj.bCaseInsensitive\n  };\n}\n/**\n * Convert from camelCase notation to the internal Hungarian. We could use the\n * Hungarian convert function here, but this is cleaner\n *  @param {object} obj Object to convert\n *  @returns {object} Inverted object\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnSearchToHung(obj) {\n  return {\n    sSearch: obj.search,\n    bSmart: obj.smart,\n    bRegex: obj.regex,\n    bCaseInsensitive: obj.caseInsensitive\n  };\n}\n/**\n * Generate the node required for the info display\n *  @param {object} oSettings dataTables settings object\n *  @returns {node} Information element\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnFeatureHtmlInfo(settings) {\n  var tid = settings.sTableId,\n      nodes = settings.aanFeatures.i,\n      n = $('<div/>', {\n    'class': settings.oClasses.sInfo,\n    'id': !nodes ? tid + '_info' : null\n  });\n\n  if (!nodes) {\n    // Update display on each draw\n    settings.aoDrawCallback.push({\n      \"fn\": _fnUpdateInfo,\n      \"sName\": \"information\"\n    });\n    n.attr('role', 'status').attr('aria-live', 'polite'); // Table is described by our info div\n\n    $(settings.nTable).attr('aria-describedby', tid + '_info');\n  }\n\n  return n[0];\n}\n/**\n * Update the information elements in the display\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnUpdateInfo(settings) {\n  /* Show information about the table */\n  var nodes = settings.aanFeatures.i;\n\n  if (nodes.length === 0) {\n    return;\n  }\n\n  var lang = settings.oLanguage,\n      start = settings._iDisplayStart + 1,\n      end = settings.fnDisplayEnd(),\n      max = settings.fnRecordsTotal(),\n      total = settings.fnRecordsDisplay(),\n      out = total ? lang.sInfo : lang.sInfoEmpty;\n\n  if (total !== max) {\n    /* Record set after filtering */\n    out += ' ' + lang.sInfoFiltered;\n  } // Convert the macros\n\n\n  out += lang.sInfoPostFix;\n  out = _fnInfoMacros(settings, out);\n  var callback = lang.fnInfoCallback;\n\n  if (callback !== null) {\n    out = callback.call(settings.oInstance, settings, start, end, max, total, out);\n  }\n\n  $(nodes).html(out);\n}\n\nfunction _fnInfoMacros(settings, str) {\n  // When infinite scrolling, we are always starting at 1. _iDisplayStart is used only\n  // internally\n  var formatter = settings.fnFormatNumber,\n      start = settings._iDisplayStart + 1,\n      len = settings._iDisplayLength,\n      vis = settings.fnRecordsDisplay(),\n      all = len === -1;\n  return str.replace(/_START_/g, formatter.call(settings, start)).replace(/_END_/g, formatter.call(settings, settings.fnDisplayEnd())).replace(/_MAX_/g, formatter.call(settings, settings.fnRecordsTotal())).replace(/_TOTAL_/g, formatter.call(settings, vis)).replace(/_PAGE_/g, formatter.call(settings, all ? 1 : Math.ceil(start / len))).replace(/_PAGES_/g, formatter.call(settings, all ? 1 : Math.ceil(vis / len)));\n}\n/**\n * Draw the table for the first time, adding all required features\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnInitialise(settings) {\n  var i,\n      iLen,\n      iAjaxStart = settings.iInitDisplayStart;\n  var columns = settings.aoColumns,\n      column;\n  var features = settings.oFeatures;\n  var deferLoading = settings.bDeferLoading; // value modified by the draw\n\n  /* Ensure that the table data is fully initialised */\n\n  if (!settings.bInitialised) {\n    setTimeout(function () {\n      _fnInitialise(settings);\n    }, 200);\n    return;\n  }\n  /* Show the display HTML options */\n\n\n  _fnAddOptionsHtml(settings);\n  /* Build and draw the header / footer for the table */\n\n\n  _fnBuildHead(settings);\n\n  _fnDrawHead(settings, settings.aoHeader);\n\n  _fnDrawHead(settings, settings.aoFooter);\n  /* Okay to show that something is going on now */\n\n\n  _fnProcessingDisplay(settings, true);\n  /* Calculate sizes for columns */\n\n\n  if (features.bAutoWidth) {\n    _fnCalculateColumnWidths(settings);\n  }\n\n  for (i = 0, iLen = columns.length; i < iLen; i++) {\n    column = columns[i];\n\n    if (column.sWidth) {\n      column.nTh.style.width = _fnStringToCss(column.sWidth);\n    }\n  }\n\n  _fnCallbackFire(settings, null, 'preInit', [settings]); // If there is default sorting required - let's do it. The sort function\n  // will do the drawing for us. Otherwise we draw the table regardless of the\n  // Ajax source - this allows the table to look initialised for Ajax sourcing\n  // data (show 'loading' message possibly)\n\n\n  _fnReDraw(settings); // Server-side processing init complete is done by _fnAjaxUpdateDraw\n\n\n  var dataSrc = _fnDataSource(settings);\n\n  if (dataSrc != 'ssp' || deferLoading) {\n    // if there is an ajax source load the data\n    if (dataSrc == 'ajax') {\n      _fnBuildAjax(settings, [], function (json) {\n        var aData = _fnAjaxDataSrc(settings, json); // Got the data - add it to the table\n\n\n        for (i = 0; i < aData.length; i++) {\n          _fnAddData(settings, aData[i]);\n        } // Reset the init display for cookie saving. We've already done\n        // a filter, and therefore cleared it before. So we need to make\n        // it appear 'fresh'\n\n\n        settings.iInitDisplayStart = iAjaxStart;\n\n        _fnReDraw(settings);\n\n        _fnProcessingDisplay(settings, false);\n\n        _fnInitComplete(settings, json);\n      }, settings);\n    } else {\n      _fnProcessingDisplay(settings, false);\n\n      _fnInitComplete(settings);\n    }\n  }\n}\n/**\n * Draw the table for the first time, adding all required features\n *  @param {object} oSettings dataTables settings object\n *  @param {object} [json] JSON from the server that completed the table, if using Ajax source\n *    with client-side processing (optional)\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnInitComplete(settings, json) {\n  settings._bInitComplete = true; // When data was added after the initialisation (data or Ajax) we need to\n  // calculate the column sizing\n\n  if (json || settings.oInit.aaData) {\n    _fnAdjustColumnSizing(settings);\n  }\n\n  _fnCallbackFire(settings, null, 'plugin-init', [settings, json]);\n\n  _fnCallbackFire(settings, 'aoInitComplete', 'init', [settings, json]);\n}\n\nfunction _fnLengthChange(settings, val) {\n  var len = parseInt(val, 10);\n  settings._iDisplayLength = len;\n\n  _fnLengthOverflow(settings); // Fire length change event\n\n\n  _fnCallbackFire(settings, null, 'length', [settings, len]);\n}\n/**\n * Generate the node required for user display length changing\n *  @param {object} settings dataTables settings object\n *  @returns {node} Display length feature node\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnFeatureHtmlLength(settings) {\n  var classes = settings.oClasses,\n      tableId = settings.sTableId,\n      menu = settings.aLengthMenu,\n      d2 = Array.isArray(menu[0]),\n      lengths = d2 ? menu[0] : menu,\n      language = d2 ? menu[1] : menu;\n  var select = $('<select/>', {\n    'name': tableId + '_length',\n    'aria-controls': tableId,\n    'class': classes.sLengthSelect\n  });\n\n  for (var i = 0, ien = lengths.length; i < ien; i++) {\n    select[0][i] = new Option(typeof language[i] === 'number' ? settings.fnFormatNumber(language[i]) : language[i], lengths[i]);\n  }\n\n  var div = $('<div><label/></div>').addClass(classes.sLength);\n\n  if (!settings.aanFeatures.l) {\n    div[0].id = tableId + '_length';\n  }\n\n  div.children().append(settings.oLanguage.sLengthMenu.replace('_MENU_', select[0].outerHTML)); // Can't use `select` variable as user might provide their own and the\n  // reference is broken by the use of outerHTML\n\n  $('select', div).val(settings._iDisplayLength).on('change.DT', function (e) {\n    _fnLengthChange(settings, $(this).val());\n\n    _fnDraw(settings);\n  }); // Update node value whenever anything changes the table's length\n\n  $(settings.nTable).on('length.dt.DT', function (e, s, len) {\n    if (settings === s) {\n      $('select', div).val(len);\n    }\n  });\n  return div[0];\n}\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Note that most of the paging logic is done in\n * DataTable.ext.pager\n */\n\n/**\n * Generate the node required for default pagination\n *  @param {object} oSettings dataTables settings object\n *  @returns {node} Pagination feature node\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnFeatureHtmlPaginate(settings) {\n  var type = settings.sPaginationType,\n      plugin = DataTable.ext.pager[type],\n      modern = typeof plugin === 'function',\n      redraw = function (settings) {\n    _fnDraw(settings);\n  },\n      node = $('<div/>').addClass(settings.oClasses.sPaging + type)[0],\n      features = settings.aanFeatures;\n\n  if (!modern) {\n    plugin.fnInit(settings, node, redraw);\n  }\n  /* Add a draw callback for the pagination on first instance, to update the paging display */\n\n\n  if (!features.p) {\n    node.id = settings.sTableId + '_paginate';\n    settings.aoDrawCallback.push({\n      \"fn\": function (settings) {\n        if (modern) {\n          var start = settings._iDisplayStart,\n              len = settings._iDisplayLength,\n              visRecords = settings.fnRecordsDisplay(),\n              all = len === -1,\n              page = all ? 0 : Math.ceil(start / len),\n              pages = all ? 1 : Math.ceil(visRecords / len),\n              buttons = plugin(page, pages),\n              i,\n              ien;\n\n          for (i = 0, ien = features.p.length; i < ien; i++) {\n            _fnRenderer(settings, 'pageButton')(settings, features.p[i], i, buttons, page, pages);\n          }\n        } else {\n          plugin.fnUpdate(settings, redraw);\n        }\n      },\n      \"sName\": \"pagination\"\n    });\n  }\n\n  return node;\n}\n/**\n * Alter the display settings to change the page\n *  @param {object} settings DataTables settings object\n *  @param {string|int} action Paging action to take: \"first\", \"previous\",\n *    \"next\" or \"last\" or page number to jump to (integer)\n *  @param [bool] redraw Automatically draw the update or not\n *  @returns {bool} true page has changed, false - no change\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnPageChange(settings, action, redraw) {\n  var start = settings._iDisplayStart,\n      len = settings._iDisplayLength,\n      records = settings.fnRecordsDisplay();\n\n  if (records === 0 || len === -1) {\n    start = 0;\n  } else if (typeof action === \"number\") {\n    start = action * len;\n\n    if (start > records) {\n      start = 0;\n    }\n  } else if (action == \"first\") {\n    start = 0;\n  } else if (action == \"previous\") {\n    start = len >= 0 ? start - len : 0;\n\n    if (start < 0) {\n      start = 0;\n    }\n  } else if (action == \"next\") {\n    if (start + len < records) {\n      start += len;\n    }\n  } else if (action == \"last\") {\n    start = Math.floor((records - 1) / len) * len;\n  } else {\n    _fnLog(settings, 0, \"Unknown paging action: \" + action, 5);\n  }\n\n  var changed = settings._iDisplayStart !== start;\n  settings._iDisplayStart = start;\n\n  if (changed) {\n    _fnCallbackFire(settings, null, 'page', [settings]);\n\n    if (redraw) {\n      _fnDraw(settings);\n    }\n  } else {\n    // No change event - paging was called, but no change\n    _fnCallbackFire(settings, null, 'page-nc', [settings]);\n  }\n\n  return changed;\n}\n/**\n * Generate the node required for the processing node\n *  @param {object} settings dataTables settings object\n *  @returns {node} Processing element\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnFeatureHtmlProcessing(settings) {\n  return $('<div/>', {\n    'id': !settings.aanFeatures.r ? settings.sTableId + '_processing' : null,\n    'class': settings.oClasses.sProcessing\n  }).html(settings.oLanguage.sProcessing).append('<div><div></div><div></div><div></div><div></div></div>').insertBefore(settings.nTable)[0];\n}\n/**\n * Display or hide the processing indicator\n *  @param {object} settings dataTables settings object\n *  @param {bool} show Show the processing indicator (true) or not (false)\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnProcessingDisplay(settings, show) {\n  if (settings.oFeatures.bProcessing) {\n    $(settings.aanFeatures.r).css('display', show ? 'block' : 'none');\n  }\n\n  _fnCallbackFire(settings, null, 'processing', [settings, show]);\n}\n/**\n * Add any control elements for the table - specifically scrolling\n *  @param {object} settings dataTables settings object\n *  @returns {node} Node to add to the DOM\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnFeatureHtmlTable(settings) {\n  var table = $(settings.nTable); // Scrolling from here on in\n\n  var scroll = settings.oScroll;\n\n  if (scroll.sX === '' && scroll.sY === '') {\n    return settings.nTable;\n  }\n\n  var scrollX = scroll.sX;\n  var scrollY = scroll.sY;\n  var classes = settings.oClasses;\n  var caption = table.children('caption');\n  var captionSide = caption.length ? caption[0]._captionSide : null;\n  var headerClone = $(table[0].cloneNode(false));\n  var footerClone = $(table[0].cloneNode(false));\n  var footer = table.children('tfoot');\n  var _div = '<div/>';\n\n  var size = function (s) {\n    return !s ? null : _fnStringToCss(s);\n  };\n\n  if (!footer.length) {\n    footer = null;\n  }\n  /*\n   * The HTML structure that we want to generate in this function is:\n   *  div - scroller\n   *    div - scroll head\n   *      div - scroll head inner\n   *        table - scroll head table\n   *          thead - thead\n   *    div - scroll body\n   *      table - table (master table)\n   *        thead - thead clone for sizing\n   *        tbody - tbody\n   *    div - scroll foot\n   *      div - scroll foot inner\n   *        table - scroll foot table\n   *          tfoot - tfoot\n   */\n\n\n  var scroller = $(_div, {\n    'class': classes.sScrollWrapper\n  }).append($(_div, {\n    'class': classes.sScrollHead\n  }).css({\n    overflow: 'hidden',\n    position: 'relative',\n    border: 0,\n    width: scrollX ? size(scrollX) : '100%'\n  }).append($(_div, {\n    'class': classes.sScrollHeadInner\n  }).css({\n    'box-sizing': 'content-box',\n    width: scroll.sXInner || '100%'\n  }).append(headerClone.removeAttr('id').css('margin-left', 0).append(captionSide === 'top' ? caption : null).append(table.children('thead'))))).append($(_div, {\n    'class': classes.sScrollBody\n  }).css({\n    position: 'relative',\n    overflow: 'auto',\n    width: size(scrollX)\n  }).append(table));\n\n  if (footer) {\n    scroller.append($(_div, {\n      'class': classes.sScrollFoot\n    }).css({\n      overflow: 'hidden',\n      border: 0,\n      width: scrollX ? size(scrollX) : '100%'\n    }).append($(_div, {\n      'class': classes.sScrollFootInner\n    }).append(footerClone.removeAttr('id').css('margin-left', 0).append(captionSide === 'bottom' ? caption : null).append(table.children('tfoot')))));\n  }\n\n  var children = scroller.children();\n  var scrollHead = children[0];\n  var scrollBody = children[1];\n  var scrollFoot = footer ? children[2] : null; // When the body is scrolled, then we also want to scroll the headers\n\n  if (scrollX) {\n    $(scrollBody).on('scroll.DT', function (e) {\n      var scrollLeft = this.scrollLeft;\n      scrollHead.scrollLeft = scrollLeft;\n\n      if (footer) {\n        scrollFoot.scrollLeft = scrollLeft;\n      }\n    });\n  }\n\n  $(scrollBody).css('max-height', scrollY);\n\n  if (!scroll.bCollapse) {\n    $(scrollBody).css('height', scrollY);\n  }\n\n  settings.nScrollHead = scrollHead;\n  settings.nScrollBody = scrollBody;\n  settings.nScrollFoot = scrollFoot; // On redraw - align columns\n\n  settings.aoDrawCallback.push({\n    \"fn\": _fnScrollDraw,\n    \"sName\": \"scrolling\"\n  });\n  return scroller[0];\n}\n/**\n * Update the header, footer and body tables for resizing - i.e. column\n * alignment.\n *\n * Welcome to the most horrible function DataTables. The process that this\n * function follows is basically:\n *   1. Re-create the table inside the scrolling div\n *   2. Take live measurements from the DOM\n *   3. Apply the measurements to align the columns\n *   4. Clean up\n *\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnScrollDraw(settings) {\n  // Given that this is such a monster function, a lot of variables are use\n  // to try and keep the minimised size as small as possible\n  var scroll = settings.oScroll,\n      scrollX = scroll.sX,\n      scrollXInner = scroll.sXInner,\n      scrollY = scroll.sY,\n      barWidth = scroll.iBarWidth,\n      divHeader = $(settings.nScrollHead),\n      divHeaderStyle = divHeader[0].style,\n      divHeaderInner = divHeader.children('div'),\n      divHeaderInnerStyle = divHeaderInner[0].style,\n      divHeaderTable = divHeaderInner.children('table'),\n      divBodyEl = settings.nScrollBody,\n      divBody = $(divBodyEl),\n      divBodyStyle = divBodyEl.style,\n      divFooter = $(settings.nScrollFoot),\n      divFooterInner = divFooter.children('div'),\n      divFooterTable = divFooterInner.children('table'),\n      header = $(settings.nTHead),\n      table = $(settings.nTable),\n      tableEl = table[0],\n      tableStyle = tableEl.style,\n      footer = settings.nTFoot ? $(settings.nTFoot) : null,\n      browser = settings.oBrowser,\n      ie67 = browser.bScrollOversize,\n      dtHeaderCells = _pluck(settings.aoColumns, 'nTh'),\n      headerTrgEls,\n      footerTrgEls,\n      headerSrcEls,\n      footerSrcEls,\n      headerCopy,\n      footerCopy,\n      headerWidths = [],\n      footerWidths = [],\n      headerContent = [],\n      footerContent = [],\n      idx,\n      correction,\n      sanityWidth,\n      zeroOut = function (nSizer) {\n    var style = nSizer.style;\n    style.paddingTop = \"0\";\n    style.paddingBottom = \"0\";\n    style.borderTopWidth = \"0\";\n    style.borderBottomWidth = \"0\";\n    style.height = 0;\n  }; // If the scrollbar visibility has changed from the last draw, we need to\n  // adjust the column sizes as the table width will have changed to account\n  // for the scrollbar\n\n\n  var scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;\n\n  if (settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined) {\n    settings.scrollBarVis = scrollBarVis;\n\n    _fnAdjustColumnSizing(settings);\n\n    return; // adjust column sizing will call this function again\n  } else {\n    settings.scrollBarVis = scrollBarVis;\n  }\n  /*\n   * 1. Re-create the table inside the scrolling div\n   */\n  // Remove the old minimised thead and tfoot elements in the inner table\n\n\n  table.children('thead, tfoot').remove();\n\n  if (footer) {\n    footerCopy = footer.clone().prependTo(table);\n    footerTrgEls = footer.find('tr'); // the original tfoot is in its own table and must be sized\n\n    footerSrcEls = footerCopy.find('tr');\n    footerCopy.find('[id]').removeAttr('id');\n  } // Clone the current header and footer elements and then place it into the inner table\n\n\n  headerCopy = header.clone().prependTo(table);\n  headerTrgEls = header.find('tr'); // original header is in its own table\n\n  headerSrcEls = headerCopy.find('tr');\n  headerCopy.find('th, td').removeAttr('tabindex');\n  headerCopy.find('[id]').removeAttr('id');\n  /*\n   * 2. Take live measurements from the DOM - do not alter the DOM itself!\n   */\n  // Remove old sizing and apply the calculated column widths\n  // Get the unique column headers in the newly created (cloned) header. We want to apply the\n  // calculated sizes to this header\n\n  if (!scrollX) {\n    divBodyStyle.width = '100%';\n    divHeader[0].style.width = '100%';\n  }\n\n  $.each(_fnGetUniqueThs(settings, headerCopy), function (i, el) {\n    idx = _fnVisibleToColumnIndex(settings, i);\n    el.style.width = settings.aoColumns[idx].sWidth;\n  });\n\n  if (footer) {\n    _fnApplyToChildren(function (n) {\n      n.style.width = \"\";\n    }, footerSrcEls);\n  } // Size the table as a whole\n\n\n  sanityWidth = table.outerWidth();\n\n  if (scrollX === \"\") {\n    // No x scrolling\n    tableStyle.width = \"100%\"; // IE7 will make the width of the table when 100% include the scrollbar\n    // - which is shouldn't. When there is a scrollbar we need to take this\n    // into account.\n\n    if (ie67 && (table.find('tbody').height() > divBodyEl.offsetHeight || divBody.css('overflow-y') == \"scroll\")) {\n      tableStyle.width = _fnStringToCss(table.outerWidth() - barWidth);\n    } // Recalculate the sanity width\n\n\n    sanityWidth = table.outerWidth();\n  } else if (scrollXInner !== \"\") {\n    // legacy x scroll inner has been given - use it\n    tableStyle.width = _fnStringToCss(scrollXInner); // Recalculate the sanity width\n\n    sanityWidth = table.outerWidth();\n  } // Hidden header should have zero height, so remove padding and borders. Then\n  // set the width based on the real headers\n  // Apply all styles in one pass\n\n\n  _fnApplyToChildren(zeroOut, headerSrcEls); // Read all widths in next pass\n\n\n  _fnApplyToChildren(function (nSizer) {\n    var style = window.getComputedStyle ? window.getComputedStyle(nSizer).width : _fnStringToCss($(nSizer).width());\n    headerContent.push(nSizer.innerHTML);\n    headerWidths.push(style);\n  }, headerSrcEls); // Apply all widths in final pass\n\n\n  _fnApplyToChildren(function (nToSize, i) {\n    nToSize.style.width = headerWidths[i];\n  }, headerTrgEls);\n\n  $(headerSrcEls).css('height', 0);\n  /* Same again with the footer if we have one */\n\n  if (footer) {\n    _fnApplyToChildren(zeroOut, footerSrcEls);\n\n    _fnApplyToChildren(function (nSizer) {\n      footerContent.push(nSizer.innerHTML);\n      footerWidths.push(_fnStringToCss($(nSizer).css('width')));\n    }, footerSrcEls);\n\n    _fnApplyToChildren(function (nToSize, i) {\n      nToSize.style.width = footerWidths[i];\n    }, footerTrgEls);\n\n    $(footerSrcEls).height(0);\n  }\n  /*\n   * 3. Apply the measurements\n   */\n  // \"Hide\" the header and footer that we used for the sizing. We need to keep\n  // the content of the cell so that the width applied to the header and body\n  // both match, but we want to hide it completely. We want to also fix their\n  // width to what they currently are\n\n\n  _fnApplyToChildren(function (nSizer, i) {\n    nSizer.innerHTML = '<div class=\"dataTables_sizing\">' + headerContent[i] + '</div>';\n    nSizer.childNodes[0].style.height = \"0\";\n    nSizer.childNodes[0].style.overflow = \"hidden\";\n    nSizer.style.width = headerWidths[i];\n  }, headerSrcEls);\n\n  if (footer) {\n    _fnApplyToChildren(function (nSizer, i) {\n      nSizer.innerHTML = '<div class=\"dataTables_sizing\">' + footerContent[i] + '</div>';\n      nSizer.childNodes[0].style.height = \"0\";\n      nSizer.childNodes[0].style.overflow = \"hidden\";\n      nSizer.style.width = footerWidths[i];\n    }, footerSrcEls);\n  } // Sanity check that the table is of a sensible width. If not then we are going to get\n  // misalignment - try to prevent this by not allowing the table to shrink below its min width\n\n\n  if (Math.round(table.outerWidth()) < Math.round(sanityWidth)) {\n    // The min width depends upon if we have a vertical scrollbar visible or not */\n    correction = divBodyEl.scrollHeight > divBodyEl.offsetHeight || divBody.css('overflow-y') == \"scroll\" ? sanityWidth + barWidth : sanityWidth; // IE6/7 are a law unto themselves...\n\n    if (ie67 && (divBodyEl.scrollHeight > divBodyEl.offsetHeight || divBody.css('overflow-y') == \"scroll\")) {\n      tableStyle.width = _fnStringToCss(correction - barWidth);\n    } // And give the user a warning that we've stopped the table getting too small\n\n\n    if (scrollX === \"\" || scrollXInner !== \"\") {\n      _fnLog(settings, 1, 'Possible column misalignment', 6);\n    }\n  } else {\n    correction = '100%';\n  } // Apply to the container elements\n\n\n  divBodyStyle.width = _fnStringToCss(correction);\n  divHeaderStyle.width = _fnStringToCss(correction);\n\n  if (footer) {\n    settings.nScrollFoot.style.width = _fnStringToCss(correction);\n  }\n  /*\n   * 4. Clean up\n   */\n\n\n  if (!scrollY) {\n    /* IE7< puts a vertical scrollbar in place (when it shouldn't be) due to subtracting\n     * the scrollbar height from the visible display, rather than adding it on. We need to\n     * set the height in order to sort this. Don't want to do it in any other browsers.\n     */\n    if (ie67) {\n      divBodyStyle.height = _fnStringToCss(tableEl.offsetHeight + barWidth);\n    }\n  }\n  /* Finally set the width's of the header and footer tables */\n\n\n  var iOuterWidth = table.outerWidth();\n  divHeaderTable[0].style.width = _fnStringToCss(iOuterWidth);\n  divHeaderInnerStyle.width = _fnStringToCss(iOuterWidth); // Figure out if there are scrollbar present - if so then we need a the header and footer to\n  // provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\n\n  var bScrolling = table.height() > divBodyEl.clientHeight || divBody.css('overflow-y') == \"scroll\";\n  var padding = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right');\n  divHeaderInnerStyle[padding] = bScrolling ? barWidth + \"px\" : \"0px\";\n\n  if (footer) {\n    divFooterTable[0].style.width = _fnStringToCss(iOuterWidth);\n    divFooterInner[0].style.width = _fnStringToCss(iOuterWidth);\n    divFooterInner[0].style[padding] = bScrolling ? barWidth + \"px\" : \"0px\";\n  } // Correct DOM ordering for colgroup - comes before the thead\n\n\n  table.children('colgroup').insertBefore(table.children('thead'));\n  /* Adjust the position of the header in case we loose the y-scrollbar */\n\n  divBody.trigger('scroll'); // If sorting or filtering has occurred, jump the scrolling back to the top\n  // only if we aren't holding the position\n\n  if ((settings.bSorted || settings.bFiltered) && !settings._drawHold) {\n    divBodyEl.scrollTop = 0;\n  }\n}\n/**\n * Apply a given function to the display child nodes of an element array (typically\n * TD children of TR rows\n *  @param {function} fn Method to apply to the objects\n *  @param array {nodes} an1 List of elements to look through for display children\n *  @param array {nodes} an2 Another list (identical structure to the first) - optional\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnApplyToChildren(fn, an1, an2) {\n  var index = 0,\n      i = 0,\n      iLen = an1.length;\n  var nNode1, nNode2;\n\n  while (i < iLen) {\n    nNode1 = an1[i].firstChild;\n    nNode2 = an2 ? an2[i].firstChild : null;\n\n    while (nNode1) {\n      if (nNode1.nodeType === 1) {\n        if (an2) {\n          fn(nNode1, nNode2, index);\n        } else {\n          fn(nNode1, index);\n        }\n\n        index++;\n      }\n\n      nNode1 = nNode1.nextSibling;\n      nNode2 = an2 ? nNode2.nextSibling : null;\n    }\n\n    i++;\n  }\n}\n\nvar __re_html_remove = /<.*?>/g;\n/**\n * Calculate the width of columns for the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\n\nfunction _fnCalculateColumnWidths(oSettings) {\n  var table = oSettings.nTable,\n      columns = oSettings.aoColumns,\n      scroll = oSettings.oScroll,\n      scrollY = scroll.sY,\n      scrollX = scroll.sX,\n      scrollXInner = scroll.sXInner,\n      columnCount = columns.length,\n      visibleColumns = _fnGetColumns(oSettings, 'bVisible'),\n      headerCells = $('th', oSettings.nTHead),\n      tableWidthAttr = table.getAttribute('width'),\n      // from DOM element\n  tableContainer = table.parentNode,\n      userInputs = false,\n      i,\n      column,\n      columnIdx,\n      width,\n      outerWidth,\n      browser = oSettings.oBrowser,\n      ie67 = browser.bScrollOversize;\n\n  var styleWidth = table.style.width;\n\n  if (styleWidth && styleWidth.indexOf('%') !== -1) {\n    tableWidthAttr = styleWidth;\n  }\n  /* Convert any user input sizes into pixel sizes */\n\n\n  for (i = 0; i < visibleColumns.length; i++) {\n    column = columns[visibleColumns[i]];\n\n    if (column.sWidth !== null) {\n      column.sWidth = _fnConvertToWidth(column.sWidthOrig, tableContainer);\n      userInputs = true;\n    }\n  }\n  /* If the number of columns in the DOM equals the number that we have to\n   * process in DataTables, then we can use the offsets that are created by\n   * the web- browser. No custom sizes can be set in order for this to happen,\n   * nor scrolling used\n   */\n\n\n  if (ie67 || !userInputs && !scrollX && !scrollY && columnCount == _fnVisbleColumns(oSettings) && columnCount == headerCells.length) {\n    for (i = 0; i < columnCount; i++) {\n      var colIdx = _fnVisibleToColumnIndex(oSettings, i);\n\n      if (colIdx !== null) {\n        columns[colIdx].sWidth = _fnStringToCss(headerCells.eq(i).width());\n      }\n    }\n  } else {\n    // Otherwise construct a single row, worst case, table with the widest\n    // node in the data, assign any user defined widths, then insert it into\n    // the DOM and allow the browser to do all the hard work of calculating\n    // table widths\n    var tmpTable = $(table).clone() // don't use cloneNode - IE8 will remove events on the main table\n    .css('visibility', 'hidden').removeAttr('id'); // Clean up the table body\n\n    tmpTable.find('tbody tr').remove();\n    var tr = $('<tr/>').appendTo(tmpTable.find('tbody')); // Clone the table header and footer - we can't use the header / footer\n    // from the cloned table, since if scrolling is active, the table's\n    // real header and footer are contained in different table tags\n\n    tmpTable.find('thead, tfoot').remove();\n    tmpTable.append($(oSettings.nTHead).clone()).append($(oSettings.nTFoot).clone()); // Remove any assigned widths from the footer (from scrolling)\n\n    tmpTable.find('tfoot th, tfoot td').css('width', ''); // Apply custom sizing to the cloned header\n\n    headerCells = _fnGetUniqueThs(oSettings, tmpTable.find('thead')[0]);\n\n    for (i = 0; i < visibleColumns.length; i++) {\n      column = columns[visibleColumns[i]];\n      headerCells[i].style.width = column.sWidthOrig !== null && column.sWidthOrig !== '' ? _fnStringToCss(column.sWidthOrig) : ''; // For scrollX we need to force the column width otherwise the\n      // browser will collapse it. If this width is smaller than the\n      // width the column requires, then it will have no effect\n\n      if (column.sWidthOrig && scrollX) {\n        $(headerCells[i]).append($('<div/>').css({\n          width: column.sWidthOrig,\n          margin: 0,\n          padding: 0,\n          border: 0,\n          height: 1\n        }));\n      }\n    } // Find the widest cell for each column and put it into the table\n\n\n    if (oSettings.aoData.length) {\n      for (i = 0; i < visibleColumns.length; i++) {\n        columnIdx = visibleColumns[i];\n        column = columns[columnIdx];\n        $(_fnGetWidestNode(oSettings, columnIdx)).clone(false).append(column.sContentPadding).appendTo(tr);\n      }\n    } // Tidy the temporary table - remove name attributes so there aren't\n    // duplicated in the dom (radio elements for example)\n\n\n    $('[name]', tmpTable).removeAttr('name'); // Table has been built, attach to the document so we can work with it.\n    // A holding element is used, positioned at the top of the container\n    // with minimal height, so it has no effect on if the container scrolls\n    // or not. Otherwise it might trigger scrolling when it actually isn't\n    // needed\n\n    var holder = $('<div/>').css(scrollX || scrollY ? {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      height: 1,\n      right: 0,\n      overflow: 'hidden'\n    } : {}).append(tmpTable).appendTo(tableContainer); // When scrolling (X or Y) we want to set the width of the table as \n    // appropriate. However, when not scrolling leave the table width as it\n    // is. This results in slightly different, but I think correct behaviour\n\n    if (scrollX && scrollXInner) {\n      tmpTable.width(scrollXInner);\n    } else if (scrollX) {\n      tmpTable.css('width', 'auto');\n      tmpTable.removeAttr('width'); // If there is no width attribute or style, then allow the table to\n      // collapse\n\n      if (tmpTable.width() < tableContainer.clientWidth && tableWidthAttr) {\n        tmpTable.width(tableContainer.clientWidth);\n      }\n    } else if (scrollY) {\n      tmpTable.width(tableContainer.clientWidth);\n    } else if (tableWidthAttr) {\n      tmpTable.width(tableWidthAttr);\n    } // Get the width of each column in the constructed table - we need to\n    // know the inner width (so it can be assigned to the other table's\n    // cells) and the outer width so we can calculate the full width of the\n    // table. This is safe since DataTables requires a unique cell for each\n    // column, but if ever a header can span multiple columns, this will\n    // need to be modified.\n\n\n    var total = 0;\n\n    for (i = 0; i < visibleColumns.length; i++) {\n      var cell = $(headerCells[i]);\n      var border = cell.outerWidth() - cell.width(); // Use getBounding... where possible (not IE8-) because it can give\n      // sub-pixel accuracy, which we then want to round up!\n\n      var bounding = browser.bBounding ? Math.ceil(headerCells[i].getBoundingClientRect().width) : cell.outerWidth(); // Total is tracked to remove any sub-pixel errors as the outerWidth\n      // of the table might not equal the total given here (IE!).\n\n      total += bounding; // Width for each column to use\n\n      columns[visibleColumns[i]].sWidth = _fnStringToCss(bounding - border);\n    }\n\n    table.style.width = _fnStringToCss(total); // Finished with the table - ditch it\n\n    holder.remove();\n  } // If there is a width attr, we want to attach an event listener which\n  // allows the table sizing to automatically adjust when the window is\n  // resized. Use the width attr rather than CSS, since we can't know if the\n  // CSS is a relative value or absolute - DOM read is always px.\n\n\n  if (tableWidthAttr) {\n    table.style.width = _fnStringToCss(tableWidthAttr);\n  }\n\n  if ((tableWidthAttr || scrollX) && !oSettings._reszEvt) {\n    var bindResize = function () {\n      $(window).on('resize.DT-' + oSettings.sInstance, _fnThrottle(function () {\n        _fnAdjustColumnSizing(oSettings);\n      }));\n    }; // IE6/7 will crash if we bind a resize event handler on page load.\n    // To be removed in 1.11 which drops IE6/7 support\n\n\n    if (ie67) {\n      setTimeout(bindResize, 1000);\n    } else {\n      bindResize();\n    }\n\n    oSettings._reszEvt = true;\n  }\n}\n/**\n * Throttle the calls to a function. Arguments and context are maintained for\n * the throttled function\n *  @param {function} fn Function to be called\n *  @param {int} [freq=200] call frequency in mS\n *  @returns {function} wrapped function\n *  @memberof DataTable#oApi\n */\n\n\nvar _fnThrottle = DataTable.util.throttle;\n/**\n * Convert a CSS unit width to pixels (e.g. 2em)\n *  @param {string} width width to be converted\n *  @param {node} parent parent to get the with for (required for relative widths) - optional\n *  @returns {int} width in pixels\n *  @memberof DataTable#oApi\n */\n\nfunction _fnConvertToWidth(width, parent) {\n  if (!width) {\n    return 0;\n  }\n\n  var n = $('<div/>').css('width', _fnStringToCss(width)).appendTo(parent || document.body);\n  var val = n[0].offsetWidth;\n  n.remove();\n  return val;\n}\n/**\n * Get the widest node\n *  @param {object} settings dataTables settings object\n *  @param {int} colIdx column of interest\n *  @returns {node} widest table node\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnGetWidestNode(settings, colIdx) {\n  var idx = _fnGetMaxLenString(settings, colIdx);\n\n  if (idx < 0) {\n    return null;\n  }\n\n  var data = settings.aoData[idx];\n  return !data.nTr ? // Might not have been created when deferred rendering\n  $('<td/>').html(_fnGetCellData(settings, idx, colIdx, 'display'))[0] : data.anCells[colIdx];\n}\n/**\n * Get the maximum strlen for each data column\n *  @param {object} settings dataTables settings object\n *  @param {int} colIdx column of interest\n *  @returns {string} max string length for each column\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnGetMaxLenString(settings, colIdx) {\n  var s,\n      max = -1,\n      maxIdx = -1;\n\n  for (var i = 0, ien = settings.aoData.length; i < ien; i++) {\n    s = _fnGetCellData(settings, i, colIdx, 'display') + '';\n    s = s.replace(__re_html_remove, '');\n    s = s.replace(/&nbsp;/g, ' ');\n\n    if (s.length > max) {\n      max = s.length;\n      maxIdx = i;\n    }\n  }\n\n  return maxIdx;\n}\n/**\n * Append a CSS unit (only if required) to a string\n *  @param {string} value to css-ify\n *  @returns {string} value with css unit\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnStringToCss(s) {\n  if (s === null) {\n    return '0px';\n  }\n\n  if (typeof s == 'number') {\n    return s < 0 ? '0px' : s + 'px';\n  } // Check it has a unit character already\n\n\n  return s.match(/\\d$/) ? s + 'px' : s;\n}\n\nfunction _fnSortFlatten(settings) {\n  var i,\n      iLen,\n      k,\n      kLen,\n      aSort = [],\n      aiOrig = [],\n      aoColumns = settings.aoColumns,\n      aDataSort,\n      iCol,\n      sType,\n      srcCol,\n      fixed = settings.aaSortingFixed,\n      fixedObj = $.isPlainObject(fixed),\n      nestedSort = [],\n      add = function (a) {\n    if (a.length && !Array.isArray(a[0])) {\n      // 1D array\n      nestedSort.push(a);\n    } else {\n      // 2D array\n      $.merge(nestedSort, a);\n    }\n  }; // Build the sort array, with pre-fix and post-fix options if they have been\n  // specified\n\n\n  if (Array.isArray(fixed)) {\n    add(fixed);\n  }\n\n  if (fixedObj && fixed.pre) {\n    add(fixed.pre);\n  }\n\n  add(settings.aaSorting);\n\n  if (fixedObj && fixed.post) {\n    add(fixed.post);\n  }\n\n  for (i = 0; i < nestedSort.length; i++) {\n    srcCol = nestedSort[i][0];\n    aDataSort = aoColumns[srcCol].aDataSort;\n\n    for (k = 0, kLen = aDataSort.length; k < kLen; k++) {\n      iCol = aDataSort[k];\n      sType = aoColumns[iCol].sType || 'string';\n\n      if (nestedSort[i]._idx === undefined) {\n        nestedSort[i]._idx = $.inArray(nestedSort[i][1], aoColumns[iCol].asSorting);\n      }\n\n      aSort.push({\n        src: srcCol,\n        col: iCol,\n        dir: nestedSort[i][1],\n        index: nestedSort[i]._idx,\n        type: sType,\n        formatter: DataTable.ext.type.order[sType + \"-pre\"]\n      });\n    }\n  }\n\n  return aSort;\n}\n/**\n * Change the order of the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n *  @todo This really needs split up!\n */\n\n\nfunction _fnSort(oSettings) {\n  var i,\n      ien,\n      iLen,\n      j,\n      jLen,\n      k,\n      kLen,\n      sDataType,\n      nTh,\n      aiOrig = [],\n      oExtSort = DataTable.ext.type.order,\n      aoData = oSettings.aoData,\n      aoColumns = oSettings.aoColumns,\n      aDataSort,\n      data,\n      iCol,\n      sType,\n      oSort,\n      formatters = 0,\n      sortCol,\n      displayMaster = oSettings.aiDisplayMaster,\n      aSort; // Resolve any column types that are unknown due to addition or invalidation\n  // @todo Can this be moved into a 'data-ready' handler which is called when\n  //   data is going to be used in the table?\n\n  _fnColumnTypes(oSettings);\n\n  aSort = _fnSortFlatten(oSettings);\n\n  for (i = 0, ien = aSort.length; i < ien; i++) {\n    sortCol = aSort[i]; // Track if we can use the fast sort algorithm\n\n    if (sortCol.formatter) {\n      formatters++;\n    } // Load the data needed for the sort, for each cell\n\n\n    _fnSortData(oSettings, sortCol.col);\n  }\n  /* No sorting required if server-side or no sorting array */\n\n\n  if (_fnDataSource(oSettings) != 'ssp' && aSort.length !== 0) {\n    // Create a value - key array of the current row positions such that we can use their\n    // current position during the sort, if values match, in order to perform stable sorting\n    for (i = 0, iLen = displayMaster.length; i < iLen; i++) {\n      aiOrig[displayMaster[i]] = i;\n    }\n    /* Do the sort - here we want multi-column sorting based on a given data source (column)\n     * and sorting function (from oSort) in a certain direction. It's reasonably complex to\n     * follow on it's own, but this is what we want (example two column sorting):\n     *  fnLocalSorting = function(a,b){\n     *    var iTest;\n     *    iTest = oSort['string-asc']('data11', 'data12');\n     *      if (iTest !== 0)\n     *        return iTest;\n     *    iTest = oSort['numeric-desc']('data21', 'data22');\n     *    if (iTest !== 0)\n     *      return iTest;\n     *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\n     *  }\n     * Basically we have a test for each sorting column, if the data in that column is equal,\n     * test the next column. If all columns match, then we use a numeric sort on the row\n     * positions in the original data array to provide a stable sort.\n     *\n     * Note - I know it seems excessive to have two sorting methods, but the first is around\n     * 15% faster, so the second is only maintained for backwards compatibility with sorting\n     * methods which do not have a pre-sort formatting function.\n     */\n\n\n    if (formatters === aSort.length) {\n      // All sort types have formatting functions\n      displayMaster.sort(function (a, b) {\n        var x,\n            y,\n            k,\n            test,\n            sort,\n            len = aSort.length,\n            dataA = aoData[a]._aSortData,\n            dataB = aoData[b]._aSortData;\n\n        for (k = 0; k < len; k++) {\n          sort = aSort[k];\n          x = dataA[sort.col];\n          y = dataB[sort.col];\n          test = x < y ? -1 : x > y ? 1 : 0;\n\n          if (test !== 0) {\n            return sort.dir === 'asc' ? test : -test;\n          }\n        }\n\n        x = aiOrig[a];\n        y = aiOrig[b];\n        return x < y ? -1 : x > y ? 1 : 0;\n      });\n    } else {\n      // Depreciated - remove in 1.11 (providing a plug-in option)\n      // Not all sort types have formatting methods, so we have to call their sorting\n      // methods.\n      displayMaster.sort(function (a, b) {\n        var x,\n            y,\n            k,\n            l,\n            test,\n            sort,\n            fn,\n            len = aSort.length,\n            dataA = aoData[a]._aSortData,\n            dataB = aoData[b]._aSortData;\n\n        for (k = 0; k < len; k++) {\n          sort = aSort[k];\n          x = dataA[sort.col];\n          y = dataB[sort.col];\n          fn = oExtSort[sort.type + \"-\" + sort.dir] || oExtSort[\"string-\" + sort.dir];\n          test = fn(x, y);\n\n          if (test !== 0) {\n            return test;\n          }\n        }\n\n        x = aiOrig[a];\n        y = aiOrig[b];\n        return x < y ? -1 : x > y ? 1 : 0;\n      });\n    }\n  }\n  /* Tell the draw function that we have sorted the data */\n\n\n  oSettings.bSorted = true;\n}\n\nfunction _fnSortAria(settings) {\n  var label;\n  var nextSort;\n  var columns = settings.aoColumns;\n\n  var aSort = _fnSortFlatten(settings);\n\n  var oAria = settings.oLanguage.oAria; // ARIA attributes - need to loop all columns, to update all (removing old\n  // attributes as needed)\n\n  for (var i = 0, iLen = columns.length; i < iLen; i++) {\n    var col = columns[i];\n    var asSorting = col.asSorting;\n    var sTitle = col.ariaTitle || col.sTitle.replace(/<.*?>/g, \"\");\n    var th = col.nTh; // IE7 is throwing an error when setting these properties with jQuery's\n    // attr() and removeAttr() methods...\n\n    th.removeAttribute('aria-sort');\n    /* In ARIA only the first sorting column can be marked as sorting - no multi-sort option */\n\n    if (col.bSortable) {\n      if (aSort.length > 0 && aSort[0].col == i) {\n        th.setAttribute('aria-sort', aSort[0].dir == \"asc\" ? \"ascending\" : \"descending\");\n        nextSort = asSorting[aSort[0].index + 1] || asSorting[0];\n      } else {\n        nextSort = asSorting[0];\n      }\n\n      label = sTitle + (nextSort === \"asc\" ? oAria.sSortAscending : oAria.sSortDescending);\n    } else {\n      label = sTitle;\n    }\n\n    th.setAttribute('aria-label', label);\n  }\n}\n/**\n * Function to run on user sort request\n *  @param {object} settings dataTables settings object\n *  @param {node} attachTo node to attach the handler to\n *  @param {int} colIdx column sorting index\n *  @param {boolean} [append=false] Append the requested sort to the existing\n *    sort if true (i.e. multi-column sort)\n *  @param {function} [callback] callback function\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnSortListener(settings, colIdx, append, callback) {\n  var col = settings.aoColumns[colIdx];\n  var sorting = settings.aaSorting;\n  var asSorting = col.asSorting;\n  var nextSortIdx;\n\n  var next = function (a, overflow) {\n    var idx = a._idx;\n\n    if (idx === undefined) {\n      idx = $.inArray(a[1], asSorting);\n    }\n\n    return idx + 1 < asSorting.length ? idx + 1 : overflow ? null : 0;\n  }; // Convert to 2D array if needed\n\n\n  if (typeof sorting[0] === 'number') {\n    sorting = settings.aaSorting = [sorting];\n  } // If appending the sort then we are multi-column sorting\n\n\n  if (append && settings.oFeatures.bSortMulti) {\n    // Are we already doing some kind of sort on this column?\n    var sortIdx = $.inArray(colIdx, _pluck(sorting, '0'));\n\n    if (sortIdx !== -1) {\n      // Yes, modify the sort\n      nextSortIdx = next(sorting[sortIdx], true);\n\n      if (nextSortIdx === null && sorting.length === 1) {\n        nextSortIdx = 0; // can't remove sorting completely\n      }\n\n      if (nextSortIdx === null) {\n        sorting.splice(sortIdx, 1);\n      } else {\n        sorting[sortIdx][1] = asSorting[nextSortIdx];\n        sorting[sortIdx]._idx = nextSortIdx;\n      }\n    } else {\n      // No sort on this column yet\n      sorting.push([colIdx, asSorting[0], 0]);\n      sorting[sorting.length - 1]._idx = 0;\n    }\n  } else if (sorting.length && sorting[0][0] == colIdx) {\n    // Single column - already sorting on this column, modify the sort\n    nextSortIdx = next(sorting[0]);\n    sorting.length = 1;\n    sorting[0][1] = asSorting[nextSortIdx];\n    sorting[0]._idx = nextSortIdx;\n  } else {\n    // Single column - sort only on this column\n    sorting.length = 0;\n    sorting.push([colIdx, asSorting[0]]);\n    sorting[0]._idx = 0;\n  } // Run the sort by calling a full redraw\n\n\n  _fnReDraw(settings); // callback used for async user interaction\n\n\n  if (typeof callback == 'function') {\n    callback(settings);\n  }\n}\n/**\n * Attach a sort handler (click) to a node\n *  @param {object} settings dataTables settings object\n *  @param {node} attachTo node to attach the handler to\n *  @param {int} colIdx column sorting index\n *  @param {function} [callback] callback function\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnSortAttachListener(settings, attachTo, colIdx, callback) {\n  var col = settings.aoColumns[colIdx];\n\n  _fnBindAction(attachTo, {}, function (e) {\n    /* If the column is not sortable - don't to anything */\n    if (col.bSortable === false) {\n      return;\n    } // If processing is enabled use a timeout to allow the processing\n    // display to be shown - otherwise to it synchronously\n\n\n    if (settings.oFeatures.bProcessing) {\n      _fnProcessingDisplay(settings, true);\n\n      setTimeout(function () {\n        _fnSortListener(settings, colIdx, e.shiftKey, callback); // In server-side processing, the draw callback will remove the\n        // processing display\n\n\n        if (_fnDataSource(settings) !== 'ssp') {\n          _fnProcessingDisplay(settings, false);\n        }\n      }, 0);\n    } else {\n      _fnSortListener(settings, colIdx, e.shiftKey, callback);\n    }\n  });\n}\n/**\n * Set the sorting classes on table's body, Note: it is safe to call this function\n * when bSort and bSortClasses are false\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnSortingClasses(settings) {\n  var oldSort = settings.aLastSort;\n  var sortClass = settings.oClasses.sSortColumn;\n\n  var sort = _fnSortFlatten(settings);\n\n  var features = settings.oFeatures;\n  var i, ien, colIdx;\n\n  if (features.bSort && features.bSortClasses) {\n    // Remove old sorting classes\n    for (i = 0, ien = oldSort.length; i < ien; i++) {\n      colIdx = oldSort[i].src; // Remove column sorting\n\n      $(_pluck(settings.aoData, 'anCells', colIdx)).removeClass(sortClass + (i < 2 ? i + 1 : 3));\n    } // Add new column sorting\n\n\n    for (i = 0, ien = sort.length; i < ien; i++) {\n      colIdx = sort[i].src;\n      $(_pluck(settings.aoData, 'anCells', colIdx)).addClass(sortClass + (i < 2 ? i + 1 : 3));\n    }\n  }\n\n  settings.aLastSort = sort;\n} // Get the data to sort a column, be it from cache, fresh (populating the\n// cache), or from a sort formatter\n\n\nfunction _fnSortData(settings, idx) {\n  // Custom sorting function - provided by the sort data type\n  var column = settings.aoColumns[idx];\n  var customSort = DataTable.ext.order[column.sSortDataType];\n  var customData;\n\n  if (customSort) {\n    customData = customSort.call(settings.oInstance, settings, idx, _fnColumnIndexToVisible(settings, idx));\n  } // Use / populate cache\n\n\n  var row, cellData;\n  var formatter = DataTable.ext.type.order[column.sType + \"-pre\"];\n\n  for (var i = 0, ien = settings.aoData.length; i < ien; i++) {\n    row = settings.aoData[i];\n\n    if (!row._aSortData) {\n      row._aSortData = [];\n    }\n\n    if (!row._aSortData[idx] || customSort) {\n      cellData = customSort ? customData[i] : // If there was a custom sort function, use data from there\n      _fnGetCellData(settings, i, idx, 'sort');\n      row._aSortData[idx] = formatter ? formatter(cellData) : cellData;\n    }\n  }\n}\n/**\n * Save the state of a table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnSaveState(settings) {\n  if (settings._bLoadingState) {\n    return;\n  }\n  /* Store the interesting variables */\n\n\n  var state = {\n    time: +new Date(),\n    start: settings._iDisplayStart,\n    length: settings._iDisplayLength,\n    order: $.extend(true, [], settings.aaSorting),\n    search: _fnSearchToCamel(settings.oPreviousSearch),\n    columns: $.map(settings.aoColumns, function (col, i) {\n      return {\n        visible: col.bVisible,\n        search: _fnSearchToCamel(settings.aoPreSearchCols[i])\n      };\n    })\n  };\n  settings.oSavedState = state;\n\n  _fnCallbackFire(settings, \"aoStateSaveParams\", 'stateSaveParams', [settings, state]);\n\n  if (settings.oFeatures.bStateSave && !settings.bDestroying) {\n    settings.fnStateSaveCallback.call(settings.oInstance, settings, state);\n  }\n}\n/**\n * Attempt to load a saved table state\n *  @param {object} oSettings dataTables settings object\n *  @param {object} oInit DataTables init object so we can override settings\n *  @param {function} callback Callback to execute when the state has been loaded\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnLoadState(settings, oInit, callback) {\n  if (!settings.oFeatures.bStateSave) {\n    callback();\n    return;\n  }\n\n  var loaded = function (state) {\n    _fnImplementState(settings, state, callback);\n  };\n\n  var state = settings.fnStateLoadCallback.call(settings.oInstance, settings, loaded);\n\n  if (state !== undefined) {\n    _fnImplementState(settings, state, callback);\n  } // otherwise, wait for the loaded callback to be executed\n\n\n  return true;\n}\n\nfunction _fnImplementState(settings, s, callback) {\n  var i, ien;\n  var columns = settings.aoColumns;\n  settings._bLoadingState = true; // When StateRestore was introduced the state could now be implemented at any time\n  // Not just initialisation. To do this an api instance is required in some places\n\n  var api = settings._bInitComplete ? new DataTable.Api(settings) : null;\n\n  if (!s || !s.time) {\n    settings._bLoadingState = false;\n    callback();\n    return;\n  } // Allow custom and plug-in manipulation functions to alter the saved data set and\n  // cancelling of loading by returning false\n\n\n  var abStateLoad = _fnCallbackFire(settings, 'aoStateLoadParams', 'stateLoadParams', [settings, s]);\n\n  if ($.inArray(false, abStateLoad) !== -1) {\n    settings._bLoadingState = false;\n    callback();\n    return;\n  } // Reject old data\n\n\n  var duration = settings.iStateDuration;\n\n  if (duration > 0 && s.time < +new Date() - duration * 1000) {\n    settings._bLoadingState = false;\n    callback();\n    return;\n  } // Number of columns have changed - all bets are off, no restore of settings\n\n\n  if (s.columns && columns.length !== s.columns.length) {\n    settings._bLoadingState = false;\n    callback();\n    return;\n  } // Store the saved state so it might be accessed at any time\n\n\n  settings.oLoadedState = $.extend(true, {}, s); // Page Length\n\n  if (s.length !== undefined) {\n    // If already initialised just set the value directly so that the select element is also updated\n    if (api) {\n      api.page.len(s.length);\n    } else {\n      settings._iDisplayLength = s.length;\n    }\n  } // Restore key features - todo - for 1.11 this needs to be done by\n  // subscribed events\n\n\n  if (s.start !== undefined) {\n    if (api === null) {\n      settings._iDisplayStart = s.start;\n      settings.iInitDisplayStart = s.start;\n    } else {\n      _fnPageChange(settings, s.start / settings._iDisplayLength);\n    }\n  } // Order\n\n\n  if (s.order !== undefined) {\n    settings.aaSorting = [];\n    $.each(s.order, function (i, col) {\n      settings.aaSorting.push(col[0] >= columns.length ? [0, col[1]] : col);\n    });\n  } // Search\n\n\n  if (s.search !== undefined) {\n    $.extend(settings.oPreviousSearch, _fnSearchToHung(s.search));\n  } // Columns\n\n\n  if (s.columns) {\n    for (i = 0, ien = s.columns.length; i < ien; i++) {\n      var col = s.columns[i]; // Visibility\n\n      if (col.visible !== undefined) {\n        // If the api is defined, the table has been initialised so we need to use it rather than internal settings\n        if (api) {\n          // Don't redraw the columns on every iteration of this loop, we will do this at the end instead\n          api.column(i).visible(col.visible, false);\n        } else {\n          columns[i].bVisible = col.visible;\n        }\n      } // Search\n\n\n      if (col.search !== undefined) {\n        $.extend(settings.aoPreSearchCols[i], _fnSearchToHung(col.search));\n      }\n    } // If the api is defined then we need to adjust the columns once the visibility has been changed\n\n\n    if (api) {\n      api.columns.adjust();\n    }\n  }\n\n  settings._bLoadingState = false;\n\n  _fnCallbackFire(settings, 'aoStateLoaded', 'stateLoaded', [settings, s]);\n\n  callback();\n}\n\n;\n/**\n * Return the settings object for a particular table\n *  @param {node} table table we are using as a dataTable\n *  @returns {object} Settings object - or null if not found\n *  @memberof DataTable#oApi\n */\n\nfunction _fnSettingsFromNode(table) {\n  var settings = DataTable.settings;\n  var idx = $.inArray(table, _pluck(settings, 'nTable'));\n  return idx !== -1 ? settings[idx] : null;\n}\n/**\n * Log an error message\n *  @param {object} settings dataTables settings object\n *  @param {int} level log error messages, or display them to the user\n *  @param {string} msg error message\n *  @param {int} tn Technical note id to get more information about the error.\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnLog(settings, level, msg, tn) {\n  msg = 'DataTables warning: ' + (settings ? 'table id=' + settings.sTableId + ' - ' : '') + msg;\n\n  if (tn) {\n    msg += '. For more information about this error, please see ' + 'http://datatables.net/tn/' + tn;\n  }\n\n  if (!level) {\n    // Backwards compatibility pre 1.10\n    var ext = DataTable.ext;\n    var type = ext.sErrMode || ext.errMode;\n\n    if (settings) {\n      _fnCallbackFire(settings, null, 'error', [settings, tn, msg]);\n    }\n\n    if (type == 'alert') {\n      alert(msg);\n    } else if (type == 'throw') {\n      throw new Error(msg);\n    } else if (typeof type == 'function') {\n      type(settings, tn, msg);\n    }\n  } else if (window.console && console.log) {\n    console.log(msg);\n  }\n}\n/**\n * See if a property is defined on one object, if so assign it to the other object\n *  @param {object} ret target object\n *  @param {object} src source object\n *  @param {string} name property\n *  @param {string} [mappedName] name to map too - optional, name used if not given\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnMap(ret, src, name, mappedName) {\n  if (Array.isArray(name)) {\n    $.each(name, function (i, val) {\n      if (Array.isArray(val)) {\n        _fnMap(ret, src, val[0], val[1]);\n      } else {\n        _fnMap(ret, src, val);\n      }\n    });\n    return;\n  }\n\n  if (mappedName === undefined) {\n    mappedName = name;\n  }\n\n  if (src[name] !== undefined) {\n    ret[mappedName] = src[name];\n  }\n}\n/**\n * Extend objects - very similar to jQuery.extend, but deep copy objects, and\n * shallow copy arrays. The reason we need to do this, is that we don't want to\n * deep copy array init values (such as aaSorting) since the dev wouldn't be\n * able to override them, but we do want to deep copy arrays.\n *  @param {object} out Object to extend\n *  @param {object} extender Object from which the properties will be applied to\n *      out\n *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\n *      independent copy with the exception of the `data` or `aaData` parameters\n *      if they are present. This is so you can pass in a collection to\n *      DataTables and have that used as your data source without breaking the\n *      references\n *  @returns {object} out Reference, just for convenience - out === the return.\n *  @memberof DataTable#oApi\n *  @todo This doesn't take account of arrays inside the deep copied objects.\n */\n\n\nfunction _fnExtend(out, extender, breakRefs) {\n  var val;\n\n  for (var prop in extender) {\n    if (extender.hasOwnProperty(prop)) {\n      val = extender[prop];\n\n      if ($.isPlainObject(val)) {\n        if (!$.isPlainObject(out[prop])) {\n          out[prop] = {};\n        }\n\n        $.extend(true, out[prop], val);\n      } else if (breakRefs && prop !== 'data' && prop !== 'aaData' && Array.isArray(val)) {\n        out[prop] = val.slice();\n      } else {\n        out[prop] = val;\n      }\n    }\n  }\n\n  return out;\n}\n/**\n * Bind an event handers to allow a click or return key to activate the callback.\n * This is good for accessibility since a return on the keyboard will have the\n * same effect as a click, if the element has focus.\n *  @param {element} n Element to bind the action to\n *  @param {object} oData Data object to pass to the triggered function\n *  @param {function} fn Callback function for when the event is triggered\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnBindAction(n, oData, fn) {\n  $(n).on('click.DT', oData, function (e) {\n    $(n).trigger('blur'); // Remove focus outline for mouse users\n\n    fn(e);\n  }).on('keypress.DT', oData, function (e) {\n    if (e.which === 13) {\n      e.preventDefault();\n      fn(e);\n    }\n  }).on('selectstart.DT', function () {\n    /* Take the brutal approach to cancelling text selection */\n    return false;\n  });\n}\n/**\n * Register a callback function. Easily allows a callback function to be added to\n * an array store of callback functions that can then all be called together.\n *  @param {object} oSettings dataTables settings object\n *  @param {string} sStore Name of the array storage for the callbacks in oSettings\n *  @param {function} fn Function to be called back\n *  @param {string} sName Identifying name for the callback (i.e. a label)\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnCallbackReg(oSettings, sStore, fn, sName) {\n  if (fn) {\n    oSettings[sStore].push({\n      \"fn\": fn,\n      \"sName\": sName\n    });\n  }\n}\n/**\n * Fire callback functions and trigger events. Note that the loop over the\n * callback array store is done backwards! Further note that you do not want to\n * fire off triggers in time sensitive applications (for example cell creation)\n * as its slow.\n *  @param {object} settings dataTables settings object\n *  @param {string} callbackArr Name of the array storage for the callbacks in\n *      oSettings\n *  @param {string} eventName Name of the jQuery custom event to trigger. If\n *      null no trigger is fired\n *  @param {array} args Array of arguments to pass to the callback function /\n *      trigger\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnCallbackFire(settings, callbackArr, eventName, args) {\n  var ret = [];\n\n  if (callbackArr) {\n    ret = $.map(settings[callbackArr].slice().reverse(), function (val, i) {\n      return val.fn.apply(settings.oInstance, args);\n    });\n  }\n\n  if (eventName !== null) {\n    var e = $.Event(eventName + '.dt');\n    $(settings.nTable).trigger(e, args);\n    ret.push(e.result);\n  }\n\n  return ret;\n}\n\nfunction _fnLengthOverflow(settings) {\n  var start = settings._iDisplayStart,\n      end = settings.fnDisplayEnd(),\n      len = settings._iDisplayLength;\n  /* If we have space to show extra rows (backing up from the end point - then do so */\n\n  if (start >= end) {\n    start = end - len;\n  } // Keep the start record on the current page\n\n\n  start -= start % len;\n\n  if (len === -1 || start < 0) {\n    start = 0;\n  }\n\n  settings._iDisplayStart = start;\n}\n\nfunction _fnRenderer(settings, type) {\n  var renderer = settings.renderer;\n  var host = DataTable.ext.renderer[type];\n\n  if ($.isPlainObject(renderer) && renderer[type]) {\n    // Specific renderer for this type. If available use it, otherwise use\n    // the default.\n    return host[renderer[type]] || host._;\n  } else if (typeof renderer === 'string') {\n    // Common renderer - if there is one available for this type use it,\n    // otherwise use the default\n    return host[renderer] || host._;\n  } // Use the default\n\n\n  return host._;\n}\n/**\n * Detect the data source being used for the table. Used to simplify the code\n * a little (ajax) and to make it compress a little smaller.\n *\n *  @param {object} settings dataTables settings object\n *  @returns {string} Data source\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnDataSource(settings) {\n  if (settings.oFeatures.bServerSide) {\n    return 'ssp';\n  } else if (settings.ajax || settings.sAjaxSource) {\n    return 'ajax';\n  }\n\n  return 'dom';\n}\n/**\n * Computed structure of the DataTables API, defined by the options passed to\n * `DataTable.Api.register()` when building the API.\n *\n * The structure is built in order to speed creation and extension of the Api\n * objects since the extensions are effectively pre-parsed.\n *\n * The array is an array of objects with the following structure, where this\n * base array represents the Api prototype base:\n *\n *     [\n *       {\n *         name:      'data'                -- string   - Property name\n *         val:       function () {},       -- function - Api method (or undefined if just an object\n *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n *       },\n *       {\n *         name:     'row'\n *         val:       {},\n *         methodExt: [ ... ],\n *         propExt:   [\n *           {\n *             name:      'data'\n *             val:       function () {},\n *             methodExt: [ ... ],\n *             propExt:   [ ... ]\n *           },\n *           ...\n *         ]\n *       }\n *     ]\n *\n * @type {Array}\n * @ignore\n */\n\n\nvar __apiStruct = [];\n/**\n * `Array.prototype` reference.\n *\n * @type object\n * @ignore\n */\n\nvar __arrayProto = Array.prototype;\n/**\n * Abstraction for `context` parameter of the `Api` constructor to allow it to\n * take several different forms for ease of use.\n *\n * Each of the input parameter types will be converted to a DataTables settings\n * object where possible.\n *\n * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\n *   of:\n *\n *   * `string` - jQuery selector. Any DataTables' matching the given selector\n *     with be found and used.\n *   * `node` - `TABLE` node which has already been formed into a DataTable.\n *   * `jQuery` - A jQuery object of `TABLE` nodes.\n *   * `object` - DataTables settings object\n *   * `DataTables.Api` - API instance\n * @return {array|null} Matching DataTables settings objects. `null` or\n *   `undefined` is returned if no matching DataTable is found.\n * @ignore\n */\n\nvar _toSettings = function (mixed) {\n  var idx, jq;\n  var settings = DataTable.settings;\n  var tables = $.map(settings, function (el, i) {\n    return el.nTable;\n  });\n\n  if (!mixed) {\n    return [];\n  } else if (mixed.nTable && mixed.oApi) {\n    // DataTables settings object\n    return [mixed];\n  } else if (mixed.nodeName && mixed.nodeName.toLowerCase() === 'table') {\n    // Table node\n    idx = $.inArray(mixed, tables);\n    return idx !== -1 ? [settings[idx]] : null;\n  } else if (mixed && typeof mixed.settings === 'function') {\n    return mixed.settings().toArray();\n  } else if (typeof mixed === 'string') {\n    // jQuery selector\n    jq = $(mixed);\n  } else if (mixed instanceof $) {\n    // jQuery object (also DataTables instance)\n    jq = mixed;\n  }\n\n  if (jq) {\n    return jq.map(function (i) {\n      idx = $.inArray(this, tables);\n      return idx !== -1 ? settings[idx] : null;\n    }).toArray();\n  }\n};\n/**\n * DataTables API class - used to control and interface with  one or more\n * DataTables enhanced tables.\n *\n * The API class is heavily based on jQuery, presenting a chainable interface\n * that you can use to interact with tables. Each instance of the API class has\n * a \"context\" - i.e. the tables that it will operate on. This could be a single\n * table, all tables on a page or a sub-set thereof.\n *\n * Additionally the API is designed to allow you to easily work with the data in\n * the tables, retrieving and manipulating it as required. This is done by\n * presenting the API class as an array like interface. The contents of the\n * array depend upon the actions requested by each method (for example\n * `rows().nodes()` will return an array of nodes, while `rows().data()` will\n * return an array of objects or arrays depending upon your table's\n * configuration). The API object has a number of array like methods (`push`,\n * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\n * `unique` etc) to assist your working with the data held in a table.\n *\n * Most methods (those which return an Api instance) are chainable, which means\n * the return from a method call also has all of the methods available that the\n * top level object had. For example, these two calls are equivalent:\n *\n *     // Not chained\n *     api.row.add( {...} );\n *     api.draw();\n *\n *     // Chained\n *     api.row.add( {...} ).draw();\n *\n * @class DataTable.Api\n * @param {array|object|string|jQuery} context DataTable identifier. This is\n *   used to define which DataTables enhanced tables this API will operate on.\n *   Can be one of:\n *\n *   * `string` - jQuery selector. Any DataTables' matching the given selector\n *     with be found and used.\n *   * `node` - `TABLE` node which has already been formed into a DataTable.\n *   * `jQuery` - A jQuery object of `TABLE` nodes.\n *   * `object` - DataTables settings object\n * @param {array} [data] Data to initialise the Api instance with.\n *\n * @example\n *   // Direct initialisation during DataTables construction\n *   var api = $('#example').DataTable();\n *\n * @example\n *   // Initialisation using a DataTables jQuery object\n *   var api = $('#example').dataTable().api();\n *\n * @example\n *   // Initialisation as a constructor\n *   var api = new $.fn.DataTable.Api( 'table.dataTable' );\n */\n\n\n_Api = function (context, data) {\n  if (!(this instanceof _Api)) {\n    return new _Api(context, data);\n  }\n\n  var settings = [];\n\n  var ctxSettings = function (o) {\n    var a = _toSettings(o);\n\n    if (a) {\n      settings.push.apply(settings, a);\n    }\n  };\n\n  if (Array.isArray(context)) {\n    for (var i = 0, ien = context.length; i < ien; i++) {\n      ctxSettings(context[i]);\n    }\n  } else {\n    ctxSettings(context);\n  } // Remove duplicates\n\n\n  this.context = _unique(settings); // Initial data\n\n  if (data) {\n    $.merge(this, data);\n  } // selector\n\n\n  this.selector = {\n    rows: null,\n    cols: null,\n    opts: null\n  };\n\n  _Api.extend(this, this, __apiStruct);\n};\n\nDataTable.Api = _Api; // Don't destroy the existing prototype, just extend it. Required for jQuery 2's\n// isPlainObject.\n\n$.extend(_Api.prototype, {\n  any: function () {\n    return this.count() !== 0;\n  },\n  concat: __arrayProto.concat,\n  context: [],\n  // array of table settings objects\n  count: function () {\n    return this.flatten().length;\n  },\n  each: function (fn) {\n    for (var i = 0, ien = this.length; i < ien; i++) {\n      fn.call(this, this[i], i, this);\n    }\n\n    return this;\n  },\n  eq: function (idx) {\n    var ctx = this.context;\n    return ctx.length > idx ? new _Api(ctx[idx], this[idx]) : null;\n  },\n  filter: function (fn) {\n    var a = [];\n\n    if (__arrayProto.filter) {\n      a = __arrayProto.filter.call(this, fn, this);\n    } else {\n      // Compatibility for browsers without EMCA-252-5 (JS 1.6)\n      for (var i = 0, ien = this.length; i < ien; i++) {\n        if (fn.call(this, this[i], i, this)) {\n          a.push(this[i]);\n        }\n      }\n    }\n\n    return new _Api(this.context, a);\n  },\n  flatten: function () {\n    var a = [];\n    return new _Api(this.context, a.concat.apply(a, this.toArray()));\n  },\n  join: __arrayProto.join,\n  indexOf: __arrayProto.indexOf || function (obj, start) {\n    for (var i = start || 0, ien = this.length; i < ien; i++) {\n      if (this[i] === obj) {\n        return i;\n      }\n    }\n\n    return -1;\n  },\n  iterator: function (flatten, type, fn, alwaysNew) {\n    var a = [],\n        ret,\n        i,\n        ien,\n        j,\n        jen,\n        context = this.context,\n        rows,\n        items,\n        item,\n        selector = this.selector; // Argument shifting\n\n    if (typeof flatten === 'string') {\n      alwaysNew = fn;\n      fn = type;\n      type = flatten;\n      flatten = false;\n    }\n\n    for (i = 0, ien = context.length; i < ien; i++) {\n      var apiInst = new _Api(context[i]);\n\n      if (type === 'table') {\n        ret = fn.call(apiInst, context[i], i);\n\n        if (ret !== undefined) {\n          a.push(ret);\n        }\n      } else if (type === 'columns' || type === 'rows') {\n        // this has same length as context - one entry for each table\n        ret = fn.call(apiInst, context[i], this[i], i);\n\n        if (ret !== undefined) {\n          a.push(ret);\n        }\n      } else if (type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell') {\n        // columns and rows share the same structure.\n        // 'this' is an array of column indexes for each context\n        items = this[i];\n\n        if (type === 'column-rows') {\n          rows = _selector_row_indexes(context[i], selector.opts);\n        }\n\n        for (j = 0, jen = items.length; j < jen; j++) {\n          item = items[j];\n\n          if (type === 'cell') {\n            ret = fn.call(apiInst, context[i], item.row, item.column, i, j);\n          } else {\n            ret = fn.call(apiInst, context[i], item, i, j, rows);\n          }\n\n          if (ret !== undefined) {\n            a.push(ret);\n          }\n        }\n      }\n    }\n\n    if (a.length || alwaysNew) {\n      var api = new _Api(context, flatten ? a.concat.apply([], a) : a);\n      var apiSelector = api.selector;\n      apiSelector.rows = selector.rows;\n      apiSelector.cols = selector.cols;\n      apiSelector.opts = selector.opts;\n      return api;\n    }\n\n    return this;\n  },\n  lastIndexOf: __arrayProto.lastIndexOf || function (obj, start) {\n    // Bit cheeky...\n    return this.indexOf.apply(this.toArray.reverse(), arguments);\n  },\n  length: 0,\n  map: function (fn) {\n    var a = [];\n\n    if (__arrayProto.map) {\n      a = __arrayProto.map.call(this, fn, this);\n    } else {\n      // Compatibility for browsers without EMCA-252-5 (JS 1.6)\n      for (var i = 0, ien = this.length; i < ien; i++) {\n        a.push(fn.call(this, this[i], i));\n      }\n    }\n\n    return new _Api(this.context, a);\n  },\n  pluck: function (prop) {\n    let fn = DataTable.util.get(prop);\n    return this.map(function (el) {\n      return fn(el);\n    });\n  },\n  pop: __arrayProto.pop,\n  push: __arrayProto.push,\n  // Does not return an API instance\n  reduce: __arrayProto.reduce || function (fn, init) {\n    return _fnReduce(this, fn, init, 0, this.length, 1);\n  },\n  reduceRight: __arrayProto.reduceRight || function (fn, init) {\n    return _fnReduce(this, fn, init, this.length - 1, -1, -1);\n  },\n  reverse: __arrayProto.reverse,\n  // Object with rows, columns and opts\n  selector: null,\n  shift: __arrayProto.shift,\n  slice: function () {\n    return new _Api(this.context, this);\n  },\n  sort: __arrayProto.sort,\n  // ? name - order?\n  splice: __arrayProto.splice,\n  toArray: function () {\n    return __arrayProto.slice.call(this);\n  },\n  to$: function () {\n    return $(this);\n  },\n  toJQuery: function () {\n    return $(this);\n  },\n  unique: function () {\n    return new _Api(this.context, _unique(this));\n  },\n  unshift: __arrayProto.unshift\n});\n\n_Api.extend = function (scope, obj, ext) {\n  // Only extend API instances and static properties of the API\n  if (!ext.length || !obj || !(obj instanceof _Api) && !obj.__dt_wrapper) {\n    return;\n  }\n\n  var i,\n      ien,\n      struct,\n      methodScoping = function (scope, fn, struc) {\n    return function () {\n      var ret = fn.apply(scope, arguments); // Method extension\n\n      _Api.extend(ret, ret, struc.methodExt);\n\n      return ret;\n    };\n  };\n\n  for (i = 0, ien = ext.length; i < ien; i++) {\n    struct = ext[i]; // Value\n\n    obj[struct.name] = struct.type === 'function' ? methodScoping(scope, struct.val, struct) : struct.type === 'object' ? {} : struct.val;\n    obj[struct.name].__dt_wrapper = true; // Property extension\n\n    _Api.extend(scope, obj[struct.name], struct.propExt);\n  }\n}; // @todo - Is there need for an augment function?\n// _Api.augment = function ( inst, name )\n// {\n// \t// Find src object in the structure from the name\n// \tvar parts = name.split('.');\n// \t_Api.extend( inst, obj );\n// };\n//     [\n//       {\n//         name:      'data'                -- string   - Property name\n//         val:       function () {},       -- function - Api method (or undefined if just an object\n//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n//       },\n//       {\n//         name:     'row'\n//         val:       {},\n//         methodExt: [ ... ],\n//         propExt:   [\n//           {\n//             name:      'data'\n//             val:       function () {},\n//             methodExt: [ ... ],\n//             propExt:   [ ... ]\n//           },\n//           ...\n//         ]\n//       }\n//     ]\n\n\n_Api.register = _api_register = function (name, val) {\n  if (Array.isArray(name)) {\n    for (var j = 0, jen = name.length; j < jen; j++) {\n      _Api.register(name[j], val);\n    }\n\n    return;\n  }\n\n  var i,\n      ien,\n      heir = name.split('.'),\n      struct = __apiStruct,\n      key,\n      method;\n\n  var find = function (src, name) {\n    for (var i = 0, ien = src.length; i < ien; i++) {\n      if (src[i].name === name) {\n        return src[i];\n      }\n    }\n\n    return null;\n  };\n\n  for (i = 0, ien = heir.length; i < ien; i++) {\n    method = heir[i].indexOf('()') !== -1;\n    key = method ? heir[i].replace('()', '') : heir[i];\n    var src = find(struct, key);\n\n    if (!src) {\n      src = {\n        name: key,\n        val: {},\n        methodExt: [],\n        propExt: [],\n        type: 'object'\n      };\n      struct.push(src);\n    }\n\n    if (i === ien - 1) {\n      src.val = val;\n      src.type = typeof val === 'function' ? 'function' : $.isPlainObject(val) ? 'object' : 'other';\n    } else {\n      struct = method ? src.methodExt : src.propExt;\n    }\n  }\n};\n\n_Api.registerPlural = _api_registerPlural = function (pluralName, singularName, val) {\n  _Api.register(pluralName, val);\n\n  _Api.register(singularName, function () {\n    var ret = val.apply(this, arguments);\n\n    if (ret === this) {\n      // Returned item is the API instance that was passed in, return it\n      return this;\n    } else if (ret instanceof _Api) {\n      // New API instance returned, want the value from the first item\n      // in the returned array for the singular result.\n      return ret.length ? Array.isArray(ret[0]) ? new _Api(ret.context, ret[0]) : // Array results are 'enhanced'\n      ret[0] : undefined;\n    } // Non-API return - just fire it back\n\n\n    return ret;\n  });\n};\n/**\n * Selector for HTML tables. Apply the given selector to the give array of\n * DataTables settings objects.\n *\n * @param {string|integer} [selector] jQuery selector string or integer\n * @param  {array} Array of DataTables settings objects to be filtered\n * @return {array}\n * @ignore\n */\n\n\nvar __table_selector = function (selector, a) {\n  if (Array.isArray(selector)) {\n    return $.map(selector, function (item) {\n      return __table_selector(item, a);\n    });\n  } // Integer is used to pick out a table by index\n\n\n  if (typeof selector === 'number') {\n    return [a[selector]];\n  } // Perform a jQuery selector on the table nodes\n\n\n  var nodes = $.map(a, function (el, i) {\n    return el.nTable;\n  });\n  return $(nodes).filter(selector).map(function (i) {\n    // Need to translate back from the table node to the settings\n    var idx = $.inArray(this, nodes);\n    return a[idx];\n  }).toArray();\n};\n/**\n * Context selector for the API's context (i.e. the tables the API instance\n * refers to.\n *\n * @name    DataTable.Api#tables\n * @param {string|integer} [selector] Selector to pick which tables the iterator\n *   should operate on. If not given, all tables in the current context are\n *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\n *   select multiple tables or as an integer to select a single table.\n * @returns {DataTable.Api} Returns a new API instance if a selector is given.\n */\n\n\n_api_register('tables()', function (selector) {\n  // A new instance is created if there was a selector specified\n  return selector !== undefined && selector !== null ? new _Api(__table_selector(selector, this.context)) : this;\n});\n\n_api_register('table()', function (selector) {\n  var tables = this.tables(selector);\n  var ctx = tables.context; // Truncate to the first matched table\n\n  return ctx.length ? new _Api(ctx[0]) : tables;\n});\n\n_api_registerPlural('tables().nodes()', 'table().node()', function () {\n  return this.iterator('table', function (ctx) {\n    return ctx.nTable;\n  }, 1);\n});\n\n_api_registerPlural('tables().body()', 'table().body()', function () {\n  return this.iterator('table', function (ctx) {\n    return ctx.nTBody;\n  }, 1);\n});\n\n_api_registerPlural('tables().header()', 'table().header()', function () {\n  return this.iterator('table', function (ctx) {\n    return ctx.nTHead;\n  }, 1);\n});\n\n_api_registerPlural('tables().footer()', 'table().footer()', function () {\n  return this.iterator('table', function (ctx) {\n    return ctx.nTFoot;\n  }, 1);\n});\n\n_api_registerPlural('tables().containers()', 'table().container()', function () {\n  return this.iterator('table', function (ctx) {\n    return ctx.nTableWrapper;\n  }, 1);\n});\n/**\n * Redraw the tables in the current context.\n */\n\n\n_api_register('draw()', function (paging) {\n  return this.iterator('table', function (settings) {\n    if (paging === 'page') {\n      _fnDraw(settings);\n    } else {\n      if (typeof paging === 'string') {\n        paging = paging === 'full-hold' ? false : true;\n      }\n\n      _fnReDraw(settings, paging === false);\n    }\n  });\n});\n/**\n * Get the current page index.\n *\n * @return {integer} Current page index (zero based)\n */\n\n/**\n* Set the current page.\n*\n* Note that if you attempt to show a page which does not exist, DataTables will\n* not throw an error, but rather reset the paging.\n*\n* @param {integer|string} action The paging action to take. This can be one of:\n*  * `integer` - The page index to jump to\n*  * `string` - An action to take:\n*    * `first` - Jump to first page.\n*    * `next` - Jump to the next page\n*    * `previous` - Jump to previous page\n*    * `last` - Jump to the last page.\n* @returns {DataTables.Api} this\n*/\n\n\n_api_register('page()', function (action) {\n  if (action === undefined) {\n    return this.page.info().page; // not an expensive call\n  } // else, have an action to take on all tables\n\n\n  return this.iterator('table', function (settings) {\n    _fnPageChange(settings, action);\n  });\n});\n/**\n * Paging information for the first table in the current context.\n *\n * If you require paging information for another table, use the `table()` method\n * with a suitable selector.\n *\n * @return {object} Object with the following properties set:\n *  * `page` - Current page index (zero based - i.e. the first page is `0`)\n *  * `pages` - Total number of pages\n *  * `start` - Display index for the first record shown on the current page\n *  * `end` - Display index for the last record shown on the current page\n *  * `length` - Display length (number of records). Note that generally `start\n *    + length = end`, but this is not always true, for example if there are\n *    only 2 records to show on the final page, with a length of 10.\n *  * `recordsTotal` - Full data set length\n *  * `recordsDisplay` - Data set length once the current filtering criterion\n *    are applied.\n */\n\n\n_api_register('page.info()', function (action) {\n  if (this.context.length === 0) {\n    return undefined;\n  }\n\n  var settings = this.context[0],\n      start = settings._iDisplayStart,\n      len = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,\n      visRecords = settings.fnRecordsDisplay(),\n      all = len === -1;\n  return {\n    \"page\": all ? 0 : Math.floor(start / len),\n    \"pages\": all ? 1 : Math.ceil(visRecords / len),\n    \"start\": start,\n    \"end\": settings.fnDisplayEnd(),\n    \"length\": len,\n    \"recordsTotal\": settings.fnRecordsTotal(),\n    \"recordsDisplay\": visRecords,\n    \"serverSide\": _fnDataSource(settings) === 'ssp'\n  };\n});\n/**\n * Get the current page length.\n *\n * @return {integer} Current page length. Note `-1` indicates that all records\n *   are to be shown.\n */\n\n/**\n* Set the current page length.\n*\n* @param {integer} Page length to set. Use `-1` to show all records.\n* @returns {DataTables.Api} this\n*/\n\n\n_api_register('page.len()', function (len) {\n  // Note that we can't call this function 'length()' because `length`\n  // is a Javascript property of functions which defines how many arguments\n  // the function expects.\n  if (len === undefined) {\n    return this.context.length !== 0 ? this.context[0]._iDisplayLength : undefined;\n  } // else, set the page length\n\n\n  return this.iterator('table', function (settings) {\n    _fnLengthChange(settings, len);\n  });\n});\n\nvar __reload = function (settings, holdPosition, callback) {\n  // Use the draw event to trigger a callback\n  if (callback) {\n    var api = new _Api(settings);\n    api.one('draw', function () {\n      callback(api.ajax.json());\n    });\n  }\n\n  if (_fnDataSource(settings) == 'ssp') {\n    _fnReDraw(settings, holdPosition);\n  } else {\n    _fnProcessingDisplay(settings, true); // Cancel an existing request\n\n\n    var xhr = settings.jqXHR;\n\n    if (xhr && xhr.readyState !== 4) {\n      xhr.abort();\n    } // Trigger xhr\n\n\n    _fnBuildAjax(settings, [], function (json) {\n      _fnClearTable(settings);\n\n      var data = _fnAjaxDataSrc(settings, json);\n\n      for (var i = 0, ien = data.length; i < ien; i++) {\n        _fnAddData(settings, data[i]);\n      }\n\n      _fnReDraw(settings, holdPosition);\n\n      _fnProcessingDisplay(settings, false);\n    });\n  }\n};\n/**\n * Get the JSON response from the last Ajax request that DataTables made to the\n * server. Note that this returns the JSON from the first table in the current\n * context.\n *\n * @return {object} JSON received from the server.\n */\n\n\n_api_register('ajax.json()', function () {\n  var ctx = this.context;\n\n  if (ctx.length > 0) {\n    return ctx[0].json;\n  } // else return undefined;\n\n});\n/**\n * Get the data submitted in the last Ajax request\n */\n\n\n_api_register('ajax.params()', function () {\n  var ctx = this.context;\n\n  if (ctx.length > 0) {\n    return ctx[0].oAjaxData;\n  } // else return undefined;\n\n});\n/**\n * Reload tables from the Ajax data source. Note that this function will\n * automatically re-draw the table when the remote data has been loaded.\n *\n * @param {boolean} [reset=true] Reset (default) or hold the current paging\n *   position. A full re-sort and re-filter is performed when this method is\n *   called, which is why the pagination reset is the default action.\n * @returns {DataTables.Api} this\n */\n\n\n_api_register('ajax.reload()', function (callback, resetPaging) {\n  return this.iterator('table', function (settings) {\n    __reload(settings, resetPaging === false, callback);\n  });\n});\n/**\n * Get the current Ajax URL. Note that this returns the URL from the first\n * table in the current context.\n *\n * @return {string} Current Ajax source URL\n */\n\n/**\n* Set the Ajax URL. Note that this will set the URL for all tables in the\n* current context.\n*\n* @param {string} url URL to set.\n* @returns {DataTables.Api} this\n*/\n\n\n_api_register('ajax.url()', function (url) {\n  var ctx = this.context;\n\n  if (url === undefined) {\n    // get\n    if (ctx.length === 0) {\n      return undefined;\n    }\n\n    ctx = ctx[0];\n    return ctx.ajax ? $.isPlainObject(ctx.ajax) ? ctx.ajax.url : ctx.ajax : ctx.sAjaxSource;\n  } // set\n\n\n  return this.iterator('table', function (settings) {\n    if ($.isPlainObject(settings.ajax)) {\n      settings.ajax.url = url;\n    } else {\n      settings.ajax = url;\n    } // No need to consider sAjaxSource here since DataTables gives priority\n    // to `ajax` over `sAjaxSource`. So setting `ajax` here, renders any\n    // value of `sAjaxSource` redundant.\n\n  });\n});\n/**\n * Load data from the newly set Ajax URL. Note that this method is only\n * available when `ajax.url()` is used to set a URL. Additionally, this method\n * has the same effect as calling `ajax.reload()` but is provided for\n * convenience when setting a new URL. Like `ajax.reload()` it will\n * automatically redraw the table once the remote data has been loaded.\n *\n * @returns {DataTables.Api} this\n */\n\n\n_api_register('ajax.url().load()', function (callback, resetPaging) {\n  // Same as a reload, but makes sense to present it for easy access after a\n  // url change\n  return this.iterator('table', function (ctx) {\n    __reload(ctx, resetPaging === false, callback);\n  });\n});\n\nvar _selector_run = function (type, selector, selectFn, settings, opts) {\n  var out = [],\n      res,\n      a,\n      i,\n      ien,\n      j,\n      jen,\n      selectorType = typeof selector; // Can't just check for isArray here, as an API or jQuery instance might be\n  // given with their array like look\n\n  if (!selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined) {\n    selector = [selector];\n  }\n\n  for (i = 0, ien = selector.length; i < ien; i++) {\n    // Only split on simple strings - complex expressions will be jQuery selectors\n    a = selector[i] && selector[i].split && !selector[i].match(/[\\[\\(:]/) ? selector[i].split(',') : [selector[i]];\n\n    for (j = 0, jen = a.length; j < jen; j++) {\n      res = selectFn(typeof a[j] === 'string' ? a[j].trim() : a[j]);\n\n      if (res && res.length) {\n        out = out.concat(res);\n      }\n    }\n  } // selector extensions\n\n\n  var ext = _ext.selector[type];\n\n  if (ext.length) {\n    for (i = 0, ien = ext.length; i < ien; i++) {\n      out = ext[i](settings, opts, out);\n    }\n  }\n\n  return _unique(out);\n};\n\nvar _selector_opts = function (opts) {\n  if (!opts) {\n    opts = {};\n  } // Backwards compatibility for 1.9- which used the terminology filter rather\n  // than search\n\n\n  if (opts.filter && opts.search === undefined) {\n    opts.search = opts.filter;\n  }\n\n  return $.extend({\n    search: 'none',\n    order: 'current',\n    page: 'all'\n  }, opts);\n};\n\nvar _selector_first = function (inst) {\n  // Reduce the API instance to the first item found\n  for (var i = 0, ien = inst.length; i < ien; i++) {\n    if (inst[i].length > 0) {\n      // Assign the first element to the first item in the instance\n      // and truncate the instance and context\n      inst[0] = inst[i];\n      inst[0].length = 1;\n      inst.length = 1;\n      inst.context = [inst.context[i]];\n      return inst;\n    }\n  } // Not found - return an empty instance\n\n\n  inst.length = 0;\n  return inst;\n};\n\nvar _selector_row_indexes = function (settings, opts) {\n  var i,\n      ien,\n      tmp,\n      a = [],\n      displayFiltered = settings.aiDisplay,\n      displayMaster = settings.aiDisplayMaster;\n  var search = opts.search,\n      // none, applied, removed\n  order = opts.order,\n      // applied, current, index (original - compatibility with 1.9)\n  page = opts.page; // all, current\n\n  if (_fnDataSource(settings) == 'ssp') {\n    // In server-side processing mode, most options are irrelevant since\n    // rows not shown don't exist and the index order is the applied order\n    // Removed is a special case - for consistency just return an empty\n    // array\n    return search === 'removed' ? [] : _range(0, displayMaster.length);\n  } else if (page == 'current') {\n    // Current page implies that order=current and filter=applied, since it is\n    // fairly senseless otherwise, regardless of what order and search actually\n    // are\n    for (i = settings._iDisplayStart, ien = settings.fnDisplayEnd(); i < ien; i++) {\n      a.push(displayFiltered[i]);\n    }\n  } else if (order == 'current' || order == 'applied') {\n    if (search == 'none') {\n      a = displayMaster.slice();\n    } else if (search == 'applied') {\n      a = displayFiltered.slice();\n    } else if (search == 'removed') {\n      // O(n+m) solution by creating a hash map\n      var displayFilteredMap = {};\n\n      for (var i = 0, ien = displayFiltered.length; i < ien; i++) {\n        displayFilteredMap[displayFiltered[i]] = null;\n      }\n\n      a = $.map(displayMaster, function (el) {\n        return !displayFilteredMap.hasOwnProperty(el) ? el : null;\n      });\n    }\n  } else if (order == 'index' || order == 'original') {\n    for (i = 0, ien = settings.aoData.length; i < ien; i++) {\n      if (search == 'none') {\n        a.push(i);\n      } else {\n        // applied | removed\n        tmp = $.inArray(i, displayFiltered);\n\n        if (tmp === -1 && search == 'removed' || tmp >= 0 && search == 'applied') {\n          a.push(i);\n        }\n      }\n    }\n  }\n\n  return a;\n};\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Rows\n *\n * {}          - no selector - use all available rows\n * {integer}   - row aoData index\n * {node}      - TR node\n * {string}    - jQuery selector to apply to the TR elements\n * {array}     - jQuery array of nodes, or simply an array of TR nodes\n *\n */\n\n\nvar __row_selector = function (settings, selector, opts) {\n  var rows;\n\n  var run = function (sel) {\n    var selInt = _intVal(sel);\n\n    var i, ien;\n    var aoData = settings.aoData; // Short cut - selector is a number and no options provided (default is\n    // all records, so no need to check if the index is in there, since it\n    // must be - dev error if the index doesn't exist).\n\n    if (selInt !== null && !opts) {\n      return [selInt];\n    }\n\n    if (!rows) {\n      rows = _selector_row_indexes(settings, opts);\n    }\n\n    if (selInt !== null && $.inArray(selInt, rows) !== -1) {\n      // Selector - integer\n      return [selInt];\n    } else if (sel === null || sel === undefined || sel === '') {\n      // Selector - none\n      return rows;\n    } // Selector - function\n\n\n    if (typeof sel === 'function') {\n      return $.map(rows, function (idx) {\n        var row = aoData[idx];\n        return sel(idx, row._aData, row.nTr) ? idx : null;\n      });\n    } // Selector - node\n\n\n    if (sel.nodeName) {\n      var rowIdx = sel._DT_RowIndex; // Property added by DT for fast lookup\n\n      var cellIdx = sel._DT_CellIndex;\n\n      if (rowIdx !== undefined) {\n        // Make sure that the row is actually still present in the table\n        return aoData[rowIdx] && aoData[rowIdx].nTr === sel ? [rowIdx] : [];\n      } else if (cellIdx) {\n        return aoData[cellIdx.row] && aoData[cellIdx.row].nTr === sel.parentNode ? [cellIdx.row] : [];\n      } else {\n        var host = $(sel).closest('*[data-dt-row]');\n        return host.length ? [host.data('dt-row')] : [];\n      }\n    } // ID selector. Want to always be able to select rows by id, regardless\n    // of if the tr element has been created or not, so can't rely upon\n    // jQuery here - hence a custom implementation. This does not match\n    // Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,\n    // but to select it using a CSS selector engine (like Sizzle or\n    // querySelect) it would need to need to be escaped for some characters.\n    // DataTables simplifies this for row selectors since you can select\n    // only a row. A # indicates an id any anything that follows is the id -\n    // unescaped.\n\n\n    if (typeof sel === 'string' && sel.charAt(0) === '#') {\n      // get row index from id\n      var rowObj = settings.aIds[sel.replace(/^#/, '')];\n\n      if (rowObj !== undefined) {\n        return [rowObj.idx];\n      } // need to fall through to jQuery in case there is DOM id that\n      // matches\n\n    } // Get nodes in the order from the `rows` array with null values removed\n\n\n    var nodes = _removeEmpty(_pluck_order(settings.aoData, rows, 'nTr')); // Selector - jQuery selector string, array of nodes or jQuery object/\n    // As jQuery's .filter() allows jQuery objects to be passed in filter,\n    // it also allows arrays, so this will cope with all three options\n\n\n    return $(nodes).filter(sel).map(function () {\n      return this._DT_RowIndex;\n    }).toArray();\n  };\n\n  return _selector_run('row', selector, run, settings, opts);\n};\n\n_api_register('rows()', function (selector, opts) {\n  // argument shifting\n  if (selector === undefined) {\n    selector = '';\n  } else if ($.isPlainObject(selector)) {\n    opts = selector;\n    selector = '';\n  }\n\n  opts = _selector_opts(opts);\n  var inst = this.iterator('table', function (settings) {\n    return __row_selector(settings, selector, opts);\n  }, 1); // Want argument shifting here and in __row_selector?\n\n  inst.selector.rows = selector;\n  inst.selector.opts = opts;\n  return inst;\n});\n\n_api_register('rows().nodes()', function () {\n  return this.iterator('row', function (settings, row) {\n    return settings.aoData[row].nTr || undefined;\n  }, 1);\n});\n\n_api_register('rows().data()', function () {\n  return this.iterator(true, 'rows', function (settings, rows) {\n    return _pluck_order(settings.aoData, rows, '_aData');\n  }, 1);\n});\n\n_api_registerPlural('rows().cache()', 'row().cache()', function (type) {\n  return this.iterator('row', function (settings, row) {\n    var r = settings.aoData[row];\n    return type === 'search' ? r._aFilterData : r._aSortData;\n  }, 1);\n});\n\n_api_registerPlural('rows().invalidate()', 'row().invalidate()', function (src) {\n  return this.iterator('row', function (settings, row) {\n    _fnInvalidate(settings, row, src);\n  });\n});\n\n_api_registerPlural('rows().indexes()', 'row().index()', function () {\n  return this.iterator('row', function (settings, row) {\n    return row;\n  }, 1);\n});\n\n_api_registerPlural('rows().ids()', 'row().id()', function (hash) {\n  var a = [];\n  var context = this.context; // `iterator` will drop undefined values, but in this case we want them\n\n  for (var i = 0, ien = context.length; i < ien; i++) {\n    for (var j = 0, jen = this[i].length; j < jen; j++) {\n      var id = context[i].rowIdFn(context[i].aoData[this[i][j]]._aData);\n      a.push((hash === true ? '#' : '') + id);\n    }\n  }\n\n  return new _Api(context, a);\n});\n\n_api_registerPlural('rows().remove()', 'row().remove()', function () {\n  var that = this;\n  this.iterator('row', function (settings, row, thatIdx) {\n    var data = settings.aoData;\n    var rowData = data[row];\n    var i, ien, j, jen;\n    var loopRow, loopCells;\n    data.splice(row, 1); // Update the cached indexes\n\n    for (i = 0, ien = data.length; i < ien; i++) {\n      loopRow = data[i];\n      loopCells = loopRow.anCells; // Rows\n\n      if (loopRow.nTr !== null) {\n        loopRow.nTr._DT_RowIndex = i;\n      } // Cells\n\n\n      if (loopCells !== null) {\n        for (j = 0, jen = loopCells.length; j < jen; j++) {\n          loopCells[j]._DT_CellIndex.row = i;\n        }\n      }\n    } // Delete from the display arrays\n\n\n    _fnDeleteIndex(settings.aiDisplayMaster, row);\n\n    _fnDeleteIndex(settings.aiDisplay, row);\n\n    _fnDeleteIndex(that[thatIdx], row, false); // maintain local indexes\n    // For server-side processing tables - subtract the deleted row from the count\n\n\n    if (settings._iRecordsDisplay > 0) {\n      settings._iRecordsDisplay--;\n    } // Check for an 'overflow' they case for displaying the table\n\n\n    _fnLengthOverflow(settings); // Remove the row's ID reference if there is one\n\n\n    var id = settings.rowIdFn(rowData._aData);\n\n    if (id !== undefined) {\n      delete settings.aIds[id];\n    }\n  });\n  this.iterator('table', function (settings) {\n    for (var i = 0, ien = settings.aoData.length; i < ien; i++) {\n      settings.aoData[i].idx = i;\n    }\n  });\n  return this;\n});\n\n_api_register('rows.add()', function (rows) {\n  var newRows = this.iterator('table', function (settings) {\n    var row, i, ien;\n    var out = [];\n\n    for (i = 0, ien = rows.length; i < ien; i++) {\n      row = rows[i];\n\n      if (row.nodeName && row.nodeName.toUpperCase() === 'TR') {\n        out.push(_fnAddTr(settings, row)[0]);\n      } else {\n        out.push(_fnAddData(settings, row));\n      }\n    }\n\n    return out;\n  }, 1); // Return an Api.rows() extended instance, so rows().nodes() etc can be used\n\n  var modRows = this.rows(-1);\n  modRows.pop();\n  $.merge(modRows, newRows);\n  return modRows;\n});\n/**\n *\n */\n\n\n_api_register('row()', function (selector, opts) {\n  return _selector_first(this.rows(selector, opts));\n});\n\n_api_register('row().data()', function (data) {\n  var ctx = this.context;\n\n  if (data === undefined) {\n    // Get\n    return ctx.length && this.length ? ctx[0].aoData[this[0]]._aData : undefined;\n  } // Set\n\n\n  var row = ctx[0].aoData[this[0]];\n  row._aData = data; // If the DOM has an id, and the data source is an array\n\n  if (Array.isArray(data) && row.nTr && row.nTr.id) {\n    _fnSetObjectDataFn(ctx[0].rowId)(data, row.nTr.id);\n  } // Automatically invalidate\n\n\n  _fnInvalidate(ctx[0], this[0], 'data');\n\n  return this;\n});\n\n_api_register('row().node()', function () {\n  var ctx = this.context;\n  return ctx.length && this.length ? ctx[0].aoData[this[0]].nTr || null : null;\n});\n\n_api_register('row.add()', function (row) {\n  // Allow a jQuery object to be passed in - only a single row is added from\n  // it though - the first element in the set\n  if (row instanceof $ && row.length) {\n    row = row[0];\n  }\n\n  var rows = this.iterator('table', function (settings) {\n    if (row.nodeName && row.nodeName.toUpperCase() === 'TR') {\n      return _fnAddTr(settings, row)[0];\n    }\n\n    return _fnAddData(settings, row);\n  }); // Return an Api.rows() extended instance, with the newly added row selected\n\n  return this.row(rows[0]);\n});\n\n$(document).on('plugin-init.dt', function (e, context) {\n  var api = new _Api(context);\n  const namespace = 'on-plugin-init';\n  const stateSaveParamsEvent = `stateSaveParams.${namespace}`;\n  const destroyEvent = `destroy.${namespace}`;\n  api.on(stateSaveParamsEvent, function (e, settings, d) {\n    // This could be more compact with the API, but it is a lot faster as a simple\n    // internal loop\n    var idFn = settings.rowIdFn;\n    var data = settings.aoData;\n    var ids = [];\n\n    for (var i = 0; i < data.length; i++) {\n      if (data[i]._detailsShow) {\n        ids.push('#' + idFn(data[i]._aData));\n      }\n    }\n\n    d.childRows = ids;\n  });\n  api.on(destroyEvent, function () {\n    api.off(`${stateSaveParamsEvent} ${destroyEvent}`);\n  });\n  var loaded = api.state.loaded();\n\n  if (loaded && loaded.childRows) {\n    api.rows($.map(loaded.childRows, function (id) {\n      return id.replace(/:/g, '\\\\:');\n    })).every(function () {\n      _fnCallbackFire(context, null, 'requestChild', [this]);\n    });\n  }\n});\n\nvar __details_add = function (ctx, row, data, klass) {\n  // Convert to array of TR elements\n  var rows = [];\n\n  var addRow = function (r, k) {\n    // Recursion to allow for arrays of jQuery objects\n    if (Array.isArray(r) || r instanceof $) {\n      for (var i = 0, ien = r.length; i < ien; i++) {\n        addRow(r[i], k);\n      }\n\n      return;\n    } // If we get a TR element, then just add it directly - up to the dev\n    // to add the correct number of columns etc\n\n\n    if (r.nodeName && r.nodeName.toLowerCase() === 'tr') {\n      rows.push(r);\n    } else {\n      // Otherwise create a row with a wrapper\n      var created = $('<tr><td></td></tr>').addClass(k);\n      $('td', created).addClass(k).html(r)[0].colSpan = _fnVisbleColumns(ctx);\n      rows.push(created[0]);\n    }\n  };\n\n  addRow(data, klass);\n\n  if (row._details) {\n    row._details.detach();\n  }\n\n  row._details = $(rows); // If the children were already shown, that state should be retained\n\n  if (row._detailsShow) {\n    row._details.insertAfter(row.nTr);\n  }\n}; // Make state saving of child row details async to allow them to be batch processed\n\n\nvar __details_state = DataTable.util.throttle(function (ctx) {\n  _fnSaveState(ctx[0]);\n}, 500);\n\nvar __details_remove = function (api, idx) {\n  var ctx = api.context;\n\n  if (ctx.length) {\n    var row = ctx[0].aoData[idx !== undefined ? idx : api[0]];\n\n    if (row && row._details) {\n      row._details.remove();\n\n      row._detailsShow = undefined;\n      row._details = undefined;\n      $(row.nTr).removeClass('dt-hasChild');\n\n      __details_state(ctx);\n    }\n  }\n};\n\nvar __details_display = function (api, show) {\n  var ctx = api.context;\n\n  if (ctx.length && api.length) {\n    var row = ctx[0].aoData[api[0]];\n\n    if (row._details) {\n      row._detailsShow = show;\n\n      if (show) {\n        row._details.insertAfter(row.nTr);\n\n        $(row.nTr).addClass('dt-hasChild');\n      } else {\n        row._details.detach();\n\n        $(row.nTr).removeClass('dt-hasChild');\n      }\n\n      _fnCallbackFire(ctx[0], null, 'childRow', [show, api.row(api[0])]);\n\n      __details_events(ctx[0]);\n\n      __details_state(ctx);\n    }\n  }\n};\n\nvar __details_events = function (settings) {\n  var api = new _Api(settings);\n  var namespace = '.dt.DT_details';\n  var drawEvent = 'draw' + namespace;\n  var colvisEvent = 'column-sizing' + namespace;\n  var destroyEvent = 'destroy' + namespace;\n  var data = settings.aoData;\n  api.off(drawEvent + ' ' + colvisEvent + ' ' + destroyEvent);\n\n  if (_pluck(data, '_details').length > 0) {\n    // On each draw, insert the required elements into the document\n    api.on(drawEvent, function (e, ctx) {\n      if (settings !== ctx) {\n        return;\n      }\n\n      api.rows({\n        page: 'current'\n      }).eq(0).each(function (idx) {\n        // Internal data grab\n        var row = data[idx];\n\n        if (row._detailsShow) {\n          row._details.insertAfter(row.nTr);\n        }\n      });\n    }); // Column visibility change - update the colspan\n\n    api.on(colvisEvent, function (e, ctx, idx, vis) {\n      if (settings !== ctx) {\n        return;\n      } // Update the colspan for the details rows (note, only if it already has\n      // a colspan)\n\n\n      var row,\n          visible = _fnVisbleColumns(ctx);\n\n      for (var i = 0, ien = data.length; i < ien; i++) {\n        row = data[i];\n\n        if (row._details) {\n          row._details.children('td[colspan]').attr('colspan', visible);\n        }\n      }\n    }); // Table destroyed - nuke any child rows\n\n    api.on(destroyEvent, function (e, ctx) {\n      if (settings !== ctx) {\n        return;\n      }\n\n      for (var i = 0, ien = data.length; i < ien; i++) {\n        if (data[i]._details) {\n          __details_remove(api, i);\n        }\n      }\n    });\n  }\n}; // Strings for the method names to help minification\n\n\nvar _emp = '';\n\nvar _child_obj = _emp + 'row().child';\n\nvar _child_mth = _child_obj + '()'; // data can be:\n//  tr\n//  string\n//  jQuery or array of any of the above\n\n\n_api_register(_child_mth, function (data, klass) {\n  var ctx = this.context;\n\n  if (data === undefined) {\n    // get\n    return ctx.length && this.length ? ctx[0].aoData[this[0]]._details : undefined;\n  } else if (data === true) {\n    // show\n    this.child.show();\n  } else if (data === false) {\n    // remove\n    __details_remove(this);\n  } else if (ctx.length && this.length) {\n    // set\n    __details_add(ctx[0], ctx[0].aoData[this[0]], data, klass);\n  }\n\n  return this;\n});\n\n_api_register([_child_obj + '.show()', _child_mth + '.show()' // only when `child()` was called with parameters (without\n], function (show) {\n  // it returns an object and this method is not executed)\n  __details_display(this, true);\n\n  return this;\n});\n\n_api_register([_child_obj + '.hide()', _child_mth + '.hide()' // only when `child()` was called with parameters (without\n], function () {\n  // it returns an object and this method is not executed)\n  __details_display(this, false);\n\n  return this;\n});\n\n_api_register([_child_obj + '.remove()', _child_mth + '.remove()' // only when `child()` was called with parameters (without\n], function () {\n  // it returns an object and this method is not executed)\n  __details_remove(this);\n\n  return this;\n});\n\n_api_register(_child_obj + '.isShown()', function () {\n  var ctx = this.context;\n\n  if (ctx.length && this.length) {\n    // _detailsShown as false or undefined will fall through to return false\n    return ctx[0].aoData[this[0]]._detailsShow || false;\n  }\n\n  return false;\n});\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Columns\n *\n * {integer}           - column index (>=0 count from left, <0 count from right)\n * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\n * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\n * \"{string}:name\"     - column name\n * \"{string}\"          - jQuery selector on column header nodes\n *\n */\n// can be an array of these items, comma separated list, or an array of comma\n// separated lists\n\n\nvar __re_column_selector = /^([^:]+):(name|visIdx|visible)$/; // r1 and r2 are redundant - but it means that the parameters match for the\n// iterator callback in columns().data()\n\nvar __columnData = function (settings, column, r1, r2, rows) {\n  var a = [];\n\n  for (var row = 0, ien = rows.length; row < ien; row++) {\n    a.push(_fnGetCellData(settings, rows[row], column));\n  }\n\n  return a;\n};\n\nvar __column_selector = function (settings, selector, opts) {\n  var columns = settings.aoColumns,\n      names = _pluck(columns, 'sName'),\n      nodes = _pluck(columns, 'nTh');\n\n  var run = function (s) {\n    var selInt = _intVal(s); // Selector - all\n\n\n    if (s === '') {\n      return _range(columns.length);\n    } // Selector - index\n\n\n    if (selInt !== null) {\n      return [selInt >= 0 ? selInt : // Count from left\n      columns.length + selInt // Count from right (+ because its a negative value)\n      ];\n    } // Selector = function\n\n\n    if (typeof s === 'function') {\n      var rows = _selector_row_indexes(settings, opts);\n\n      return $.map(columns, function (col, idx) {\n        return s(idx, __columnData(settings, idx, 0, 0, rows), nodes[idx]) ? idx : null;\n      });\n    } // jQuery or string selector\n\n\n    var match = typeof s === 'string' ? s.match(__re_column_selector) : '';\n\n    if (match) {\n      switch (match[2]) {\n        case 'visIdx':\n        case 'visible':\n          var idx = parseInt(match[1], 10); // Visible index given, convert to column index\n\n          if (idx < 0) {\n            // Counting from the right\n            var visColumns = $.map(columns, function (col, i) {\n              return col.bVisible ? i : null;\n            });\n            return [visColumns[visColumns.length + idx]];\n          } // Counting from the left\n\n\n          return [_fnVisibleToColumnIndex(settings, idx)];\n\n        case 'name':\n          // match by name. `names` is column index complete and in order\n          return $.map(names, function (name, i) {\n            return name === match[1] ? i : null;\n          });\n\n        default:\n          return [];\n      }\n    } // Cell in the table body\n\n\n    if (s.nodeName && s._DT_CellIndex) {\n      return [s._DT_CellIndex.column];\n    } // jQuery selector on the TH elements for the columns\n\n\n    var jqResult = $(nodes).filter(s).map(function () {\n      return $.inArray(this, nodes); // `nodes` is column index complete and in order\n    }).toArray();\n\n    if (jqResult.length || !s.nodeName) {\n      return jqResult;\n    } // Otherwise a node which might have a `dt-column` data attribute, or be\n    // a child or such an element\n\n\n    var host = $(s).closest('*[data-dt-column]');\n    return host.length ? [host.data('dt-column')] : [];\n  };\n\n  return _selector_run('column', selector, run, settings, opts);\n};\n\nvar __setColumnVis = function (settings, column, vis) {\n  var cols = settings.aoColumns,\n      col = cols[column],\n      data = settings.aoData,\n      row,\n      cells,\n      i,\n      ien,\n      tr; // Get\n\n  if (vis === undefined) {\n    return col.bVisible;\n  } // Set\n  // No change\n\n\n  if (col.bVisible === vis) {\n    return;\n  }\n\n  if (vis) {\n    // Insert column\n    // Need to decide if we should use appendChild or insertBefore\n    var insertBefore = $.inArray(true, _pluck(cols, 'bVisible'), column + 1);\n\n    for (i = 0, ien = data.length; i < ien; i++) {\n      tr = data[i].nTr;\n      cells = data[i].anCells;\n\n      if (tr) {\n        // insertBefore can act like appendChild if 2nd arg is null\n        tr.insertBefore(cells[column], cells[insertBefore] || null);\n      }\n    }\n  } else {\n    // Remove column\n    $(_pluck(settings.aoData, 'anCells', column)).detach();\n  } // Common actions\n\n\n  col.bVisible = vis;\n};\n\n_api_register('columns()', function (selector, opts) {\n  // argument shifting\n  if (selector === undefined) {\n    selector = '';\n  } else if ($.isPlainObject(selector)) {\n    opts = selector;\n    selector = '';\n  }\n\n  opts = _selector_opts(opts);\n  var inst = this.iterator('table', function (settings) {\n    return __column_selector(settings, selector, opts);\n  }, 1); // Want argument shifting here and in _row_selector?\n\n  inst.selector.cols = selector;\n  inst.selector.opts = opts;\n  return inst;\n});\n\n_api_registerPlural('columns().header()', 'column().header()', function (selector, opts) {\n  return this.iterator('column', function (settings, column) {\n    return settings.aoColumns[column].nTh;\n  }, 1);\n});\n\n_api_registerPlural('columns().footer()', 'column().footer()', function (selector, opts) {\n  return this.iterator('column', function (settings, column) {\n    return settings.aoColumns[column].nTf;\n  }, 1);\n});\n\n_api_registerPlural('columns().data()', 'column().data()', function () {\n  return this.iterator('column-rows', __columnData, 1);\n});\n\n_api_registerPlural('columns().dataSrc()', 'column().dataSrc()', function () {\n  return this.iterator('column', function (settings, column) {\n    return settings.aoColumns[column].mData;\n  }, 1);\n});\n\n_api_registerPlural('columns().cache()', 'column().cache()', function (type) {\n  return this.iterator('column-rows', function (settings, column, i, j, rows) {\n    return _pluck_order(settings.aoData, rows, type === 'search' ? '_aFilterData' : '_aSortData', column);\n  }, 1);\n});\n\n_api_registerPlural('columns().nodes()', 'column().nodes()', function () {\n  return this.iterator('column-rows', function (settings, column, i, j, rows) {\n    return _pluck_order(settings.aoData, rows, 'anCells', column);\n  }, 1);\n});\n\n_api_registerPlural('columns().visible()', 'column().visible()', function (vis, calc) {\n  var that = this;\n  var ret = this.iterator('column', function (settings, column) {\n    if (vis === undefined) {\n      return settings.aoColumns[column].bVisible;\n    } // else\n\n\n    __setColumnVis(settings, column, vis);\n  }); // Group the column visibility changes\n\n  if (vis !== undefined) {\n    this.iterator('table', function (settings) {\n      // Redraw the header after changes\n      _fnDrawHead(settings, settings.aoHeader);\n\n      _fnDrawHead(settings, settings.aoFooter); // Update colspan for no records display. Child rows and extensions will use their own\n      // listeners to do this - only need to update the empty table item here\n\n\n      if (!settings.aiDisplay.length) {\n        $(settings.nTBody).find('td[colspan]').attr('colspan', _fnVisbleColumns(settings));\n      }\n\n      _fnSaveState(settings); // Second loop once the first is done for events\n\n\n      that.iterator('column', function (settings, column) {\n        _fnCallbackFire(settings, null, 'column-visibility', [settings, column, vis, calc]);\n      });\n\n      if (calc === undefined || calc) {\n        that.columns.adjust();\n      }\n    });\n  }\n\n  return ret;\n});\n\n_api_registerPlural('columns().indexes()', 'column().index()', function (type) {\n  return this.iterator('column', function (settings, column) {\n    return type === 'visible' ? _fnColumnIndexToVisible(settings, column) : column;\n  }, 1);\n});\n\n_api_register('columns.adjust()', function () {\n  return this.iterator('table', function (settings) {\n    _fnAdjustColumnSizing(settings);\n  }, 1);\n});\n\n_api_register('column.index()', function (type, idx) {\n  if (this.context.length !== 0) {\n    var ctx = this.context[0];\n\n    if (type === 'fromVisible' || type === 'toData') {\n      return _fnVisibleToColumnIndex(ctx, idx);\n    } else if (type === 'fromData' || type === 'toVisible') {\n      return _fnColumnIndexToVisible(ctx, idx);\n    }\n  }\n});\n\n_api_register('column()', function (selector, opts) {\n  return _selector_first(this.columns(selector, opts));\n});\n\nvar __cell_selector = function (settings, selector, opts) {\n  var data = settings.aoData;\n\n  var rows = _selector_row_indexes(settings, opts);\n\n  var cells = _removeEmpty(_pluck_order(data, rows, 'anCells'));\n\n  var allCells = $(_flatten([], cells));\n  var row;\n  var columns = settings.aoColumns.length;\n  var a, i, ien, j, o, host;\n\n  var run = function (s) {\n    var fnSelector = typeof s === 'function';\n\n    if (s === null || s === undefined || fnSelector) {\n      // All cells and function selectors\n      a = [];\n\n      for (i = 0, ien = rows.length; i < ien; i++) {\n        row = rows[i];\n\n        for (j = 0; j < columns; j++) {\n          o = {\n            row: row,\n            column: j\n          };\n\n          if (fnSelector) {\n            // Selector - function\n            host = data[row];\n\n            if (s(o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null)) {\n              a.push(o);\n            }\n          } else {\n            // Selector - all\n            a.push(o);\n          }\n        }\n      }\n\n      return a;\n    } // Selector - index\n\n\n    if ($.isPlainObject(s)) {\n      // Valid cell index and its in the array of selectable rows\n      return s.column !== undefined && s.row !== undefined && $.inArray(s.row, rows) !== -1 ? [s] : [];\n    } // Selector - jQuery filtered cells\n\n\n    var jqResult = allCells.filter(s).map(function (i, el) {\n      return {\n        // use a new object, in case someone changes the values\n        row: el._DT_CellIndex.row,\n        column: el._DT_CellIndex.column\n      };\n    }).toArray();\n\n    if (jqResult.length || !s.nodeName) {\n      return jqResult;\n    } // Otherwise the selector is a node, and there is one last option - the\n    // element might be a child of an element which has dt-row and dt-column\n    // data attributes\n\n\n    host = $(s).closest('*[data-dt-row]');\n    return host.length ? [{\n      row: host.data('dt-row'),\n      column: host.data('dt-column')\n    }] : [];\n  };\n\n  return _selector_run('cell', selector, run, settings, opts);\n};\n\n_api_register('cells()', function (rowSelector, columnSelector, opts) {\n  // Argument shifting\n  if ($.isPlainObject(rowSelector)) {\n    // Indexes\n    if (rowSelector.row === undefined) {\n      // Selector options in first parameter\n      opts = rowSelector;\n      rowSelector = null;\n    } else {\n      // Cell index objects in first parameter\n      opts = columnSelector;\n      columnSelector = null;\n    }\n  }\n\n  if ($.isPlainObject(columnSelector)) {\n    opts = columnSelector;\n    columnSelector = null;\n  } // Cell selector\n\n\n  if (columnSelector === null || columnSelector === undefined) {\n    return this.iterator('table', function (settings) {\n      return __cell_selector(settings, rowSelector, _selector_opts(opts));\n    });\n  } // The default built in options need to apply to row and columns\n\n\n  var internalOpts = opts ? {\n    page: opts.page,\n    order: opts.order,\n    search: opts.search\n  } : {}; // Row + column selector\n\n  var columns = this.columns(columnSelector, internalOpts);\n  var rows = this.rows(rowSelector, internalOpts);\n  var i, ien, j, jen;\n  var cellsNoOpts = this.iterator('table', function (settings, idx) {\n    var a = [];\n\n    for (i = 0, ien = rows[idx].length; i < ien; i++) {\n      for (j = 0, jen = columns[idx].length; j < jen; j++) {\n        a.push({\n          row: rows[idx][i],\n          column: columns[idx][j]\n        });\n      }\n    }\n\n    return a;\n  }, 1); // There is currently only one extension which uses a cell selector extension\n  // It is a _major_ performance drag to run this if it isn't needed, so this is\n  // an extension specific check at the moment\n\n  var cells = opts && opts.selected ? this.cells(cellsNoOpts, opts) : cellsNoOpts;\n  $.extend(cells.selector, {\n    cols: columnSelector,\n    rows: rowSelector,\n    opts: opts\n  });\n  return cells;\n});\n\n_api_registerPlural('cells().nodes()', 'cell().node()', function () {\n  return this.iterator('cell', function (settings, row, column) {\n    var data = settings.aoData[row];\n    return data && data.anCells ? data.anCells[column] : undefined;\n  }, 1);\n});\n\n_api_register('cells().data()', function () {\n  return this.iterator('cell', function (settings, row, column) {\n    return _fnGetCellData(settings, row, column);\n  }, 1);\n});\n\n_api_registerPlural('cells().cache()', 'cell().cache()', function (type) {\n  type = type === 'search' ? '_aFilterData' : '_aSortData';\n  return this.iterator('cell', function (settings, row, column) {\n    return settings.aoData[row][type][column];\n  }, 1);\n});\n\n_api_registerPlural('cells().render()', 'cell().render()', function (type) {\n  return this.iterator('cell', function (settings, row, column) {\n    return _fnGetCellData(settings, row, column, type);\n  }, 1);\n});\n\n_api_registerPlural('cells().indexes()', 'cell().index()', function () {\n  return this.iterator('cell', function (settings, row, column) {\n    return {\n      row: row,\n      column: column,\n      columnVisible: _fnColumnIndexToVisible(settings, column)\n    };\n  }, 1);\n});\n\n_api_registerPlural('cells().invalidate()', 'cell().invalidate()', function (src) {\n  return this.iterator('cell', function (settings, row, column) {\n    _fnInvalidate(settings, row, src, column);\n  });\n});\n\n_api_register('cell()', function (rowSelector, columnSelector, opts) {\n  return _selector_first(this.cells(rowSelector, columnSelector, opts));\n});\n\n_api_register('cell().data()', function (data) {\n  var ctx = this.context;\n  var cell = this[0];\n\n  if (data === undefined) {\n    // Get\n    return ctx.length && cell.length ? _fnGetCellData(ctx[0], cell[0].row, cell[0].column) : undefined;\n  } // Set\n\n\n  _fnSetCellData(ctx[0], cell[0].row, cell[0].column, data);\n\n  _fnInvalidate(ctx[0], cell[0].row, 'data', cell[0].column);\n\n  return this;\n});\n/**\n * Get current ordering (sorting) that has been applied to the table.\n *\n * @returns {array} 2D array containing the sorting information for the first\n *   table in the current context. Each element in the parent array represents\n *   a column being sorted upon (i.e. multi-sorting with two columns would have\n *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\n *   the column index that the sorting condition applies to, the second is the\n *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\n *   index of the sorting order from the `column.sorting` initialisation array.\n */\n\n/**\n* Set the ordering for the table.\n*\n* @param {integer} order Column index to sort upon.\n* @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\n* @returns {DataTables.Api} this\n*/\n\n/**\n* Set the ordering for the table.\n*\n* @param {array} order 1D array of sorting information to be applied.\n* @param {array} [...] Optional additional sorting conditions\n* @returns {DataTables.Api} this\n*/\n\n/**\n* Set the ordering for the table.\n*\n* @param {array} order 2D array of sorting information to be applied.\n* @returns {DataTables.Api} this\n*/\n\n\n_api_register('order()', function (order, dir) {\n  var ctx = this.context;\n\n  if (order === undefined) {\n    // get\n    return ctx.length !== 0 ? ctx[0].aaSorting : undefined;\n  } // set\n\n\n  if (typeof order === 'number') {\n    // Simple column / direction passed in\n    order = [[order, dir]];\n  } else if (order.length && !Array.isArray(order[0])) {\n    // Arguments passed in (list of 1D arrays)\n    order = Array.prototype.slice.call(arguments);\n  } // otherwise a 2D array was passed in\n\n\n  return this.iterator('table', function (settings) {\n    settings.aaSorting = order.slice();\n  });\n});\n/**\n * Attach a sort listener to an element for a given column\n *\n * @param {node|jQuery|string} node Identifier for the element(s) to attach the\n *   listener to. This can take the form of a single DOM node, a jQuery\n *   collection of nodes or a jQuery selector which will identify the node(s).\n * @param {integer} column the column that a click on this node will sort on\n * @param {function} [callback] callback function when sort is run\n * @returns {DataTables.Api} this\n */\n\n\n_api_register('order.listener()', function (node, column, callback) {\n  return this.iterator('table', function (settings) {\n    _fnSortAttachListener(settings, node, column, callback);\n  });\n});\n\n_api_register('order.fixed()', function (set) {\n  if (!set) {\n    var ctx = this.context;\n    var fixed = ctx.length ? ctx[0].aaSortingFixed : undefined;\n    return Array.isArray(fixed) ? {\n      pre: fixed\n    } : fixed;\n  }\n\n  return this.iterator('table', function (settings) {\n    settings.aaSortingFixed = $.extend(true, {}, set);\n  });\n}); // Order by the selected column(s)\n\n\n_api_register(['columns().order()', 'column().order()'], function (dir) {\n  var that = this;\n  return this.iterator('table', function (settings, i) {\n    var sort = [];\n    $.each(that[i], function (j, col) {\n      sort.push([col, dir]);\n    });\n    settings.aaSorting = sort;\n  });\n});\n\n_api_register('search()', function (input, regex, smart, caseInsen) {\n  var ctx = this.context;\n\n  if (input === undefined) {\n    // get\n    return ctx.length !== 0 ? ctx[0].oPreviousSearch.sSearch : undefined;\n  } // set\n\n\n  return this.iterator('table', function (settings) {\n    if (!settings.oFeatures.bFilter) {\n      return;\n    }\n\n    _fnFilterComplete(settings, $.extend({}, settings.oPreviousSearch, {\n      \"sSearch\": input + \"\",\n      \"bRegex\": regex === null ? false : regex,\n      \"bSmart\": smart === null ? true : smart,\n      \"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n    }), 1);\n  });\n});\n\n_api_registerPlural('columns().search()', 'column().search()', function (input, regex, smart, caseInsen) {\n  return this.iterator('column', function (settings, column) {\n    var preSearch = settings.aoPreSearchCols;\n\n    if (input === undefined) {\n      // get\n      return preSearch[column].sSearch;\n    } // set\n\n\n    if (!settings.oFeatures.bFilter) {\n      return;\n    }\n\n    $.extend(preSearch[column], {\n      \"sSearch\": input + \"\",\n      \"bRegex\": regex === null ? false : regex,\n      \"bSmart\": smart === null ? true : smart,\n      \"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n    });\n\n    _fnFilterComplete(settings, settings.oPreviousSearch, 1);\n  });\n});\n/*\n * State API methods\n */\n\n\n_api_register('state()', function () {\n  return this.context.length ? this.context[0].oSavedState : null;\n});\n\n_api_register('state.clear()', function () {\n  return this.iterator('table', function (settings) {\n    // Save an empty object\n    settings.fnStateSaveCallback.call(settings.oInstance, settings, {});\n  });\n});\n\n_api_register('state.loaded()', function () {\n  return this.context.length ? this.context[0].oLoadedState : null;\n});\n\n_api_register('state.save()', function () {\n  return this.iterator('table', function (settings) {\n    _fnSaveState(settings);\n  });\n});\n/**\n * Provide a common method for plug-ins to check the version of DataTables being\n * used, in order to ensure compatibility.\n *\n *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\n *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\n *  @returns {boolean} true if this version of DataTables is greater or equal to\n *    the required version, or false if this version of DataTales is not\n *    suitable\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\n */\n\n\nDataTable.versionCheck = DataTable.fnVersionCheck = function (version) {\n  var aThis = DataTable.version.split('.');\n  var aThat = version.split('.');\n  var iThis, iThat;\n\n  for (var i = 0, iLen = aThat.length; i < iLen; i++) {\n    iThis = parseInt(aThis[i], 10) || 0;\n    iThat = parseInt(aThat[i], 10) || 0; // Parts are the same, keep comparing\n\n    if (iThis === iThat) {\n      continue;\n    } // Parts are different, return immediately\n\n\n    return iThis > iThat;\n  }\n\n  return true;\n};\n/**\n * Check if a `<table>` node is a DataTable table already or not.\n *\n *  @param {node|jquery|string} table Table node, jQuery object or jQuery\n *      selector for the table to test. Note that if more than more than one\n *      table is passed on, only the first will be checked\n *  @returns {boolean} true the table given is a DataTable, or false otherwise\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\n *      $('#example').dataTable();\n *    }\n */\n\n\nDataTable.isDataTable = DataTable.fnIsDataTable = function (table) {\n  var t = $(table).get(0);\n  var is = false;\n\n  if (table instanceof DataTable.Api) {\n    return true;\n  }\n\n  $.each(DataTable.settings, function (i, o) {\n    var head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;\n    var foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;\n\n    if (o.nTable === t || head === t || foot === t) {\n      is = true;\n    }\n  });\n  return is;\n};\n/**\n * Get all DataTable tables that have been initialised - optionally you can\n * select to get only currently visible tables.\n *\n *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\n *    or visible tables only.\n *  @returns {array} Array of `table` nodes (not DataTable instances) which are\n *    DataTables\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    $.each( $.fn.dataTable.tables(true), function () {\n *      $(table).DataTable().columns.adjust();\n *    } );\n */\n\n\nDataTable.tables = DataTable.fnTables = function (visible) {\n  var api = false;\n\n  if ($.isPlainObject(visible)) {\n    api = visible.api;\n    visible = visible.visible;\n  }\n\n  var a = $.map(DataTable.settings, function (o) {\n    if (!visible || visible && $(o.nTable).is(':visible')) {\n      return o.nTable;\n    }\n  });\n  return api ? new _Api(a) : a;\n};\n/**\n * Convert from camel case parameters to Hungarian notation. This is made public\n * for the extensions to provide the same ability as DataTables core to accept\n * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\n * parameters.\n *\n *  @param {object} src The model object which holds all parameters that can be\n *    mapped.\n *  @param {object} user The object to convert from camel case to Hungarian.\n *  @param {boolean} force When set to `true`, properties which already have a\n *    Hungarian value in the `user` object will be overwritten. Otherwise they\n *    won't be.\n */\n\n\nDataTable.camelToHungarian = _fnCamelToHungarian;\n/**\n *\n */\n\n_api_register('$()', function (selector, opts) {\n  var rows = this.rows(opts).nodes(),\n      // Get all rows\n  jqRows = $(rows);\n  return $([].concat(jqRows.filter(selector).toArray(), jqRows.find(selector).toArray()));\n}); // jQuery functions to operate on the tables\n\n\n$.each(['on', 'one', 'off'], function (i, key) {\n  _api_register(key + '()', function\n    /* event, handler */\n  () {\n    var args = Array.prototype.slice.call(arguments); // Add the `dt` namespace automatically if it isn't already present\n\n    args[0] = $.map(args[0].split(/\\s/), function (e) {\n      return !e.match(/\\.dt\\b/) ? e + '.dt' : e;\n    }).join(' ');\n    var inst = $(this.tables().nodes());\n    inst[key].apply(inst, args);\n    return this;\n  });\n});\n\n_api_register('clear()', function () {\n  return this.iterator('table', function (settings) {\n    _fnClearTable(settings);\n  });\n});\n\n_api_register('settings()', function () {\n  return new _Api(this.context, this.context);\n});\n\n_api_register('init()', function () {\n  var ctx = this.context;\n  return ctx.length ? ctx[0].oInit : null;\n});\n\n_api_register('data()', function () {\n  return this.iterator('table', function (settings) {\n    return _pluck(settings.aoData, '_aData');\n  }).flatten();\n});\n\n_api_register('destroy()', function (remove) {\n  remove = remove || false;\n  return this.iterator('table', function (settings) {\n    var classes = settings.oClasses;\n    var table = settings.nTable;\n    var tbody = settings.nTBody;\n    var thead = settings.nTHead;\n    var tfoot = settings.nTFoot;\n    var jqTable = $(table);\n    var jqTbody = $(tbody);\n    var jqWrapper = $(settings.nTableWrapper);\n    var rows = $.map(settings.aoData, function (r) {\n      return r.nTr;\n    });\n    var i, ien; // Flag to note that the table is currently being destroyed - no action\n    // should be taken\n\n    settings.bDestroying = true; // Fire off the destroy callbacks for plug-ins etc\n\n    _fnCallbackFire(settings, \"aoDestroyCallback\", \"destroy\", [settings]); // If not being removed from the document, make all columns visible\n\n\n    if (!remove) {\n      new _Api(settings).columns().visible(true);\n    } // Blitz all `DT` namespaced events (these are internal events, the\n    // lowercase, `dt` events are user subscribed and they are responsible\n    // for removing them\n\n\n    jqWrapper.off('.DT').find(':not(tbody *)').off('.DT');\n    $(window).off('.DT-' + settings.sInstance); // When scrolling we had to break the table up - restore it\n\n    if (table != thead.parentNode) {\n      jqTable.children('thead').detach();\n      jqTable.append(thead);\n    }\n\n    if (tfoot && table != tfoot.parentNode) {\n      jqTable.children('tfoot').detach();\n      jqTable.append(tfoot);\n    }\n\n    settings.aaSorting = [];\n    settings.aaSortingFixed = [];\n\n    _fnSortingClasses(settings);\n\n    $(rows).removeClass(settings.asStripeClasses.join(' '));\n    $('th, td', thead).removeClass(classes.sSortable + ' ' + classes.sSortableAsc + ' ' + classes.sSortableDesc + ' ' + classes.sSortableNone); // Add the TR elements back into the table in their original order\n\n    jqTbody.children().detach();\n    jqTbody.append(rows);\n    var orig = settings.nTableWrapper.parentNode; // Remove the DataTables generated nodes, events and classes\n\n    var removedMethod = remove ? 'remove' : 'detach';\n    jqTable[removedMethod]();\n    jqWrapper[removedMethod](); // If we need to reattach the table to the document\n\n    if (!remove && orig) {\n      // insertBefore acts like appendChild if !arg[1]\n      orig.insertBefore(table, settings.nTableReinsertBefore); // Restore the width of the original table - was read from the style property,\n      // so we can restore directly to that\n\n      jqTable.css('width', settings.sDestroyWidth).removeClass(classes.sTable); // If the were originally stripe classes - then we add them back here.\n      // Note this is not fool proof (for example if not all rows had stripe\n      // classes - but it's a good effort without getting carried away\n\n      ien = settings.asDestroyStripes.length;\n\n      if (ien) {\n        jqTbody.children().each(function (i) {\n          $(this).addClass(settings.asDestroyStripes[i % ien]);\n        });\n      }\n    }\n    /* Remove the settings object from the settings array */\n\n\n    var idx = $.inArray(settings, DataTable.settings);\n\n    if (idx !== -1) {\n      DataTable.settings.splice(idx, 1);\n    }\n  });\n}); // Add the `every()` method for rows, columns and cells in a compact form\n\n\n$.each(['column', 'row', 'cell'], function (i, type) {\n  _api_register(type + 's().every()', function (fn) {\n    var opts = this.selector.opts;\n    var api = this;\n    return this.iterator(type, function (settings, arg1, arg2, arg3, arg4) {\n      // Rows and columns:\n      //  arg1 - index\n      //  arg2 - table counter\n      //  arg3 - loop counter\n      //  arg4 - undefined\n      // Cells:\n      //  arg1 - row index\n      //  arg2 - column index\n      //  arg3 - table counter\n      //  arg4 - loop counter\n      fn.call(api[type](arg1, type === 'cell' ? arg2 : opts, type === 'cell' ? opts : undefined), arg1, arg2, arg3, arg4);\n    });\n  });\n}); // i18n method for extensions to be able to use the language object from the\n// DataTable\n\n_api_register('i18n()', function (token, def, plural) {\n  var ctx = this.context[0];\n\n  var resolved = _fnGetObjectDataFn(token)(ctx.oLanguage);\n\n  if (resolved === undefined) {\n    resolved = def;\n  }\n\n  if (plural !== undefined && $.isPlainObject(resolved)) {\n    resolved = resolved[plural] !== undefined ? resolved[plural] : resolved._;\n  }\n\n  return resolved.replace('%d', plural); // nb: plural might be undefined,\n});\n/**\n * Version string for plug-ins to check compatibility. Allowed format is\n * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\n * only for non-release builds. See http://semver.org/ for more information.\n *  @member\n *  @type string\n *  @default Version number\n */\n\n\nDataTable.version = \"1.13.1\";\n/**\n * Private data store, containing all of the settings objects that are\n * created for the tables on a given page.\n *\n * Note that the `DataTable.settings` object is aliased to\n * `jQuery.fn.dataTableExt` through which it may be accessed and\n * manipulated, or `jQuery.fn.dataTable.settings`.\n *  @member\n *  @type array\n *  @default []\n *  @private\n */\n\nDataTable.settings = [];\n/**\n * Object models container, for the various models that DataTables has\n * available to it. These models define the objects that are used to hold\n * the active state and configuration of the table.\n *  @namespace\n */\n\nDataTable.models = {};\n/**\n * Template object for the way in which DataTables holds information about\n * search information for the global filter and individual column filters.\n *  @namespace\n */\n\nDataTable.models.oSearch = {\n  /**\n   * Flag to indicate if the filtering should be case insensitive or not\n   *  @type boolean\n   *  @default true\n   */\n  \"bCaseInsensitive\": true,\n\n  /**\n   * Applied search term\n   *  @type string\n   *  @default <i>Empty string</i>\n   */\n  \"sSearch\": \"\",\n\n  /**\n   * Flag to indicate if the search term should be interpreted as a\n   * regular expression (true) or not (false) and therefore and special\n   * regex characters escaped.\n   *  @type boolean\n   *  @default false\n   */\n  \"bRegex\": false,\n\n  /**\n   * Flag to indicate if DataTables is to use its smart filtering or not.\n   *  @type boolean\n   *  @default true\n   */\n  \"bSmart\": true,\n\n  /**\n   * Flag to indicate if DataTables should only trigger a search when\n   * the return key is pressed.\n   *  @type boolean\n   *  @default false\n   */\n  \"return\": false\n};\n/**\n * Template object for the way in which DataTables holds information about\n * each individual row. This is the object format used for the settings\n * aoData array.\n *  @namespace\n */\n\nDataTable.models.oRow = {\n  /**\n   * TR element for the row\n   *  @type node\n   *  @default null\n   */\n  \"nTr\": null,\n\n  /**\n   * Array of TD elements for each row. This is null until the row has been\n   * created.\n   *  @type array nodes\n   *  @default []\n   */\n  \"anCells\": null,\n\n  /**\n   * Data object from the original data source for the row. This is either\n   * an array if using the traditional form of DataTables, or an object if\n   * using mData options. The exact type will depend on the passed in\n   * data from the data source, or will be an array if using DOM a data\n   * source.\n   *  @type array|object\n   *  @default []\n   */\n  \"_aData\": [],\n\n  /**\n   * Sorting data cache - this array is ostensibly the same length as the\n   * number of columns (although each index is generated only as it is\n   * needed), and holds the data that is used for sorting each column in the\n   * row. We do this cache generation at the start of the sort in order that\n   * the formatting of the sort data need be done only once for each cell\n   * per sort. This array should not be read from or written to by anything\n   * other than the master sorting methods.\n   *  @type array\n   *  @default null\n   *  @private\n   */\n  \"_aSortData\": null,\n\n  /**\n   * Per cell filtering data cache. As per the sort data cache, used to\n   * increase the performance of the filtering in DataTables\n   *  @type array\n   *  @default null\n   *  @private\n   */\n  \"_aFilterData\": null,\n\n  /**\n   * Filtering data cache. This is the same as the cell filtering cache, but\n   * in this case a string rather than an array. This is easily computed with\n   * a join on `_aFilterData`, but is provided as a cache so the join isn't\n   * needed on every search (memory traded for performance)\n   *  @type array\n   *  @default null\n   *  @private\n   */\n  \"_sFilterRow\": null,\n\n  /**\n   * Cache of the class name that DataTables has applied to the row, so we\n   * can quickly look at this variable rather than needing to do a DOM check\n   * on className for the nTr property.\n   *  @type string\n   *  @default <i>Empty string</i>\n   *  @private\n   */\n  \"_sRowStripe\": \"\",\n\n  /**\n   * Denote if the original data source was from the DOM, or the data source\n   * object. This is used for invalidating data, so DataTables can\n   * automatically read data from the original source, unless uninstructed\n   * otherwise.\n   *  @type string\n   *  @default null\n   *  @private\n   */\n  \"src\": null,\n\n  /**\n   * Index in the aoData array. This saves an indexOf lookup when we have the\n   * object, but want to know the index\n   *  @type integer\n   *  @default -1\n   *  @private\n   */\n  \"idx\": -1\n};\n/**\n * Template object for the column information object in DataTables. This object\n * is held in the settings aoColumns array and contains all the information that\n * DataTables needs about each individual column.\n *\n * Note that this object is related to {@link DataTable.defaults.column}\n * but this one is the internal data store for DataTables's cache of columns.\n * It should NOT be manipulated outside of DataTables. Any configuration should\n * be done through the initialisation options.\n *  @namespace\n */\n\nDataTable.models.oColumn = {\n  /**\n   * Column index. This could be worked out on-the-fly with $.inArray, but it\n   * is faster to just hold it as a variable\n   *  @type integer\n   *  @default null\n   */\n  \"idx\": null,\n\n  /**\n   * A list of the columns that sorting should occur on when this column\n   * is sorted. That this property is an array allows multi-column sorting\n   * to be defined for a column (for example first name / last name columns\n   * would benefit from this). The values are integers pointing to the\n   * columns to be sorted on (typically it will be a single integer pointing\n   * at itself, but that doesn't need to be the case).\n   *  @type array\n   */\n  \"aDataSort\": null,\n\n  /**\n   * Define the sorting directions that are applied to the column, in sequence\n   * as the column is repeatedly sorted upon - i.e. the first value is used\n   * as the sorting direction when the column if first sorted (clicked on).\n   * Sort it again (click again) and it will move on to the next index.\n   * Repeat until loop.\n   *  @type array\n   */\n  \"asSorting\": null,\n\n  /**\n   * Flag to indicate if the column is searchable, and thus should be included\n   * in the filtering or not.\n   *  @type boolean\n   */\n  \"bSearchable\": null,\n\n  /**\n   * Flag to indicate if the column is sortable or not.\n   *  @type boolean\n   */\n  \"bSortable\": null,\n\n  /**\n   * Flag to indicate if the column is currently visible in the table or not\n   *  @type boolean\n   */\n  \"bVisible\": null,\n\n  /**\n   * Store for manual type assignment using the `column.type` option. This\n   * is held in store so we can manipulate the column's `sType` property.\n   *  @type string\n   *  @default null\n   *  @private\n   */\n  \"_sManualType\": null,\n\n  /**\n   * Flag to indicate if HTML5 data attributes should be used as the data\n   * source for filtering or sorting. True is either are.\n   *  @type boolean\n   *  @default false\n   *  @private\n   */\n  \"_bAttrSrc\": false,\n\n  /**\n   * Developer definable function that is called whenever a cell is created (Ajax source,\n   * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n   * allowing you to modify the DOM element (add background colour for example) when the\n   * element is available.\n   *  @type function\n   *  @param {element} nTd The TD node that has been created\n   *  @param {*} sData The Data for the cell\n   *  @param {array|object} oData The data for the whole row\n   *  @param {int} iRow The row index for the aoData data store\n   *  @default null\n   */\n  \"fnCreatedCell\": null,\n\n  /**\n   * Function to get data from a cell in a column. You should <b>never</b>\n   * access data directly through _aData internally in DataTables - always use\n   * the method attached to this property. It allows mData to function as\n   * required. This function is automatically assigned by the column\n   * initialisation method\n   *  @type function\n   *  @param {array|object} oData The data array/object for the array\n   *    (i.e. aoData[]._aData)\n   *  @param {string} sSpecific The specific data type you want to get -\n   *    'display', 'type' 'filter' 'sort'\n   *  @returns {*} The data for the cell from the given row's data\n   *  @default null\n   */\n  \"fnGetData\": null,\n\n  /**\n   * Function to set data for a cell in the column. You should <b>never</b>\n   * set the data directly to _aData internally in DataTables - always use\n   * this method. It allows mData to function as required. This function\n   * is automatically assigned by the column initialisation method\n   *  @type function\n   *  @param {array|object} oData The data array/object for the array\n   *    (i.e. aoData[]._aData)\n   *  @param {*} sValue Value to set\n   *  @default null\n   */\n  \"fnSetData\": null,\n\n  /**\n   * Property to read the value for the cells in the column from the data\n   * source array / object. If null, then the default content is used, if a\n   * function is given then the return from the function is used.\n   *  @type function|int|string|null\n   *  @default null\n   */\n  \"mData\": null,\n\n  /**\n   * Partner property to mData which is used (only when defined) to get\n   * the data - i.e. it is basically the same as mData, but without the\n   * 'set' option, and also the data fed to it is the result from mData.\n   * This is the rendering method to match the data method of mData.\n   *  @type function|int|string|null\n   *  @default null\n   */\n  \"mRender\": null,\n\n  /**\n   * Unique header TH/TD element for this column - this is what the sorting\n   * listener is attached to (if sorting is enabled.)\n   *  @type node\n   *  @default null\n   */\n  \"nTh\": null,\n\n  /**\n   * Unique footer TH/TD element for this column (if there is one). Not used\n   * in DataTables as such, but can be used for plug-ins to reference the\n   * footer for each column.\n   *  @type node\n   *  @default null\n   */\n  \"nTf\": null,\n\n  /**\n   * The class to apply to all TD elements in the table's TBODY for the column\n   *  @type string\n   *  @default null\n   */\n  \"sClass\": null,\n\n  /**\n   * When DataTables calculates the column widths to assign to each column,\n   * it finds the longest string in each column and then constructs a\n   * temporary table and reads the widths from that. The problem with this\n   * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n   * string - thus the calculation can go wrong (doing it properly and putting\n   * it into an DOM object and measuring that is horribly(!) slow). Thus as\n   * a \"work around\" we provide this option. It will append its value to the\n   * text that is found to be the longest string for the column - i.e. padding.\n   *  @type string\n   */\n  \"sContentPadding\": null,\n\n  /**\n   * Allows a default value to be given for a column's data, and will be used\n   * whenever a null data source is encountered (this can be because mData\n   * is set to null, or because the data source itself is null).\n   *  @type string\n   *  @default null\n   */\n  \"sDefaultContent\": null,\n\n  /**\n   * Name for the column, allowing reference to the column by name as well as\n   * by index (needs a lookup to work by name).\n   *  @type string\n   */\n  \"sName\": null,\n\n  /**\n   * Custom sorting data type - defines which of the available plug-ins in\n   * afnSortData the custom sorting will use - if any is defined.\n   *  @type string\n   *  @default std\n   */\n  \"sSortDataType\": 'std',\n\n  /**\n   * Class to be applied to the header element when sorting on this column\n   *  @type string\n   *  @default null\n   */\n  \"sSortingClass\": null,\n\n  /**\n   * Class to be applied to the header element when sorting on this column -\n   * when jQuery UI theming is used.\n   *  @type string\n   *  @default null\n   */\n  \"sSortingClassJUI\": null,\n\n  /**\n   * Title of the column - what is seen in the TH element (nTh).\n   *  @type string\n   */\n  \"sTitle\": null,\n\n  /**\n   * Column sorting and filtering type\n   *  @type string\n   *  @default null\n   */\n  \"sType\": null,\n\n  /**\n   * Width of the column\n   *  @type string\n   *  @default null\n   */\n  \"sWidth\": null,\n\n  /**\n   * Width of the column when it was first \"encountered\"\n   *  @type string\n   *  @default null\n   */\n  \"sWidthOrig\": null\n};\n/*\n * Developer note: The properties of the object below are given in Hungarian\n * notation, that was used as the interface for DataTables prior to v1.10, however\n * from v1.10 onwards the primary interface is camel case. In order to avoid\n * breaking backwards compatibility utterly with this change, the Hungarian\n * version is still, internally the primary interface, but is is not documented\n * - hence the @name tags in each doc comment. This allows a Javascript function\n * to create a map from Hungarian notation to camel case (going the other direction\n * would require each property to be listed, which would add around 3K to the size\n * of DataTables, while this method is about a 0.5K hit).\n *\n * Ultimately this does pave the way for Hungarian notation to be dropped\n * completely, but that is a massive amount of work and will break current\n * installs (therefore is on-hold until v2).\n */\n\n/**\n * Initialisation options that can be given to DataTables at initialisation\n * time.\n *  @namespace\n */\n\nDataTable.defaults = {\n  /**\n   * An array of data to use for the table, passed in at initialisation which\n   * will be used in preference to any data which is already in the DOM. This is\n   * particularly useful for constructing tables purely in Javascript, for\n   * example with a custom Ajax call.\n   *  @type array\n   *  @default null\n   *\n   *  @dtopt Option\n   *  @name DataTable.defaults.data\n   *\n   *  @example\n   *    // Using a 2D array data source\n   *    $(document).ready( function () {\n   *      $('#example').dataTable( {\n   *        \"data\": [\n   *          ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],\n   *          ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],\n   *        ],\n   *        \"columns\": [\n   *          { \"title\": \"Engine\" },\n   *          { \"title\": \"Browser\" },\n   *          { \"title\": \"Platform\" },\n   *          { \"title\": \"Version\" },\n   *          { \"title\": \"Grade\" }\n   *        ]\n   *      } );\n   *    } );\n   *\n   *  @example\n   *    // Using an array of objects as a data source (`data`)\n   *    $(document).ready( function () {\n   *      $('#example').dataTable( {\n   *        \"data\": [\n   *          {\n   *            \"engine\":   \"Trident\",\n   *            \"browser\":  \"Internet Explorer 4.0\",\n   *            \"platform\": \"Win 95+\",\n   *            \"version\":  4,\n   *            \"grade\":    \"X\"\n   *          },\n   *          {\n   *            \"engine\":   \"Trident\",\n   *            \"browser\":  \"Internet Explorer 5.0\",\n   *            \"platform\": \"Win 95+\",\n   *            \"version\":  5,\n   *            \"grade\":    \"C\"\n   *          }\n   *        ],\n   *        \"columns\": [\n   *          { \"title\": \"Engine\",   \"data\": \"engine\" },\n   *          { \"title\": \"Browser\",  \"data\": \"browser\" },\n   *          { \"title\": \"Platform\", \"data\": \"platform\" },\n   *          { \"title\": \"Version\",  \"data\": \"version\" },\n   *          { \"title\": \"Grade\",    \"data\": \"grade\" }\n   *        ]\n   *      } );\n   *    } );\n   */\n  \"aaData\": null,\n\n  /**\n   * If ordering is enabled, then DataTables will perform a first pass sort on\n   * initialisation. You can define which column(s) the sort is performed\n   * upon, and the sorting direction, with this variable. The `sorting` array\n   * should contain an array for each column to be sorted initially containing\n   * the column's index and a direction string ('asc' or 'desc').\n   *  @type array\n   *  @default [[0,'asc']]\n   *\n   *  @dtopt Option\n   *  @name DataTable.defaults.order\n   *\n   *  @example\n   *    // Sort by 3rd column first, and then 4th column\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"order\": [[2,'asc'], [3,'desc']]\n   *      } );\n   *    } );\n   *\n   *    // No initial sorting\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"order\": []\n   *      } );\n   *    } );\n   */\n  \"aaSorting\": [[0, 'asc']],\n\n  /**\n   * This parameter is basically identical to the `sorting` parameter, but\n   * cannot be overridden by user interaction with the table. What this means\n   * is that you could have a column (visible or hidden) which the sorting\n   * will always be forced on first - any sorting after that (from the user)\n   * will then be performed as required. This can be useful for grouping rows\n   * together.\n   *  @type array\n   *  @default null\n   *\n   *  @dtopt Option\n   *  @name DataTable.defaults.orderFixed\n   *\n   *  @example\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"orderFixed\": [[0,'asc']]\n   *      } );\n   *    } )\n   */\n  \"aaSortingFixed\": [],\n\n  /**\n   * DataTables can be instructed to load data to display in the table from a\n   * Ajax source. This option defines how that Ajax call is made and where to.\n   *\n   * The `ajax` property has three different modes of operation, depending on\n   * how it is defined. These are:\n   *\n   * * `string` - Set the URL from where the data should be loaded from.\n   * * `object` - Define properties for `jQuery.ajax`.\n   * * `function` - Custom data get function\n   *\n   * `string`\n   * --------\n   *\n   * As a string, the `ajax` property simply defines the URL from which\n   * DataTables will load data.\n   *\n   * `object`\n   * --------\n   *\n   * As an object, the parameters in the object are passed to\n   * [jQuery.ajax](http://api.jquery.com/jQuery.ajax/) allowing fine control\n   * of the Ajax request. DataTables has a number of default parameters which\n   * you can override using this option. Please refer to the jQuery\n   * documentation for a full description of the options available, although\n   * the following parameters provide additional options in DataTables or\n   * require special consideration:\n   *\n   * * `data` - As with jQuery, `data` can be provided as an object, but it\n   *   can also be used as a function to manipulate the data DataTables sends\n   *   to the server. The function takes a single parameter, an object of\n   *   parameters with the values that DataTables has readied for sending. An\n   *   object may be returned which will be merged into the DataTables\n   *   defaults, or you can add the items to the object that was passed in and\n   *   not return anything from the function. This supersedes `fnServerParams`\n   *   from DataTables 1.9-.\n   *\n   * * `dataSrc` - By default DataTables will look for the property `data` (or\n   *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\n   *   from an Ajax source or for server-side processing - this parameter\n   *   allows that property to be changed. You can use Javascript dotted\n   *   object notation to get a data source for multiple levels of nesting, or\n   *   it my be used as a function. As a function it takes a single parameter,\n   *   the JSON returned from the server, which can be manipulated as\n   *   required, with the returned value being that used by DataTables as the\n   *   data source for the table. This supersedes `sAjaxDataProp` from\n   *   DataTables 1.9-.\n   *\n   * * `success` - Should not be overridden it is used internally in\n   *   DataTables. To manipulate / transform the data returned by the server\n   *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\n   *\n   * `function`\n   * ----------\n   *\n   * As a function, making the Ajax call is left up to yourself allowing\n   * complete control of the Ajax request. Indeed, if desired, a method other\n   * than Ajax could be used to obtain the required data, such as Web storage\n   * or an AIR database.\n   *\n   * The function is given four parameters and no return is required. The\n   * parameters are:\n   *\n   * 1. _object_ - Data to send to the server\n   * 2. _function_ - Callback function that must be executed when the required\n   *    data has been obtained. That data should be passed into the callback\n   *    as the only parameter\n   * 3. _object_ - DataTables settings object for the table\n   *\n   * Note that this supersedes `fnServerData` from DataTables 1.9-.\n   *\n   *  @type string|object|function\n   *  @default null\n   *\n   *  @dtopt Option\n   *  @name DataTable.defaults.ajax\n   *  @since 1.10.0\n   *\n   * @example\n   *   // Get JSON data from a file via Ajax.\n   *   // Note DataTables expects data in the form `{ data: [ ...data... ] }` by default).\n   *   $('#example').dataTable( {\n   *     \"ajax\": \"data.json\"\n   *   } );\n   *\n   * @example\n   *   // Get JSON data from a file via Ajax, using `dataSrc` to change\n   *   // `data` to `tableData` (i.e. `{ tableData: [ ...data... ] }`)\n   *   $('#example').dataTable( {\n   *     \"ajax\": {\n   *       \"url\": \"data.json\",\n   *       \"dataSrc\": \"tableData\"\n   *     }\n   *   } );\n   *\n   * @example\n   *   // Get JSON data from a file via Ajax, using `dataSrc` to read data\n   *   // from a plain array rather than an array in an object\n   *   $('#example').dataTable( {\n   *     \"ajax\": {\n   *       \"url\": \"data.json\",\n   *       \"dataSrc\": \"\"\n   *     }\n   *   } );\n   *\n   * @example\n   *   // Manipulate the data returned from the server - add a link to data\n   *   // (note this can, should, be done using `render` for the column - this\n   *   // is just a simple example of how the data can be manipulated).\n   *   $('#example').dataTable( {\n   *     \"ajax\": {\n   *       \"url\": \"data.json\",\n   *       \"dataSrc\": function ( json ) {\n   *         for ( var i=0, ien=json.length ; i<ien ; i++ ) {\n   *           json[i][0] = '<a href=\"/message/'+json[i][0]+'>View message</a>';\n   *         }\n   *         return json;\n   *       }\n   *     }\n   *   } );\n   *\n   * @example\n   *   // Add data to the request\n   *   $('#example').dataTable( {\n   *     \"ajax\": {\n   *       \"url\": \"data.json\",\n   *       \"data\": function ( d ) {\n   *         return {\n   *           \"extra_search\": $('#extra').val()\n   *         };\n   *       }\n   *     }\n   *   } );\n   *\n   * @example\n   *   // Send request as POST\n   *   $('#example').dataTable( {\n   *     \"ajax\": {\n   *       \"url\": \"data.json\",\n   *       \"type\": \"POST\"\n   *     }\n   *   } );\n   *\n   * @example\n   *   // Get the data from localStorage (could interface with a form for\n   *   // adding, editing and removing rows).\n   *   $('#example').dataTable( {\n   *     \"ajax\": function (data, callback, settings) {\n   *       callback(\n   *         JSON.parse( localStorage.getItem('dataTablesData') )\n   *       );\n   *     }\n   *   } );\n   */\n  \"ajax\": null,\n\n  /**\n   * This parameter allows you to readily specify the entries in the length drop\n   * down menu that DataTables shows when pagination is enabled. It can be\n   * either a 1D array of options which will be used for both the displayed\n   * option and the value, or a 2D array which will use the array in the first\n   * position as the value, and the array in the second position as the\n   * displayed options (useful for language strings such as 'All').\n   *\n   * Note that the `pageLength` property will be automatically set to the\n   * first value given in this array, unless `pageLength` is also provided.\n   *  @type array\n   *  @default [ 10, 25, 50, 100 ]\n   *\n   *  @dtopt Option\n   *  @name DataTable.defaults.lengthMenu\n   *\n   *  @example\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"lengthMenu\": [[10, 25, 50, -1], [10, 25, 50, \"All\"]]\n   *      } );\n   *    } );\n   */\n  \"aLengthMenu\": [10, 25, 50, 100],\n\n  /**\n   * The `columns` option in the initialisation parameter allows you to define\n   * details about the way individual columns behave. For a full list of\n   * column options that can be set, please see\n   * {@link DataTable.defaults.column}. Note that if you use `columns` to\n   * define your columns, you must have an entry in the array for every single\n   * column that you have in your table (these can be null if you don't which\n   * to specify any options).\n   *  @member\n   *\n   *  @name DataTable.defaults.column\n   */\n  \"aoColumns\": null,\n\n  /**\n   * Very similar to `columns`, `columnDefs` allows you to target a specific\n   * column, multiple columns, or all columns, using the `targets` property of\n   * each object in the array. This allows great flexibility when creating\n   * tables, as the `columnDefs` arrays can be of any length, targeting the\n   * columns you specifically want. `columnDefs` may use any of the column\n   * options available: {@link DataTable.defaults.column}, but it _must_\n   * have `targets` defined in each object in the array. Values in the `targets`\n   * array may be:\n   *   <ul>\n   *     <li>a string - class name will be matched on the TH for the column</li>\n   *     <li>0 or a positive integer - column index counting from the left</li>\n   *     <li>a negative integer - column index counting from the right</li>\n   *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\n   *   </ul>\n   *  @member\n   *\n   *  @name DataTable.defaults.columnDefs\n   */\n  \"aoColumnDefs\": null,\n\n  /**\n   * Basically the same as `search`, this parameter defines the individual column\n   * filtering state at initialisation time. The array must be of the same size\n   * as the number of columns, and each element be an object with the parameters\n   * `search` and `escapeRegex` (the latter is optional). 'null' is also\n   * accepted and the default will be used.\n   *  @type array\n   *  @default []\n   *\n   *  @dtopt Option\n   *  @name DataTable.defaults.searchCols\n   *\n   *  @example\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"searchCols\": [\n   *          null,\n   *          { \"search\": \"My filter\" },\n   *          null,\n   *          { \"search\": \"^[0-9]\", \"escapeRegex\": false }\n   *        ]\n   *      } );\n   *    } )\n   */\n  \"aoSearchCols\": [],\n\n  /**\n   * An array of CSS classes that should be applied to displayed rows. This\n   * array may be of any length, and DataTables will apply each class\n   * sequentially, looping when required.\n   *  @type array\n   *  @default null <i>Will take the values determined by the `oClasses.stripe*`\n   *    options</i>\n   *\n   *  @dtopt Option\n   *  @name DataTable.defaults.stripeClasses\n   *\n   *  @example\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"stripeClasses\": [ 'strip1', 'strip2', 'strip3' ]\n   *      } );\n   *    } )\n   */\n  \"asStripeClasses\": null,\n\n  /**\n   * Enable or disable automatic column width calculation. This can be disabled\n   * as an optimisation (it takes some time to calculate the widths) if the\n   * tables widths are passed in using `columns`.\n   *  @type boolean\n   *  @default true\n   *\n   *  @dtopt Features\n   *  @name DataTable.defaults.autoWidth\n   *\n   *  @example\n   *    $(document).ready( function () {\n   *      $('#example').dataTable( {\n   *        \"autoWidth\": false\n   *      } );\n   *    } );\n   */\n  \"bAutoWidth\": true,\n\n  /**\n   * Deferred rendering can provide DataTables with a huge speed boost when you\n   * are using an Ajax or JS data source for the table. This option, when set to\n   * true, will cause DataTables to defer the creation of the table elements for\n   * each row until they are needed for a draw - saving a significant amount of\n   * time.\n   *  @type boolean\n   *  @default false\n   *\n   *  @dtopt Features\n   *  @name DataTable.defaults.deferRender\n   *\n   *  @example\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"ajax\": \"sources/arrays.txt\",\n   *        \"deferRender\": true\n   *      } );\n   *    } );\n   */\n  \"bDeferRender\": false,\n\n  /**\n   * Replace a DataTable which matches the given selector and replace it with\n   * one which has the properties of the new initialisation object passed. If no\n   * table matches the selector, then the new DataTable will be constructed as\n   * per normal.\n   *  @type boolean\n   *  @default false\n   *\n   *  @dtopt Options\n   *  @name DataTable.defaults.destroy\n   *\n   *  @example\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"srollY\": \"200px\",\n   *        \"paginate\": false\n   *      } );\n   *\n   *      // Some time later....\n   *      $('#example').dataTable( {\n   *        \"filter\": false,\n   *        \"destroy\": true\n   *      } );\n   *    } );\n   */\n  \"bDestroy\": false,\n\n  /**\n   * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\n   * that it allows the end user to input multiple words (space separated) and\n   * will match a row containing those words, even if not in the order that was\n   * specified (this allow matching across multiple columns). Note that if you\n   * wish to use filtering in DataTables this must remain 'true' - to remove the\n   * default filtering input box and retain filtering abilities, please use\n   * {@link DataTable.defaults.dom}.\n   *  @type boolean\n   *  @default true\n   *\n   *  @dtopt Features\n   *  @name DataTable.defaults.searching\n   *\n   *  @example\n   *    $(document).ready( function () {\n   *      $('#example').dataTable( {\n   *        \"searching\": false\n   *      } );\n   *    } );\n   */\n  \"bFilter\": true,\n\n  /**\n   * Enable or disable the table information display. This shows information\n   * about the data that is currently visible on the page, including information\n   * about filtered data if that action is being performed.\n   *  @type boolean\n   *  @default true\n   *\n   *  @dtopt Features\n   *  @name DataTable.defaults.info\n   *\n   *  @example\n   *    $(document).ready( function () {\n   *      $('#example').dataTable( {\n   *        \"info\": false\n   *      } );\n   *    } );\n   */\n  \"bInfo\": true,\n\n  /**\n   * Allows the end user to select the size of a formatted page from a select\n   * menu (sizes are 10, 25, 50 and 100). Requires pagination (`paginate`).\n   *  @type boolean\n   *  @default true\n   *\n   *  @dtopt Features\n   *  @name DataTable.defaults.lengthChange\n   *\n   *  @example\n   *    $(document).ready( function () {\n   *      $('#example').dataTable( {\n   *        \"lengthChange\": false\n   *      } );\n   *    } );\n   */\n  \"bLengthChange\": true,\n\n  /**\n   * Enable or disable pagination.\n   *  @type boolean\n   *  @default true\n   *\n   *  @dtopt Features\n   *  @name DataTable.defaults.paging\n   *\n   *  @example\n   *    $(document).ready( function () {\n   *      $('#example').dataTable( {\n   *        \"paging\": false\n   *      } );\n   *    } );\n   */\n  \"bPaginate\": true,\n\n  /**\n   * Enable or disable the display of a 'processing' indicator when the table is\n   * being processed (e.g. a sort). This is particularly useful for tables with\n   * large amounts of data where it can take a noticeable amount of time to sort\n   * the entries.\n   *  @type boolean\n   *  @default false\n   *\n   *  @dtopt Features\n   *  @name DataTable.defaults.processing\n   *\n   *  @example\n   *    $(document).ready( function () {\n   *      $('#example').dataTable( {\n   *        \"processing\": true\n   *      } );\n   *    } );\n   */\n  \"bProcessing\": false,\n\n  /**\n   * Retrieve the DataTables object for the given selector. Note that if the\n   * table has already been initialised, this parameter will cause DataTables\n   * to simply return the object that has already been set up - it will not take\n   * account of any changes you might have made to the initialisation object\n   * passed to DataTables (setting this parameter to true is an acknowledgement\n   * that you understand this). `destroy` can be used to reinitialise a table if\n   * you need.\n   *  @type boolean\n   *  @default false\n   *\n   *  @dtopt Options\n   *  @name DataTable.defaults.retrieve\n   *\n   *  @example\n   *    $(document).ready( function() {\n   *      initTable();\n   *      tableActions();\n   *    } );\n   *\n   *    function initTable ()\n   *    {\n   *      return $('#example').dataTable( {\n   *        \"scrollY\": \"200px\",\n   *        \"paginate\": false,\n   *        \"retrieve\": true\n   *      } );\n   *    }\n   *\n   *    function tableActions ()\n   *    {\n   *      var table = initTable();\n   *      // perform API operations with oTable\n   *    }\n   */\n  \"bRetrieve\": false,\n\n  /**\n   * When vertical (y) scrolling is enabled, DataTables will force the height of\n   * the table's viewport to the given height at all times (useful for layout).\n   * However, this can look odd when filtering data down to a small data set,\n   * and the footer is left \"floating\" further down. This parameter (when\n   * enabled) will cause DataTables to collapse the table's viewport down when\n   * the result set will fit within the given Y height.\n   *  @type boolean\n   *  @default false\n   *\n   *  @dtopt Options\n   *  @name DataTable.defaults.scrollCollapse\n   *\n   *  @example\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"scrollY\": \"200\",\n   *        \"scrollCollapse\": true\n   *      } );\n   *    } );\n   */\n  \"bScrollCollapse\": false,\n\n  /**\n   * Configure DataTables to use server-side processing. Note that the\n   * `ajax` parameter must also be given in order to give DataTables a\n   * source to obtain the required data for each draw.\n   *  @type boolean\n   *  @default false\n   *\n   *  @dtopt Features\n   *  @dtopt Server-side\n   *  @name DataTable.defaults.serverSide\n   *\n   *  @example\n   *    $(document).ready( function () {\n   *      $('#example').dataTable( {\n   *        \"serverSide\": true,\n   *        \"ajax\": \"xhr.php\"\n   *      } );\n   *    } );\n   */\n  \"bServerSide\": false,\n\n  /**\n   * Enable or disable sorting of columns. Sorting of individual columns can be\n   * disabled by the `sortable` option for each column.\n   *  @type boolean\n   *  @default true\n   *\n   *  @dtopt Features\n   *  @name DataTable.defaults.ordering\n   *\n   *  @example\n   *    $(document).ready( function () {\n   *      $('#example').dataTable( {\n   *        \"ordering\": false\n   *      } );\n   *    } );\n   */\n  \"bSort\": true,\n\n  /**\n   * Enable or display DataTables' ability to sort multiple columns at the\n   * same time (activated by shift-click by the user).\n   *  @type boolean\n   *  @default true\n   *\n   *  @dtopt Options\n   *  @name DataTable.defaults.orderMulti\n   *\n   *  @example\n   *    // Disable multiple column sorting ability\n   *    $(document).ready( function () {\n   *      $('#example').dataTable( {\n   *        \"orderMulti\": false\n   *      } );\n   *    } );\n   */\n  \"bSortMulti\": true,\n\n  /**\n   * Allows control over whether DataTables should use the top (true) unique\n   * cell that is found for a single column, or the bottom (false - default).\n   * This is useful when using complex headers.\n   *  @type boolean\n   *  @default false\n   *\n   *  @dtopt Options\n   *  @name DataTable.defaults.orderCellsTop\n   *\n   *  @example\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"orderCellsTop\": true\n   *      } );\n   *    } );\n   */\n  \"bSortCellsTop\": false,\n\n  /**\n   * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\n   * `sorting\\_3` to the columns which are currently being sorted on. This is\n   * presented as a feature switch as it can increase processing time (while\n   * classes are removed and added) so for large data sets you might want to\n   * turn this off.\n   *  @type boolean\n   *  @default true\n   *\n   *  @dtopt Features\n   *  @name DataTable.defaults.orderClasses\n   *\n   *  @example\n   *    $(document).ready( function () {\n   *      $('#example').dataTable( {\n   *        \"orderClasses\": false\n   *      } );\n   *    } );\n   */\n  \"bSortClasses\": true,\n\n  /**\n   * Enable or disable state saving. When enabled HTML5 `localStorage` will be\n   * used to save table display information such as pagination information,\n   * display length, filtering and sorting. As such when the end user reloads\n   * the page the display display will match what thy had previously set up.\n   *\n   * Due to the use of `localStorage` the default state saving is not supported\n   * in IE6 or 7. If state saving is required in those browsers, use\n   * `stateSaveCallback` to provide a storage solution such as cookies.\n   *  @type boolean\n   *  @default false\n   *\n   *  @dtopt Features\n   *  @name DataTable.defaults.stateSave\n   *\n   *  @example\n   *    $(document).ready( function () {\n   *      $('#example').dataTable( {\n   *        \"stateSave\": true\n   *      } );\n   *    } );\n   */\n  \"bStateSave\": false,\n\n  /**\n   * This function is called when a TR element is created (and all TD child\n   * elements have been inserted), or registered if using a DOM source, allowing\n   * manipulation of the TR element (adding classes etc).\n   *  @type function\n   *  @param {node} row \"TR\" element for the current row\n   *  @param {array} data Raw data array for this row\n   *  @param {int} dataIndex The index of this row in the internal aoData array\n   *\n   *  @dtopt Callbacks\n   *  @name DataTable.defaults.createdRow\n   *\n   *  @example\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"createdRow\": function( row, data, dataIndex ) {\n   *          // Bold the grade for all 'A' grade browsers\n   *          if ( data[4] == \"A\" )\n   *          {\n   *            $('td:eq(4)', row).html( '<b>A</b>' );\n   *          }\n   *        }\n   *      } );\n   *    } );\n   */\n  \"fnCreatedRow\": null,\n\n  /**\n   * This function is called on every 'draw' event, and allows you to\n   * dynamically modify any aspect you want about the created DOM.\n   *  @type function\n   *  @param {object} settings DataTables settings object\n   *\n   *  @dtopt Callbacks\n   *  @name DataTable.defaults.drawCallback\n   *\n   *  @example\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"drawCallback\": function( settings ) {\n   *          alert( 'DataTables has redrawn the table' );\n   *        }\n   *      } );\n   *    } );\n   */\n  \"fnDrawCallback\": null,\n\n  /**\n   * Identical to fnHeaderCallback() but for the table footer this function\n   * allows you to modify the table footer on every 'draw' event.\n   *  @type function\n   *  @param {node} foot \"TR\" element for the footer\n   *  @param {array} data Full table data (as derived from the original HTML)\n   *  @param {int} start Index for the current display starting point in the\n   *    display array\n   *  @param {int} end Index for the current display ending point in the\n   *    display array\n   *  @param {array int} display Index array to translate the visual position\n   *    to the full data array\n   *\n   *  @dtopt Callbacks\n   *  @name DataTable.defaults.footerCallback\n   *\n   *  @example\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"footerCallback\": function( tfoot, data, start, end, display ) {\n   *          tfoot.getElementsByTagName('th')[0].innerHTML = \"Starting index is \"+start;\n   *        }\n   *      } );\n   *    } )\n   */\n  \"fnFooterCallback\": null,\n\n  /**\n   * When rendering large numbers in the information element for the table\n   * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\n   * to have a comma separator for the 'thousands' units (e.g. 1 million is\n   * rendered as \"1,000,000\") to help readability for the end user. This\n   * function will override the default method DataTables uses.\n   *  @type function\n   *  @member\n   *  @param {int} toFormat number to be formatted\n   *  @returns {string} formatted string for DataTables to show the number\n   *\n   *  @dtopt Callbacks\n   *  @name DataTable.defaults.formatNumber\n   *\n   *  @example\n   *    // Format a number using a single quote for the separator (note that\n   *    // this can also be done with the language.thousands option)\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"formatNumber\": function ( toFormat ) {\n   *          return toFormat.toString().replace(\n   *            /\\B(?=(\\d{3})+(?!\\d))/g, \"'\"\n   *          );\n   *        };\n   *      } );\n   *    } );\n   */\n  \"fnFormatNumber\": function (toFormat) {\n    return toFormat.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.oLanguage.sThousands);\n  },\n\n  /**\n   * This function is called on every 'draw' event, and allows you to\n   * dynamically modify the header row. This can be used to calculate and\n   * display useful information about the table.\n   *  @type function\n   *  @param {node} head \"TR\" element for the header\n   *  @param {array} data Full table data (as derived from the original HTML)\n   *  @param {int} start Index for the current display starting point in the\n   *    display array\n   *  @param {int} end Index for the current display ending point in the\n   *    display array\n   *  @param {array int} display Index array to translate the visual position\n   *    to the full data array\n   *\n   *  @dtopt Callbacks\n   *  @name DataTable.defaults.headerCallback\n   *\n   *  @example\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"fheaderCallback\": function( head, data, start, end, display ) {\n   *          head.getElementsByTagName('th')[0].innerHTML = \"Displaying \"+(end-start)+\" records\";\n   *        }\n   *      } );\n   *    } )\n   */\n  \"fnHeaderCallback\": null,\n\n  /**\n   * The information element can be used to convey information about the current\n   * state of the table. Although the internationalisation options presented by\n   * DataTables are quite capable of dealing with most customisations, there may\n   * be times where you wish to customise the string further. This callback\n   * allows you to do exactly that.\n   *  @type function\n   *  @param {object} oSettings DataTables settings object\n   *  @param {int} start Starting position in data for the draw\n   *  @param {int} end End position in data for the draw\n   *  @param {int} max Total number of rows in the table (regardless of\n   *    filtering)\n   *  @param {int} total Total number of rows in the data set, after filtering\n   *  @param {string} pre The string that DataTables has formatted using it's\n   *    own rules\n   *  @returns {string} The string to be displayed in the information element.\n   *\n   *  @dtopt Callbacks\n   *  @name DataTable.defaults.infoCallback\n   *\n   *  @example\n   *    $('#example').dataTable( {\n   *      \"infoCallback\": function( settings, start, end, max, total, pre ) {\n   *        return start +\" to \"+ end;\n   *      }\n   *    } );\n   */\n  \"fnInfoCallback\": null,\n\n  /**\n   * Called when the table has been initialised. Normally DataTables will\n   * initialise sequentially and there will be no need for this function,\n   * however, this does not hold true when using external language information\n   * since that is obtained using an async XHR call.\n   *  @type function\n   *  @param {object} settings DataTables settings object\n   *  @param {object} json The JSON object request from the server - only\n   *    present if client-side Ajax sourced data is used\n   *\n   *  @dtopt Callbacks\n   *  @name DataTable.defaults.initComplete\n   *\n   *  @example\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"initComplete\": function(settings, json) {\n   *          alert( 'DataTables has finished its initialisation.' );\n   *        }\n   *      } );\n   *    } )\n   */\n  \"fnInitComplete\": null,\n\n  /**\n   * Called at the very start of each table draw and can be used to cancel the\n   * draw by returning false, any other return (including undefined) results in\n   * the full draw occurring).\n   *  @type function\n   *  @param {object} settings DataTables settings object\n   *  @returns {boolean} False will cancel the draw, anything else (including no\n   *    return) will allow it to complete.\n   *\n   *  @dtopt Callbacks\n   *  @name DataTable.defaults.preDrawCallback\n   *\n   *  @example\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"preDrawCallback\": function( settings ) {\n   *          if ( $('#test').val() == 1 ) {\n   *            return false;\n   *          }\n   *        }\n   *      } );\n   *    } );\n   */\n  \"fnPreDrawCallback\": null,\n\n  /**\n   * This function allows you to 'post process' each row after it have been\n   * generated for each table draw, but before it is rendered on screen. This\n   * function might be used for setting the row class name etc.\n   *  @type function\n   *  @param {node} row \"TR\" element for the current row\n   *  @param {array} data Raw data array for this row\n   *  @param {int} displayIndex The display index for the current table draw\n   *  @param {int} displayIndexFull The index of the data in the full list of\n   *    rows (after filtering)\n   *\n   *  @dtopt Callbacks\n   *  @name DataTable.defaults.rowCallback\n   *\n   *  @example\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"rowCallback\": function( row, data, displayIndex, displayIndexFull ) {\n   *          // Bold the grade for all 'A' grade browsers\n   *          if ( data[4] == \"A\" ) {\n   *            $('td:eq(4)', row).html( '<b>A</b>' );\n   *          }\n   *        }\n   *      } );\n   *    } );\n   */\n  \"fnRowCallback\": null,\n\n  /**\n   * __Deprecated__ The functionality provided by this parameter has now been\n   * superseded by that provided through `ajax`, which should be used instead.\n   *\n   * This parameter allows you to override the default function which obtains\n   * the data from the server so something more suitable for your application.\n   * For example you could use POST data, or pull information from a Gears or\n   * AIR database.\n   *  @type function\n   *  @member\n   *  @param {string} source HTTP source to obtain the data from (`ajax`)\n   *  @param {array} data A key/value pair object containing the data to send\n   *    to the server\n   *  @param {function} callback to be called on completion of the data get\n   *    process that will draw the data on the page.\n   *  @param {object} settings DataTables settings object\n   *\n   *  @dtopt Callbacks\n   *  @dtopt Server-side\n   *  @name DataTable.defaults.serverData\n   *\n   *  @deprecated 1.10. Please use `ajax` for this functionality now.\n   */\n  \"fnServerData\": null,\n\n  /**\n   * __Deprecated__ The functionality provided by this parameter has now been\n   * superseded by that provided through `ajax`, which should be used instead.\n   *\n   *  It is often useful to send extra data to the server when making an Ajax\n   * request - for example custom filtering information, and this callback\n   * function makes it trivial to send extra information to the server. The\n   * passed in parameter is the data set that has been constructed by\n   * DataTables, and you can add to this or modify it as you require.\n   *  @type function\n   *  @param {array} data Data array (array of objects which are name/value\n   *    pairs) that has been constructed by DataTables and will be sent to the\n   *    server. In the case of Ajax sourced data with server-side processing\n   *    this will be an empty array, for server-side processing there will be a\n   *    significant number of parameters!\n   *  @returns {undefined} Ensure that you modify the data array passed in,\n   *    as this is passed by reference.\n   *\n   *  @dtopt Callbacks\n   *  @dtopt Server-side\n   *  @name DataTable.defaults.serverParams\n   *\n   *  @deprecated 1.10. Please use `ajax` for this functionality now.\n   */\n  \"fnServerParams\": null,\n\n  /**\n   * Load the table state. With this function you can define from where, and how, the\n   * state of a table is loaded. By default DataTables will load from `localStorage`\n   * but you might wish to use a server-side database or cookies.\n   *  @type function\n   *  @member\n   *  @param {object} settings DataTables settings object\n   *  @param {object} callback Callback that can be executed when done. It\n   *    should be passed the loaded state object.\n   *  @return {object} The DataTables state object to be loaded\n   *\n   *  @dtopt Callbacks\n   *  @name DataTable.defaults.stateLoadCallback\n   *\n   *  @example\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"stateSave\": true,\n   *        \"stateLoadCallback\": function (settings, callback) {\n   *          $.ajax( {\n   *            \"url\": \"/state_load\",\n   *            \"dataType\": \"json\",\n   *            \"success\": function (json) {\n   *              callback( json );\n   *            }\n   *          } );\n   *        }\n   *      } );\n   *    } );\n   */\n  \"fnStateLoadCallback\": function (settings) {\n    try {\n      return JSON.parse((settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem('DataTables_' + settings.sInstance + '_' + location.pathname));\n    } catch (e) {\n      return {};\n    }\n  },\n\n  /**\n   * Callback which allows modification of the saved state prior to loading that state.\n   * This callback is called when the table is loading state from the stored data, but\n   * prior to the settings object being modified by the saved state. Note that for\n   * plug-in authors, you should use the `stateLoadParams` event to load parameters for\n   * a plug-in.\n   *  @type function\n   *  @param {object} settings DataTables settings object\n   *  @param {object} data The state object that is to be loaded\n   *\n   *  @dtopt Callbacks\n   *  @name DataTable.defaults.stateLoadParams\n   *\n   *  @example\n   *    // Remove a saved filter, so filtering is never loaded\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"stateSave\": true,\n   *        \"stateLoadParams\": function (settings, data) {\n   *          data.oSearch.sSearch = \"\";\n   *        }\n   *      } );\n   *    } );\n   *\n   *  @example\n   *    // Disallow state loading by returning false\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"stateSave\": true,\n   *        \"stateLoadParams\": function (settings, data) {\n   *          return false;\n   *        }\n   *      } );\n   *    } );\n   */\n  \"fnStateLoadParams\": null,\n\n  /**\n   * Callback that is called when the state has been loaded from the state saving method\n   * and the DataTables settings object has been modified as a result of the loaded state.\n   *  @type function\n   *  @param {object} settings DataTables settings object\n   *  @param {object} data The state object that was loaded\n   *\n   *  @dtopt Callbacks\n   *  @name DataTable.defaults.stateLoaded\n   *\n   *  @example\n   *    // Show an alert with the filtering value that was saved\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"stateSave\": true,\n   *        \"stateLoaded\": function (settings, data) {\n   *          alert( 'Saved filter was: '+data.oSearch.sSearch );\n   *        }\n   *      } );\n   *    } );\n   */\n  \"fnStateLoaded\": null,\n\n  /**\n   * Save the table state. This function allows you to define where and how the state\n   * information for the table is stored By default DataTables will use `localStorage`\n   * but you might wish to use a server-side database or cookies.\n   *  @type function\n   *  @member\n   *  @param {object} settings DataTables settings object\n   *  @param {object} data The state object to be saved\n   *\n   *  @dtopt Callbacks\n   *  @name DataTable.defaults.stateSaveCallback\n   *\n   *  @example\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"stateSave\": true,\n   *        \"stateSaveCallback\": function (settings, data) {\n   *          // Send an Ajax request to the server with the state object\n   *          $.ajax( {\n   *            \"url\": \"/state_save\",\n   *            \"data\": data,\n   *            \"dataType\": \"json\",\n   *            \"method\": \"POST\"\n   *            \"success\": function () {}\n   *          } );\n   *        }\n   *      } );\n   *    } );\n   */\n  \"fnStateSaveCallback\": function (settings, data) {\n    try {\n      (settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem('DataTables_' + settings.sInstance + '_' + location.pathname, JSON.stringify(data));\n    } catch (e) {}\n  },\n\n  /**\n   * Callback which allows modification of the state to be saved. Called when the table\n   * has changed state a new state save is required. This method allows modification of\n   * the state saving object prior to actually doing the save, including addition or\n   * other state properties or modification. Note that for plug-in authors, you should\n   * use the `stateSaveParams` event to save parameters for a plug-in.\n   *  @type function\n   *  @param {object} settings DataTables settings object\n   *  @param {object} data The state object to be saved\n   *\n   *  @dtopt Callbacks\n   *  @name DataTable.defaults.stateSaveParams\n   *\n   *  @example\n   *    // Remove a saved filter, so filtering is never saved\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"stateSave\": true,\n   *        \"stateSaveParams\": function (settings, data) {\n   *          data.oSearch.sSearch = \"\";\n   *        }\n   *      } );\n   *    } );\n   */\n  \"fnStateSaveParams\": null,\n\n  /**\n   * Duration for which the saved state information is considered valid. After this period\n   * has elapsed the state will be returned to the default.\n   * Value is given in seconds.\n   *  @type int\n   *  @default 7200 <i>(2 hours)</i>\n   *\n   *  @dtopt Options\n   *  @name DataTable.defaults.stateDuration\n   *\n   *  @example\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"stateDuration\": 60*60*24; // 1 day\n   *      } );\n   *    } )\n   */\n  \"iStateDuration\": 7200,\n\n  /**\n   * When enabled DataTables will not make a request to the server for the first\n   * page draw - rather it will use the data already on the page (no sorting etc\n   * will be applied to it), thus saving on an XHR at load time. `deferLoading`\n   * is used to indicate that deferred loading is required, but it is also used\n   * to tell DataTables how many records there are in the full table (allowing\n   * the information element and pagination to be displayed correctly). In the case\n   * where a filtering is applied to the table on initial load, this can be\n   * indicated by giving the parameter as an array, where the first element is\n   * the number of records available after filtering and the second element is the\n   * number of records without filtering (allowing the table information element\n   * to be shown correctly).\n   *  @type int | array\n   *  @default null\n   *\n   *  @dtopt Options\n   *  @name DataTable.defaults.deferLoading\n   *\n   *  @example\n   *    // 57 records available in the table, no filtering applied\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"serverSide\": true,\n   *        \"ajax\": \"scripts/server_processing.php\",\n   *        \"deferLoading\": 57\n   *      } );\n   *    } );\n   *\n   *  @example\n   *    // 57 records after filtering, 100 without filtering (an initial filter applied)\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"serverSide\": true,\n   *        \"ajax\": \"scripts/server_processing.php\",\n   *        \"deferLoading\": [ 57, 100 ],\n   *        \"search\": {\n   *          \"search\": \"my_filter\"\n   *        }\n   *      } );\n   *    } );\n   */\n  \"iDeferLoading\": null,\n\n  /**\n   * Number of rows to display on a single page when using pagination. If\n   * feature enabled (`lengthChange`) then the end user will be able to override\n   * this to a custom setting using a pop-up menu.\n   *  @type int\n   *  @default 10\n   *\n   *  @dtopt Options\n   *  @name DataTable.defaults.pageLength\n   *\n   *  @example\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"pageLength\": 50\n   *      } );\n   *    } )\n   */\n  \"iDisplayLength\": 10,\n\n  /**\n   * Define the starting point for data display when using DataTables with\n   * pagination. Note that this parameter is the number of records, rather than\n   * the page number, so if you have 10 records per page and want to start on\n   * the third page, it should be \"20\".\n   *  @type int\n   *  @default 0\n   *\n   *  @dtopt Options\n   *  @name DataTable.defaults.displayStart\n   *\n   *  @example\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"displayStart\": 20\n   *      } );\n   *    } )\n   */\n  \"iDisplayStart\": 0,\n\n  /**\n   * By default DataTables allows keyboard navigation of the table (sorting, paging,\n   * and filtering) by adding a `tabindex` attribute to the required elements. This\n   * allows you to tab through the controls and press the enter key to activate them.\n   * The tabindex is default 0, meaning that the tab follows the flow of the document.\n   * You can overrule this using this parameter if you wish. Use a value of -1 to\n   * disable built-in keyboard navigation.\n   *  @type int\n   *  @default 0\n   *\n   *  @dtopt Options\n   *  @name DataTable.defaults.tabIndex\n   *\n   *  @example\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"tabIndex\": 1\n   *      } );\n   *    } );\n   */\n  \"iTabIndex\": 0,\n\n  /**\n   * Classes that DataTables assigns to the various components and features\n   * that it adds to the HTML table. This allows classes to be configured\n   * during initialisation in addition to through the static\n   * {@link DataTable.ext.oStdClasses} object).\n   *  @namespace\n   *  @name DataTable.defaults.classes\n   */\n  \"oClasses\": {},\n\n  /**\n   * All strings that DataTables uses in the user interface that it creates\n   * are defined in this object, allowing you to modified them individually or\n   * completely replace them all as required.\n   *  @namespace\n   *  @name DataTable.defaults.language\n   */\n  \"oLanguage\": {\n    /**\n     * Strings that are used for WAI-ARIA labels and controls only (these are not\n     * actually visible on the page, but will be read by screenreaders, and thus\n     * must be internationalised as well).\n     *  @namespace\n     *  @name DataTable.defaults.language.aria\n     */\n    \"oAria\": {\n      /**\n       * ARIA label that is added to the table headers when the column may be\n       * sorted ascending by activing the column (click or return when focused).\n       * Note that the column header is prefixed to this string.\n       *  @type string\n       *  @default : activate to sort column ascending\n       *\n       *  @dtopt Language\n       *  @name DataTable.defaults.language.aria.sortAscending\n       *\n       *  @example\n       *    $(document).ready( function() {\n       *      $('#example').dataTable( {\n       *        \"language\": {\n       *          \"aria\": {\n       *            \"sortAscending\": \" - click/return to sort ascending\"\n       *          }\n       *        }\n       *      } );\n       *    } );\n       */\n      \"sSortAscending\": \": activate to sort column ascending\",\n\n      /**\n       * ARIA label that is added to the table headers when the column may be\n       * sorted descending by activing the column (click or return when focused).\n       * Note that the column header is prefixed to this string.\n       *  @type string\n       *  @default : activate to sort column ascending\n       *\n       *  @dtopt Language\n       *  @name DataTable.defaults.language.aria.sortDescending\n       *\n       *  @example\n       *    $(document).ready( function() {\n       *      $('#example').dataTable( {\n       *        \"language\": {\n       *          \"aria\": {\n       *            \"sortDescending\": \" - click/return to sort descending\"\n       *          }\n       *        }\n       *      } );\n       *    } );\n       */\n      \"sSortDescending\": \": activate to sort column descending\"\n    },\n\n    /**\n     * Pagination string used by DataTables for the built-in pagination\n     * control types.\n     *  @namespace\n     *  @name DataTable.defaults.language.paginate\n     */\n    \"oPaginate\": {\n      /**\n       * Text to use when using the 'full_numbers' type of pagination for the\n       * button to take the user to the first page.\n       *  @type string\n       *  @default First\n       *\n       *  @dtopt Language\n       *  @name DataTable.defaults.language.paginate.first\n       *\n       *  @example\n       *    $(document).ready( function() {\n       *      $('#example').dataTable( {\n       *        \"language\": {\n       *          \"paginate\": {\n       *            \"first\": \"First page\"\n       *          }\n       *        }\n       *      } );\n       *    } );\n       */\n      \"sFirst\": \"First\",\n\n      /**\n       * Text to use when using the 'full_numbers' type of pagination for the\n       * button to take the user to the last page.\n       *  @type string\n       *  @default Last\n       *\n       *  @dtopt Language\n       *  @name DataTable.defaults.language.paginate.last\n       *\n       *  @example\n       *    $(document).ready( function() {\n       *      $('#example').dataTable( {\n       *        \"language\": {\n       *          \"paginate\": {\n       *            \"last\": \"Last page\"\n       *          }\n       *        }\n       *      } );\n       *    } );\n       */\n      \"sLast\": \"Last\",\n\n      /**\n       * Text to use for the 'next' pagination button (to take the user to the\n       * next page).\n       *  @type string\n       *  @default Next\n       *\n       *  @dtopt Language\n       *  @name DataTable.defaults.language.paginate.next\n       *\n       *  @example\n       *    $(document).ready( function() {\n       *      $('#example').dataTable( {\n       *        \"language\": {\n       *          \"paginate\": {\n       *            \"next\": \"Next page\"\n       *          }\n       *        }\n       *      } );\n       *    } );\n       */\n      \"sNext\": \"Next\",\n\n      /**\n       * Text to use for the 'previous' pagination button (to take the user to\n       * the previous page).\n       *  @type string\n       *  @default Previous\n       *\n       *  @dtopt Language\n       *  @name DataTable.defaults.language.paginate.previous\n       *\n       *  @example\n       *    $(document).ready( function() {\n       *      $('#example').dataTable( {\n       *        \"language\": {\n       *          \"paginate\": {\n       *            \"previous\": \"Previous page\"\n       *          }\n       *        }\n       *      } );\n       *    } );\n       */\n      \"sPrevious\": \"Previous\"\n    },\n\n    /**\n     * This string is shown in preference to `zeroRecords` when the table is\n     * empty of data (regardless of filtering). Note that this is an optional\n     * parameter - if it is not given, the value of `zeroRecords` will be used\n     * instead (either the default or given value).\n     *  @type string\n     *  @default No data available in table\n     *\n     *  @dtopt Language\n     *  @name DataTable.defaults.language.emptyTable\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"language\": {\n     *          \"emptyTable\": \"No data available in table\"\n     *        }\n     *      } );\n     *    } );\n     */\n    \"sEmptyTable\": \"No data available in table\",\n\n    /**\n     * This string gives information to the end user about the information\n     * that is current on display on the page. The following tokens can be\n     * used in the string and will be dynamically replaced as the table\n     * display updates. This tokens can be placed anywhere in the string, or\n     * removed as needed by the language requires:\n     *\n     * * `\\_START\\_` - Display index of the first record on the current page\n     * * `\\_END\\_` - Display index of the last record on the current page\n     * * `\\_TOTAL\\_` - Number of records in the table after filtering\n     * * `\\_MAX\\_` - Number of records in the table without filtering\n     * * `\\_PAGE\\_` - Current page number\n     * * `\\_PAGES\\_` - Total number of pages of data in the table\n     *\n     *  @type string\n     *  @default Showing _START_ to _END_ of _TOTAL_ entries\n     *\n     *  @dtopt Language\n     *  @name DataTable.defaults.language.info\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"language\": {\n     *          \"info\": \"Showing page _PAGE_ of _PAGES_\"\n     *        }\n     *      } );\n     *    } );\n     */\n    \"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ entries\",\n\n    /**\n     * Display information string for when the table is empty. Typically the\n     * format of this string should match `info`.\n     *  @type string\n     *  @default Showing 0 to 0 of 0 entries\n     *\n     *  @dtopt Language\n     *  @name DataTable.defaults.language.infoEmpty\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"language\": {\n     *          \"infoEmpty\": \"No entries to show\"\n     *        }\n     *      } );\n     *    } );\n     */\n    \"sInfoEmpty\": \"Showing 0 to 0 of 0 entries\",\n\n    /**\n     * When a user filters the information in a table, this string is appended\n     * to the information (`info`) to give an idea of how strong the filtering\n     * is. The variable _MAX_ is dynamically updated.\n     *  @type string\n     *  @default (filtered from _MAX_ total entries)\n     *\n     *  @dtopt Language\n     *  @name DataTable.defaults.language.infoFiltered\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"language\": {\n     *          \"infoFiltered\": \" - filtering from _MAX_ records\"\n     *        }\n     *      } );\n     *    } );\n     */\n    \"sInfoFiltered\": \"(filtered from _MAX_ total entries)\",\n\n    /**\n     * If can be useful to append extra information to the info string at times,\n     * and this variable does exactly that. This information will be appended to\n     * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\n     * being used) at all times.\n     *  @type string\n     *  @default <i>Empty string</i>\n     *\n     *  @dtopt Language\n     *  @name DataTable.defaults.language.infoPostFix\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"language\": {\n     *          \"infoPostFix\": \"All records shown are derived from real information.\"\n     *        }\n     *      } );\n     *    } );\n     */\n    \"sInfoPostFix\": \"\",\n\n    /**\n     * This decimal place operator is a little different from the other\n     * language options since DataTables doesn't output floating point\n     * numbers, so it won't ever use this for display of a number. Rather,\n     * what this parameter does is modify the sort methods of the table so\n     * that numbers which are in a format which has a character other than\n     * a period (`.`) as a decimal place will be sorted numerically.\n     *\n     * Note that numbers with different decimal places cannot be shown in\n     * the same table and still be sortable, the table must be consistent.\n     * However, multiple different tables on the page can use different\n     * decimal place characters.\n     *  @type string\n     *  @default \n     *\n     *  @dtopt Language\n     *  @name DataTable.defaults.language.decimal\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"language\": {\n     *          \"decimal\": \",\"\n     *          \"thousands\": \".\"\n     *        }\n     *      } );\n     *    } );\n     */\n    \"sDecimal\": \"\",\n\n    /**\n     * DataTables has a build in number formatter (`formatNumber`) which is\n     * used to format large numbers that are used in the table information.\n     * By default a comma is used, but this can be trivially changed to any\n     * character you wish with this parameter.\n     *  @type string\n     *  @default ,\n     *\n     *  @dtopt Language\n     *  @name DataTable.defaults.language.thousands\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"language\": {\n     *          \"thousands\": \"'\"\n     *        }\n     *      } );\n     *    } );\n     */\n    \"sThousands\": \",\",\n\n    /**\n     * Detail the action that will be taken when the drop down menu for the\n     * pagination length option is changed. The '_MENU_' variable is replaced\n     * with a default select list of 10, 25, 50 and 100, and can be replaced\n     * with a custom select box if required.\n     *  @type string\n     *  @default Show _MENU_ entries\n     *\n     *  @dtopt Language\n     *  @name DataTable.defaults.language.lengthMenu\n     *\n     *  @example\n     *    // Language change only\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"language\": {\n     *          \"lengthMenu\": \"Display _MENU_ records\"\n     *        }\n     *      } );\n     *    } );\n     *\n     *  @example\n     *    // Language and options change\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"language\": {\n     *          \"lengthMenu\": 'Display <select>'+\n     *            '<option value=\"10\">10</option>'+\n     *            '<option value=\"20\">20</option>'+\n     *            '<option value=\"30\">30</option>'+\n     *            '<option value=\"40\">40</option>'+\n     *            '<option value=\"50\">50</option>'+\n     *            '<option value=\"-1\">All</option>'+\n     *            '</select> records'\n     *        }\n     *      } );\n     *    } );\n     */\n    \"sLengthMenu\": \"Show _MENU_ entries\",\n\n    /**\n     * When using Ajax sourced data and during the first draw when DataTables is\n     * gathering the data, this message is shown in an empty row in the table to\n     * indicate to the end user the the data is being loaded. Note that this\n     * parameter is not used when loading data by server-side processing, just\n     * Ajax sourced data with client-side processing.\n     *  @type string\n     *  @default Loading...\n     *\n     *  @dtopt Language\n     *  @name DataTable.defaults.language.loadingRecords\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"language\": {\n     *          \"loadingRecords\": \"Please wait - loading...\"\n     *        }\n     *      } );\n     *    } );\n     */\n    \"sLoadingRecords\": \"Loading...\",\n\n    /**\n     * Text which is displayed when the table is processing a user action\n     * (usually a sort command or similar).\n     *  @type string\n     *\n     *  @dtopt Language\n     *  @name DataTable.defaults.language.processing\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"language\": {\n     *          \"processing\": \"DataTables is currently busy\"\n     *        }\n     *      } );\n     *    } );\n     */\n    \"sProcessing\": \"\",\n\n    /**\n     * Details the actions that will be taken when the user types into the\n     * filtering input text box. The variable \"_INPUT_\", if used in the string,\n     * is replaced with the HTML text box for the filtering input allowing\n     * control over where it appears in the string. If \"_INPUT_\" is not given\n     * then the input box is appended to the string automatically.\n     *  @type string\n     *  @default Search:\n     *\n     *  @dtopt Language\n     *  @name DataTable.defaults.language.search\n     *\n     *  @example\n     *    // Input text box will be appended at the end automatically\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"language\": {\n     *          \"search\": \"Filter records:\"\n     *        }\n     *      } );\n     *    } );\n     *\n     *  @example\n     *    // Specify where the filter should appear\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"language\": {\n     *          \"search\": \"Apply filter _INPUT_ to table\"\n     *        }\n     *      } );\n     *    } );\n     */\n    \"sSearch\": \"Search:\",\n\n    /**\n     * Assign a `placeholder` attribute to the search `input` element\n     *  @type string\n     *  @default \n     *\n     *  @dtopt Language\n     *  @name DataTable.defaults.language.searchPlaceholder\n     */\n    \"sSearchPlaceholder\": \"\",\n\n    /**\n     * All of the language information can be stored in a file on the\n     * server-side, which DataTables will look up if this parameter is passed.\n     * It must store the URL of the language file, which is in a JSON format,\n     * and the object has the same properties as the oLanguage object in the\n     * initialiser object (i.e. the above parameters). Please refer to one of\n     * the example language files to see how this works in action.\n     *  @type string\n     *  @default <i>Empty string - i.e. disabled</i>\n     *\n     *  @dtopt Language\n     *  @name DataTable.defaults.language.url\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"language\": {\n     *          \"url\": \"http://www.sprymedia.co.uk/dataTables/lang.txt\"\n     *        }\n     *      } );\n     *    } );\n     */\n    \"sUrl\": \"\",\n\n    /**\n     * Text shown inside the table records when the is no information to be\n     * displayed after filtering. `emptyTable` is shown when there is simply no\n     * information in the table at all (regardless of filtering).\n     *  @type string\n     *  @default No matching records found\n     *\n     *  @dtopt Language\n     *  @name DataTable.defaults.language.zeroRecords\n     *\n     *  @example\n     *    $(document).ready( function() {\n     *      $('#example').dataTable( {\n     *        \"language\": {\n     *          \"zeroRecords\": \"No records to display\"\n     *        }\n     *      } );\n     *    } );\n     */\n    \"sZeroRecords\": \"No matching records found\"\n  },\n\n  /**\n   * This parameter allows you to have define the global filtering state at\n   * initialisation time. As an object the `search` parameter must be\n   * defined, but all other parameters are optional. When `regex` is true,\n   * the search string will be treated as a regular expression, when false\n   * (default) it will be treated as a straight string. When `smart`\n   * DataTables will use it's smart filtering methods (to word match at\n   * any point in the data), when false this will not be done.\n   *  @namespace\n   *  @extends DataTable.models.oSearch\n   *\n   *  @dtopt Options\n   *  @name DataTable.defaults.search\n   *\n   *  @example\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"search\": {\"search\": \"Initial search\"}\n   *      } );\n   *    } )\n   */\n  \"oSearch\": $.extend({}, DataTable.models.oSearch),\n\n  /**\n   * __Deprecated__ The functionality provided by this parameter has now been\n   * superseded by that provided through `ajax`, which should be used instead.\n   *\n   * By default DataTables will look for the property `data` (or `aaData` for\n   * compatibility with DataTables 1.9-) when obtaining data from an Ajax\n   * source or for server-side processing - this parameter allows that\n   * property to be changed. You can use Javascript dotted object notation to\n   * get a data source for multiple levels of nesting.\n   *  @type string\n   *  @default data\n   *\n   *  @dtopt Options\n   *  @dtopt Server-side\n   *  @name DataTable.defaults.ajaxDataProp\n   *\n   *  @deprecated 1.10. Please use `ajax` for this functionality now.\n   */\n  \"sAjaxDataProp\": \"data\",\n\n  /**\n   * __Deprecated__ The functionality provided by this parameter has now been\n   * superseded by that provided through `ajax`, which should be used instead.\n   *\n   * You can instruct DataTables to load data from an external\n   * source using this parameter (use aData if you want to pass data in you\n   * already have). Simply provide a url a JSON object can be obtained from.\n   *  @type string\n   *  @default null\n   *\n   *  @dtopt Options\n   *  @dtopt Server-side\n   *  @name DataTable.defaults.ajaxSource\n   *\n   *  @deprecated 1.10. Please use `ajax` for this functionality now.\n   */\n  \"sAjaxSource\": null,\n\n  /**\n   * This initialisation variable allows you to specify exactly where in the\n   * DOM you want DataTables to inject the various controls it adds to the page\n   * (for example you might want the pagination controls at the top of the\n   * table). DIV elements (with or without a custom class) can also be added to\n   * aid styling. The follow syntax is used:\n   *   <ul>\n   *     <li>The following options are allowed:\n   *       <ul>\n   *         <li>'l' - Length changing</li>\n   *         <li>'f' - Filtering input</li>\n   *         <li>'t' - The table!</li>\n   *         <li>'i' - Information</li>\n   *         <li>'p' - Pagination</li>\n   *         <li>'r' - pRocessing</li>\n   *       </ul>\n   *     </li>\n   *     <li>The following constants are allowed:\n   *       <ul>\n   *         <li>'H' - jQueryUI theme \"header\" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>\n   *         <li>'F' - jQueryUI theme \"footer\" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>\n   *       </ul>\n   *     </li>\n   *     <li>The following syntax is expected:\n   *       <ul>\n   *         <li>'&lt;' and '&gt;' - div elements</li>\n   *         <li>'&lt;\"class\" and '&gt;' - div with a class</li>\n   *         <li>'&lt;\"#id\" and '&gt;' - div with an ID</li>\n   *       </ul>\n   *     </li>\n   *     <li>Examples:\n   *       <ul>\n   *         <li>'&lt;\"wrapper\"flipt&gt;'</li>\n   *         <li>'&lt;lf&lt;t&gt;ip&gt;'</li>\n   *       </ul>\n   *     </li>\n   *   </ul>\n   *  @type string\n   *  @default lfrtip <i>(when `jQueryUI` is false)</i> <b>or</b>\n   *    <\"H\"lfr>t<\"F\"ip> <i>(when `jQueryUI` is true)</i>\n   *\n   *  @dtopt Options\n   *  @name DataTable.defaults.dom\n   *\n   *  @example\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"dom\": '&lt;\"top\"i&gt;rt&lt;\"bottom\"flp&gt;&lt;\"clear\"&gt;'\n   *      } );\n   *    } );\n   */\n  \"sDom\": \"lfrtip\",\n\n  /**\n   * Search delay option. This will throttle full table searches that use the\n   * DataTables provided search input element (it does not effect calls to\n   * `dt-api search()`, providing a delay before the search is made.\n   *  @type integer\n   *  @default 0\n   *\n   *  @dtopt Options\n   *  @name DataTable.defaults.searchDelay\n   *\n   *  @example\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"searchDelay\": 200\n   *      } );\n   *    } )\n   */\n  \"searchDelay\": null,\n\n  /**\n   * DataTables features six different built-in options for the buttons to\n   * display for pagination control:\n   *\n   * * `numbers` - Page number buttons only\n   * * `simple` - 'Previous' and 'Next' buttons only\n   * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\n   * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\n   * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\n   * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers\n   *  \n   * Further methods can be added using {@link DataTable.ext.oPagination}.\n   *  @type string\n   *  @default simple_numbers\n   *\n   *  @dtopt Options\n   *  @name DataTable.defaults.pagingType\n   *\n   *  @example\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"pagingType\": \"full_numbers\"\n   *      } );\n   *    } )\n   */\n  \"sPaginationType\": \"simple_numbers\",\n\n  /**\n   * Enable horizontal scrolling. When a table is too wide to fit into a\n   * certain layout, or you have a large number of columns in the table, you\n   * can enable x-scrolling to show the table in a viewport, which can be\n   * scrolled. This property can be `true` which will allow the table to\n   * scroll horizontally when needed, or any CSS unit, or a number (in which\n   * case it will be treated as a pixel measurement). Setting as simply `true`\n   * is recommended.\n   *  @type boolean|string\n   *  @default <i>blank string - i.e. disabled</i>\n   *\n   *  @dtopt Features\n   *  @name DataTable.defaults.scrollX\n   *\n   *  @example\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"scrollX\": true,\n   *        \"scrollCollapse\": true\n   *      } );\n   *    } );\n   */\n  \"sScrollX\": \"\",\n\n  /**\n   * This property can be used to force a DataTable to use more width than it\n   * might otherwise do when x-scrolling is enabled. For example if you have a\n   * table which requires to be well spaced, this parameter is useful for\n   * \"over-sizing\" the table, and thus forcing scrolling. This property can by\n   * any CSS unit, or a number (in which case it will be treated as a pixel\n   * measurement).\n   *  @type string\n   *  @default <i>blank string - i.e. disabled</i>\n   *\n   *  @dtopt Options\n   *  @name DataTable.defaults.scrollXInner\n   *\n   *  @example\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"scrollX\": \"100%\",\n   *        \"scrollXInner\": \"110%\"\n   *      } );\n   *    } );\n   */\n  \"sScrollXInner\": \"\",\n\n  /**\n   * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\n   * to the given height, and enable scrolling for any data which overflows the\n   * current viewport. This can be used as an alternative to paging to display\n   * a lot of data in a small area (although paging and scrolling can both be\n   * enabled at the same time). This property can be any CSS unit, or a number\n   * (in which case it will be treated as a pixel measurement).\n   *  @type string\n   *  @default <i>blank string - i.e. disabled</i>\n   *\n   *  @dtopt Features\n   *  @name DataTable.defaults.scrollY\n   *\n   *  @example\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"scrollY\": \"200px\",\n   *        \"paginate\": false\n   *      } );\n   *    } );\n   */\n  \"sScrollY\": \"\",\n\n  /**\n   * __Deprecated__ The functionality provided by this parameter has now been\n   * superseded by that provided through `ajax`, which should be used instead.\n   *\n   * Set the HTTP method that is used to make the Ajax call for server-side\n   * processing or Ajax sourced data.\n   *  @type string\n   *  @default GET\n   *\n   *  @dtopt Options\n   *  @dtopt Server-side\n   *  @name DataTable.defaults.serverMethod\n   *\n   *  @deprecated 1.10. Please use `ajax` for this functionality now.\n   */\n  \"sServerMethod\": \"GET\",\n\n  /**\n   * DataTables makes use of renderers when displaying HTML elements for\n   * a table. These renderers can be added or modified by plug-ins to\n   * generate suitable mark-up for a site. For example the Bootstrap\n   * integration plug-in for DataTables uses a paging button renderer to\n   * display pagination buttons in the mark-up required by Bootstrap.\n   *\n   * For further information about the renderers available see\n   * DataTable.ext.renderer\n   *  @type string|object\n   *  @default null\n   *\n   *  @name DataTable.defaults.renderer\n   *\n   */\n  \"renderer\": null,\n\n  /**\n   * Set the data property name that DataTables should use to get a row's id\n   * to set as the `id` property in the node.\n   *  @type string\n   *  @default DT_RowId\n   *\n   *  @name DataTable.defaults.rowId\n   */\n  \"rowId\": \"DT_RowId\"\n};\n\n_fnHungarianMap(DataTable.defaults);\n/*\n * Developer note - See note in model.defaults.js about the use of Hungarian\n * notation and camel case.\n */\n\n/**\n * Column options that can be given to DataTables at initialisation time.\n *  @namespace\n */\n\n\nDataTable.defaults.column = {\n  /**\n   * Define which column(s) an order will occur on for this column. This\n   * allows a column's ordering to take multiple columns into account when\n   * doing a sort or use the data from a different column. For example first\n   * name / last name columns make sense to do a multi-column sort over the\n   * two columns.\n   *  @type array|int\n   *  @default null <i>Takes the value of the column index automatically</i>\n   *\n   *  @name DataTable.defaults.column.orderData\n   *  @dtopt Columns\n   *\n   *  @example\n   *    // Using `columnDefs`\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"columnDefs\": [\n   *          { \"orderData\": [ 0, 1 ], \"targets\": [ 0 ] },\n   *          { \"orderData\": [ 1, 0 ], \"targets\": [ 1 ] },\n   *          { \"orderData\": 2, \"targets\": [ 2 ] }\n   *        ]\n   *      } );\n   *    } );\n   *\n   *  @example\n   *    // Using `columns`\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"columns\": [\n   *          { \"orderData\": [ 0, 1 ] },\n   *          { \"orderData\": [ 1, 0 ] },\n   *          { \"orderData\": 2 },\n   *          null,\n   *          null\n   *        ]\n   *      } );\n   *    } );\n   */\n  \"aDataSort\": null,\n  \"iDataSort\": -1,\n\n  /**\n   * You can control the default ordering direction, and even alter the\n   * behaviour of the sort handler (i.e. only allow ascending ordering etc)\n   * using this parameter.\n   *  @type array\n   *  @default [ 'asc', 'desc' ]\n   *\n   *  @name DataTable.defaults.column.orderSequence\n   *  @dtopt Columns\n   *\n   *  @example\n   *    // Using `columnDefs`\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"columnDefs\": [\n   *          { \"orderSequence\": [ \"asc\" ], \"targets\": [ 1 ] },\n   *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ], \"targets\": [ 2 ] },\n   *          { \"orderSequence\": [ \"desc\" ], \"targets\": [ 3 ] }\n   *        ]\n   *      } );\n   *    } );\n   *\n   *  @example\n   *    // Using `columns`\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"columns\": [\n   *          null,\n   *          { \"orderSequence\": [ \"asc\" ] },\n   *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ] },\n   *          { \"orderSequence\": [ \"desc\" ] },\n   *          null\n   *        ]\n   *      } );\n   *    } );\n   */\n  \"asSorting\": ['asc', 'desc'],\n\n  /**\n   * Enable or disable filtering on the data in this column.\n   *  @type boolean\n   *  @default true\n   *\n   *  @name DataTable.defaults.column.searchable\n   *  @dtopt Columns\n   *\n   *  @example\n   *    // Using `columnDefs`\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"columnDefs\": [\n   *          { \"searchable\": false, \"targets\": [ 0 ] }\n   *        ] } );\n   *    } );\n   *\n   *  @example\n   *    // Using `columns`\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"columns\": [\n   *          { \"searchable\": false },\n   *          null,\n   *          null,\n   *          null,\n   *          null\n   *        ] } );\n   *    } );\n   */\n  \"bSearchable\": true,\n\n  /**\n   * Enable or disable ordering on this column.\n   *  @type boolean\n   *  @default true\n   *\n   *  @name DataTable.defaults.column.orderable\n   *  @dtopt Columns\n   *\n   *  @example\n   *    // Using `columnDefs`\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"columnDefs\": [\n   *          { \"orderable\": false, \"targets\": [ 0 ] }\n   *        ] } );\n   *    } );\n   *\n   *  @example\n   *    // Using `columns`\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"columns\": [\n   *          { \"orderable\": false },\n   *          null,\n   *          null,\n   *          null,\n   *          null\n   *        ] } );\n   *    } );\n   */\n  \"bSortable\": true,\n\n  /**\n   * Enable or disable the display of this column.\n   *  @type boolean\n   *  @default true\n   *\n   *  @name DataTable.defaults.column.visible\n   *  @dtopt Columns\n   *\n   *  @example\n   *    // Using `columnDefs`\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"columnDefs\": [\n   *          { \"visible\": false, \"targets\": [ 0 ] }\n   *        ] } );\n   *    } );\n   *\n   *  @example\n   *    // Using `columns`\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"columns\": [\n   *          { \"visible\": false },\n   *          null,\n   *          null,\n   *          null,\n   *          null\n   *        ] } );\n   *    } );\n   */\n  \"bVisible\": true,\n\n  /**\n   * Developer definable function that is called whenever a cell is created (Ajax source,\n   * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n   * allowing you to modify the DOM element (add background colour for example) when the\n   * element is available.\n   *  @type function\n   *  @param {element} td The TD node that has been created\n   *  @param {*} cellData The Data for the cell\n   *  @param {array|object} rowData The data for the whole row\n   *  @param {int} row The row index for the aoData data store\n   *  @param {int} col The column index for aoColumns\n   *\n   *  @name DataTable.defaults.column.createdCell\n   *  @dtopt Columns\n   *\n   *  @example\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"columnDefs\": [ {\n   *          \"targets\": [3],\n   *          \"createdCell\": function (td, cellData, rowData, row, col) {\n   *            if ( cellData == \"1.7\" ) {\n   *              $(td).css('color', 'blue')\n   *            }\n   *          }\n   *        } ]\n   *      });\n   *    } );\n   */\n  \"fnCreatedCell\": null,\n\n  /**\n   * This parameter has been replaced by `data` in DataTables to ensure naming\n   * consistency. `dataProp` can still be used, as there is backwards\n   * compatibility in DataTables for this option, but it is strongly\n   * recommended that you use `data` in preference to `dataProp`.\n   *  @name DataTable.defaults.column.dataProp\n   */\n\n  /**\n   * This property can be used to read data from any data source property,\n   * including deeply nested objects / properties. `data` can be given in a\n   * number of different ways which effect its behaviour:\n   *\n   * * `integer` - treated as an array index for the data source. This is the\n   *   default that DataTables uses (incrementally increased for each column).\n   * * `string` - read an object property from the data source. There are\n   *   three 'special' options that can be used in the string to alter how\n   *   DataTables reads the data from the source object:\n   *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n   *      Javascript to read from nested objects, so to can the options\n   *      specified in `data`. For example: `browser.version` or\n   *      `browser.name`. If your object parameter name contains a period, use\n   *      `\\\\` to escape it - i.e. `first\\\\.name`.\n   *    * `[]` - Array notation. DataTables can automatically combine data\n   *      from and array source, joining the data with the characters provided\n   *      between the two brackets. For example: `name[, ]` would provide a\n   *      comma-space separated list from the source array. If no characters\n   *      are provided between the brackets, the original array source is\n   *      returned.\n   *    * `()` - Function notation. Adding `()` to the end of a parameter will\n   *      execute a function of the name given. For example: `browser()` for a\n   *      simple function on the data source, `browser.version()` for a\n   *      function in a nested property or even `browser().version` to get an\n   *      object property if the function called returns an object. Note that\n   *      function notation is recommended for use in `render` rather than\n   *      `data` as it is much simpler to use as a renderer.\n   * * `null` - use the original data source for the row rather than plucking\n   *   data directly from it. This action has effects on two other\n   *   initialisation options:\n   *    * `defaultContent` - When null is given as the `data` option and\n   *      `defaultContent` is specified for the column, the value defined by\n   *      `defaultContent` will be used for the cell.\n   *    * `render` - When null is used for the `data` option and the `render`\n   *      option is specified for the column, the whole data source for the\n   *      row is used for the renderer.\n   * * `function` - the function given will be executed whenever DataTables\n   *   needs to set or get the data for a cell in the column. The function\n   *   takes three parameters:\n   *    * Parameters:\n   *      * `{array|object}` The data source for the row\n   *      * `{string}` The type call data requested - this will be 'set' when\n   *        setting data or 'filter', 'display', 'type', 'sort' or undefined\n   *        when gathering data. Note that when `undefined` is given for the\n   *        type DataTables expects to get the raw data for the object back<\n   *      * `{*}` Data to set when the second parameter is 'set'.\n   *    * Return:\n   *      * The return value from the function is not required when 'set' is\n   *        the type of call, but otherwise the return is what will be used\n   *        for the data requested.\n   *\n   * Note that `data` is a getter and setter option. If you just require\n   * formatting of data for output, you will likely want to use `render` which\n   * is simply a getter and thus simpler to use.\n   *\n   * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\n   * name change reflects the flexibility of this property and is consistent\n   * with the naming of mRender. If 'mDataProp' is given, then it will still\n   * be used by DataTables, as it automatically maps the old name to the new\n   * if required.\n   *\n   *  @type string|int|function|null\n   *  @default null <i>Use automatically calculated column index</i>\n   *\n   *  @name DataTable.defaults.column.data\n   *  @dtopt Columns\n   *\n   *  @example\n   *    // Read table data from objects\n   *    // JSON structure for each row:\n   *    //   {\n   *    //      \"engine\": {value},\n   *    //      \"browser\": {value},\n   *    //      \"platform\": {value},\n   *    //      \"version\": {value},\n   *    //      \"grade\": {value}\n   *    //   }\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"ajaxSource\": \"sources/objects.txt\",\n   *        \"columns\": [\n   *          { \"data\": \"engine\" },\n   *          { \"data\": \"browser\" },\n   *          { \"data\": \"platform\" },\n   *          { \"data\": \"version\" },\n   *          { \"data\": \"grade\" }\n   *        ]\n   *      } );\n   *    } );\n   *\n   *  @example\n   *    // Read information from deeply nested objects\n   *    // JSON structure for each row:\n   *    //   {\n   *    //      \"engine\": {value},\n   *    //      \"browser\": {value},\n   *    //      \"platform\": {\n   *    //         \"inner\": {value}\n   *    //      },\n   *    //      \"details\": [\n   *    //         {value}, {value}\n   *    //      ]\n   *    //   }\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"ajaxSource\": \"sources/deep.txt\",\n   *        \"columns\": [\n   *          { \"data\": \"engine\" },\n   *          { \"data\": \"browser\" },\n   *          { \"data\": \"platform.inner\" },\n   *          { \"data\": \"details.0\" },\n   *          { \"data\": \"details.1\" }\n   *        ]\n   *      } );\n   *    } );\n   *\n   *  @example\n   *    // Using `data` as a function to provide different information for\n   *    // sorting, filtering and display. In this case, currency (price)\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"columnDefs\": [ {\n   *          \"targets\": [ 0 ],\n   *          \"data\": function ( source, type, val ) {\n   *            if (type === 'set') {\n   *              source.price = val;\n   *              // Store the computed display and filter values for efficiency\n   *              source.price_display = val==\"\" ? \"\" : \"$\"+numberFormat(val);\n   *              source.price_filter  = val==\"\" ? \"\" : \"$\"+numberFormat(val)+\" \"+val;\n   *              return;\n   *            }\n   *            else if (type === 'display') {\n   *              return source.price_display;\n   *            }\n   *            else if (type === 'filter') {\n   *              return source.price_filter;\n   *            }\n   *            // 'sort', 'type' and undefined all just use the integer\n   *            return source.price;\n   *          }\n   *        } ]\n   *      } );\n   *    } );\n   *\n   *  @example\n   *    // Using default content\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"columnDefs\": [ {\n   *          \"targets\": [ 0 ],\n   *          \"data\": null,\n   *          \"defaultContent\": \"Click to edit\"\n   *        } ]\n   *      } );\n   *    } );\n   *\n   *  @example\n   *    // Using array notation - outputting a list from an array\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"columnDefs\": [ {\n   *          \"targets\": [ 0 ],\n   *          \"data\": \"name[, ]\"\n   *        } ]\n   *      } );\n   *    } );\n   *\n   */\n  \"mData\": null,\n\n  /**\n   * This property is the rendering partner to `data` and it is suggested that\n   * when you want to manipulate data for display (including filtering,\n   * sorting etc) without altering the underlying data for the table, use this\n   * property. `render` can be considered to be the the read only companion to\n   * `data` which is read / write (then as such more complex). Like `data`\n   * this option can be given in a number of different ways to effect its\n   * behaviour:\n   *\n   * * `integer` - treated as an array index for the data source. This is the\n   *   default that DataTables uses (incrementally increased for each column).\n   * * `string` - read an object property from the data source. There are\n   *   three 'special' options that can be used in the string to alter how\n   *   DataTables reads the data from the source object:\n   *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n   *      Javascript to read from nested objects, so to can the options\n   *      specified in `data`. For example: `browser.version` or\n   *      `browser.name`. If your object parameter name contains a period, use\n   *      `\\\\` to escape it - i.e. `first\\\\.name`.\n   *    * `[]` - Array notation. DataTables can automatically combine data\n   *      from and array source, joining the data with the characters provided\n   *      between the two brackets. For example: `name[, ]` would provide a\n   *      comma-space separated list from the source array. If no characters\n   *      are provided between the brackets, the original array source is\n   *      returned.\n   *    * `()` - Function notation. Adding `()` to the end of a parameter will\n   *      execute a function of the name given. For example: `browser()` for a\n   *      simple function on the data source, `browser.version()` for a\n   *      function in a nested property or even `browser().version` to get an\n   *      object property if the function called returns an object.\n   * * `object` - use different data for the different data types requested by\n   *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\n   *   of the object is the data type the property refers to and the value can\n   *   defined using an integer, string or function using the same rules as\n   *   `render` normally does. Note that an `_` option _must_ be specified.\n   *   This is the default value to use if you haven't specified a value for\n   *   the data type requested by DataTables.\n   * * `function` - the function given will be executed whenever DataTables\n   *   needs to set or get the data for a cell in the column. The function\n   *   takes three parameters:\n   *    * Parameters:\n   *      * {array|object} The data source for the row (based on `data`)\n   *      * {string} The type call data requested - this will be 'filter',\n   *        'display', 'type' or 'sort'.\n   *      * {array|object} The full data source for the row (not based on\n   *        `data`)\n   *    * Return:\n   *      * The return value from the function is what will be used for the\n   *        data requested.\n   *\n   *  @type string|int|function|object|null\n   *  @default null Use the data source value.\n   *\n   *  @name DataTable.defaults.column.render\n   *  @dtopt Columns\n   *\n   *  @example\n   *    // Create a comma separated list from an array of objects\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"ajaxSource\": \"sources/deep.txt\",\n   *        \"columns\": [\n   *          { \"data\": \"engine\" },\n   *          { \"data\": \"browser\" },\n   *          {\n   *            \"data\": \"platform\",\n   *            \"render\": \"[, ].name\"\n   *          }\n   *        ]\n   *      } );\n   *    } );\n   *\n   *  @example\n   *    // Execute a function to obtain data\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"columnDefs\": [ {\n   *          \"targets\": [ 0 ],\n   *          \"data\": null, // Use the full data source object for the renderer's source\n   *          \"render\": \"browserName()\"\n   *        } ]\n   *      } );\n   *    } );\n   *\n   *  @example\n   *    // As an object, extracting different data for the different types\n   *    // This would be used with a data source such as:\n   *    //   { \"phone\": 5552368, \"phone_filter\": \"5552368 555-2368\", \"phone_display\": \"555-2368\" }\n   *    // Here the `phone` integer is used for sorting and type detection, while `phone_filter`\n   *    // (which has both forms) is used for filtering for if a user inputs either format, while\n   *    // the formatted phone number is the one that is shown in the table.\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"columnDefs\": [ {\n   *          \"targets\": [ 0 ],\n   *          \"data\": null, // Use the full data source object for the renderer's source\n   *          \"render\": {\n   *            \"_\": \"phone\",\n   *            \"filter\": \"phone_filter\",\n   *            \"display\": \"phone_display\"\n   *          }\n   *        } ]\n   *      } );\n   *    } );\n   *\n   *  @example\n   *    // Use as a function to create a link from the data source\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"columnDefs\": [ {\n   *          \"targets\": [ 0 ],\n   *          \"data\": \"download_link\",\n   *          \"render\": function ( data, type, full ) {\n   *            return '<a href=\"'+data+'\">Download</a>';\n   *          }\n   *        } ]\n   *      } );\n   *    } );\n   */\n  \"mRender\": null,\n\n  /**\n   * Change the cell type created for the column - either TD cells or TH cells. This\n   * can be useful as TH cells have semantic meaning in the table body, allowing them\n   * to act as a header for a row (you may wish to add scope='row' to the TH elements).\n   *  @type string\n   *  @default td\n   *\n   *  @name DataTable.defaults.column.cellType\n   *  @dtopt Columns\n   *\n   *  @example\n   *    // Make the first column use TH cells\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"columnDefs\": [ {\n   *          \"targets\": [ 0 ],\n   *          \"cellType\": \"th\"\n   *        } ]\n   *      } );\n   *    } );\n   */\n  \"sCellType\": \"td\",\n\n  /**\n   * Class to give to each cell in this column.\n   *  @type string\n   *  @default <i>Empty string</i>\n   *\n   *  @name DataTable.defaults.column.class\n   *  @dtopt Columns\n   *\n   *  @example\n   *    // Using `columnDefs`\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"columnDefs\": [\n   *          { \"class\": \"my_class\", \"targets\": [ 0 ] }\n   *        ]\n   *      } );\n   *    } );\n   *\n   *  @example\n   *    // Using `columns`\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"columns\": [\n   *          { \"class\": \"my_class\" },\n   *          null,\n   *          null,\n   *          null,\n   *          null\n   *        ]\n   *      } );\n   *    } );\n   */\n  \"sClass\": \"\",\n\n  /**\n   * When DataTables calculates the column widths to assign to each column,\n   * it finds the longest string in each column and then constructs a\n   * temporary table and reads the widths from that. The problem with this\n   * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n   * string - thus the calculation can go wrong (doing it properly and putting\n   * it into an DOM object and measuring that is horribly(!) slow). Thus as\n   * a \"work around\" we provide this option. It will append its value to the\n   * text that is found to be the longest string for the column - i.e. padding.\n   * Generally you shouldn't need this!\n   *  @type string\n   *  @default <i>Empty string<i>\n   *\n   *  @name DataTable.defaults.column.contentPadding\n   *  @dtopt Columns\n   *\n   *  @example\n   *    // Using `columns`\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"columns\": [\n   *          null,\n   *          null,\n   *          null,\n   *          {\n   *            \"contentPadding\": \"mmm\"\n   *          }\n   *        ]\n   *      } );\n   *    } );\n   */\n  \"sContentPadding\": \"\",\n\n  /**\n   * Allows a default value to be given for a column's data, and will be used\n   * whenever a null data source is encountered (this can be because `data`\n   * is set to null, or because the data source itself is null).\n   *  @type string\n   *  @default null\n   *\n   *  @name DataTable.defaults.column.defaultContent\n   *  @dtopt Columns\n   *\n   *  @example\n   *    // Using `columnDefs`\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"columnDefs\": [\n   *          {\n   *            \"data\": null,\n   *            \"defaultContent\": \"Edit\",\n   *            \"targets\": [ -1 ]\n   *          }\n   *        ]\n   *      } );\n   *    } );\n   *\n   *  @example\n   *    // Using `columns`\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"columns\": [\n   *          null,\n   *          null,\n   *          null,\n   *          {\n   *            \"data\": null,\n   *            \"defaultContent\": \"Edit\"\n   *          }\n   *        ]\n   *      } );\n   *    } );\n   */\n  \"sDefaultContent\": null,\n\n  /**\n   * This parameter is only used in DataTables' server-side processing. It can\n   * be exceptionally useful to know what columns are being displayed on the\n   * client side, and to map these to database fields. When defined, the names\n   * also allow DataTables to reorder information from the server if it comes\n   * back in an unexpected order (i.e. if you switch your columns around on the\n   * client-side, your server-side code does not also need updating).\n   *  @type string\n   *  @default <i>Empty string</i>\n   *\n   *  @name DataTable.defaults.column.name\n   *  @dtopt Columns\n   *\n   *  @example\n   *    // Using `columnDefs`\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"columnDefs\": [\n   *          { \"name\": \"engine\", \"targets\": [ 0 ] },\n   *          { \"name\": \"browser\", \"targets\": [ 1 ] },\n   *          { \"name\": \"platform\", \"targets\": [ 2 ] },\n   *          { \"name\": \"version\", \"targets\": [ 3 ] },\n   *          { \"name\": \"grade\", \"targets\": [ 4 ] }\n   *        ]\n   *      } );\n   *    } );\n   *\n   *  @example\n   *    // Using `columns`\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"columns\": [\n   *          { \"name\": \"engine\" },\n   *          { \"name\": \"browser\" },\n   *          { \"name\": \"platform\" },\n   *          { \"name\": \"version\" },\n   *          { \"name\": \"grade\" }\n   *        ]\n   *      } );\n   *    } );\n   */\n  \"sName\": \"\",\n\n  /**\n   * Defines a data source type for the ordering which can be used to read\n   * real-time information from the table (updating the internally cached\n   * version) prior to ordering. This allows ordering to occur on user\n   * editable elements such as form inputs.\n   *  @type string\n   *  @default std\n   *\n   *  @name DataTable.defaults.column.orderDataType\n   *  @dtopt Columns\n   *\n   *  @example\n   *    // Using `columnDefs`\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"columnDefs\": [\n   *          { \"orderDataType\": \"dom-text\", \"targets\": [ 2, 3 ] },\n   *          { \"type\": \"numeric\", \"targets\": [ 3 ] },\n   *          { \"orderDataType\": \"dom-select\", \"targets\": [ 4 ] },\n   *          { \"orderDataType\": \"dom-checkbox\", \"targets\": [ 5 ] }\n   *        ]\n   *      } );\n   *    } );\n   *\n   *  @example\n   *    // Using `columns`\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"columns\": [\n   *          null,\n   *          null,\n   *          { \"orderDataType\": \"dom-text\" },\n   *          { \"orderDataType\": \"dom-text\", \"type\": \"numeric\" },\n   *          { \"orderDataType\": \"dom-select\" },\n   *          { \"orderDataType\": \"dom-checkbox\" }\n   *        ]\n   *      } );\n   *    } );\n   */\n  \"sSortDataType\": \"std\",\n\n  /**\n   * The title of this column.\n   *  @type string\n   *  @default null <i>Derived from the 'TH' value for this column in the\n   *    original HTML table.</i>\n   *\n   *  @name DataTable.defaults.column.title\n   *  @dtopt Columns\n   *\n   *  @example\n   *    // Using `columnDefs`\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"columnDefs\": [\n   *          { \"title\": \"My column title\", \"targets\": [ 0 ] }\n   *        ]\n   *      } );\n   *    } );\n   *\n   *  @example\n   *    // Using `columns`\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"columns\": [\n   *          { \"title\": \"My column title\" },\n   *          null,\n   *          null,\n   *          null,\n   *          null\n   *        ]\n   *      } );\n   *    } );\n   */\n  \"sTitle\": null,\n\n  /**\n   * The type allows you to specify how the data for this column will be\n   * ordered. Four types (string, numeric, date and html (which will strip\n   * HTML tags before ordering)) are currently available. Note that only date\n   * formats understood by Javascript's Date() object will be accepted as type\n   * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\n   * 'numeric', 'date' or 'html' (by default). Further types can be adding\n   * through plug-ins.\n   *  @type string\n   *  @default null <i>Auto-detected from raw data</i>\n   *\n   *  @name DataTable.defaults.column.type\n   *  @dtopt Columns\n   *\n   *  @example\n   *    // Using `columnDefs`\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"columnDefs\": [\n   *          { \"type\": \"html\", \"targets\": [ 0 ] }\n   *        ]\n   *      } );\n   *    } );\n   *\n   *  @example\n   *    // Using `columns`\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"columns\": [\n   *          { \"type\": \"html\" },\n   *          null,\n   *          null,\n   *          null,\n   *          null\n   *        ]\n   *      } );\n   *    } );\n   */\n  \"sType\": null,\n\n  /**\n   * Defining the width of the column, this parameter may take any CSS value\n   * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\n   * been given a specific width through this interface ensuring that the table\n   * remains readable.\n   *  @type string\n   *  @default null <i>Automatic</i>\n   *\n   *  @name DataTable.defaults.column.width\n   *  @dtopt Columns\n   *\n   *  @example\n   *    // Using `columnDefs`\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"columnDefs\": [\n   *          { \"width\": \"20%\", \"targets\": [ 0 ] }\n   *        ]\n   *      } );\n   *    } );\n   *\n   *  @example\n   *    // Using `columns`\n   *    $(document).ready( function() {\n   *      $('#example').dataTable( {\n   *        \"columns\": [\n   *          { \"width\": \"20%\" },\n   *          null,\n   *          null,\n   *          null,\n   *          null\n   *        ]\n   *      } );\n   *    } );\n   */\n  \"sWidth\": null\n};\n\n_fnHungarianMap(DataTable.defaults.column);\n/**\n * DataTables settings object - this holds all the information needed for a\n * given table, including configuration, data and current application of the\n * table options. DataTables does not have a single instance for each DataTable\n * with the settings attached to that instance, but rather instances of the\n * DataTable \"class\" are created on-the-fly as needed (typically by a\n * $().dataTable() call) and the settings object is then applied to that\n * instance.\n *\n * Note that this object is related to {@link DataTable.defaults} but this\n * one is the internal data store for DataTables's cache of columns. It should\n * NOT be manipulated outside of DataTables. Any configuration should be done\n * through the initialisation options.\n *  @namespace\n *  @todo Really should attach the settings object to individual instances so we\n *    don't need to create new instances on each $().dataTable() call (if the\n *    table already exists). It would also save passing oSettings around and\n *    into every single function. However, this is a very significant\n *    architecture change for DataTables and will almost certainly break\n *    backwards compatibility with older installations. This is something that\n *    will be done in 2.0.\n */\n\n\nDataTable.models.oSettings = {\n  /**\n   * Primary features of DataTables and their enablement state.\n   *  @namespace\n   */\n  \"oFeatures\": {\n    /**\n     * Flag to say if DataTables should automatically try to calculate the\n     * optimum table and columns widths (true) or not (false).\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     *  @type boolean\n     */\n    \"bAutoWidth\": null,\n\n    /**\n     * Delay the creation of TR and TD elements until they are actually\n     * needed by a driven page draw. This can give a significant speed\n     * increase for Ajax source and Javascript source data, but makes no\n     * difference at all for DOM and server-side processing tables.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     *  @type boolean\n     */\n    \"bDeferRender\": null,\n\n    /**\n     * Enable filtering on the table or not. Note that if this is disabled\n     * then there is no filtering at all on the table, including fnFilter.\n     * To just remove the filtering input use sDom and remove the 'f' option.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     *  @type boolean\n     */\n    \"bFilter\": null,\n\n    /**\n     * Table information element (the 'Showing x of y records' div) enable\n     * flag.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     *  @type boolean\n     */\n    \"bInfo\": null,\n\n    /**\n     * Present a user control allowing the end user to change the page size\n     * when pagination is enabled.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     *  @type boolean\n     */\n    \"bLengthChange\": null,\n\n    /**\n     * Pagination enabled or not. Note that if this is disabled then length\n     * changing must also be disabled.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     *  @type boolean\n     */\n    \"bPaginate\": null,\n\n    /**\n     * Processing indicator enable flag whenever DataTables is enacting a\n     * user request - typically an Ajax request for server-side processing.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     *  @type boolean\n     */\n    \"bProcessing\": null,\n\n    /**\n     * Server-side processing enabled flag - when enabled DataTables will\n     * get all data from the server for every draw - there is no filtering,\n     * sorting or paging done on the client-side.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     *  @type boolean\n     */\n    \"bServerSide\": null,\n\n    /**\n     * Sorting enablement flag.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     *  @type boolean\n     */\n    \"bSort\": null,\n\n    /**\n     * Multi-column sorting\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     *  @type boolean\n     */\n    \"bSortMulti\": null,\n\n    /**\n     * Apply a class to the columns which are being sorted to provide a\n     * visual highlight or not. This can slow things down when enabled since\n     * there is a lot of DOM interaction.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     *  @type boolean\n     */\n    \"bSortClasses\": null,\n\n    /**\n     * State saving enablement flag.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     *  @type boolean\n     */\n    \"bStateSave\": null\n  },\n\n  /**\n   * Scrolling settings for a table.\n   *  @namespace\n   */\n  \"oScroll\": {\n    /**\n     * When the table is shorter in height than sScrollY, collapse the\n     * table container down to the height of the table (when true).\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     *  @type boolean\n     */\n    \"bCollapse\": null,\n\n    /**\n     * Width of the scrollbar for the web-browser's platform. Calculated\n     * during table initialisation.\n     *  @type int\n     *  @default 0\n     */\n    \"iBarWidth\": 0,\n\n    /**\n     * Viewport width for horizontal scrolling. Horizontal scrolling is\n     * disabled if an empty string.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     *  @type string\n     */\n    \"sX\": null,\n\n    /**\n     * Width to expand the table to when using x-scrolling. Typically you\n     * should not need to use this.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     *  @type string\n     *  @deprecated\n     */\n    \"sXInner\": null,\n\n    /**\n     * Viewport height for vertical scrolling. Vertical scrolling is disabled\n     * if an empty string.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     *  @type string\n     */\n    \"sY\": null\n  },\n\n  /**\n   * Language information for the table.\n   *  @namespace\n   *  @extends DataTable.defaults.oLanguage\n   */\n  \"oLanguage\": {\n    /**\n     * Information callback function. See\n     * {@link DataTable.defaults.fnInfoCallback}\n     *  @type function\n     *  @default null\n     */\n    \"fnInfoCallback\": null\n  },\n\n  /**\n   * Browser support parameters\n   *  @namespace\n   */\n  \"oBrowser\": {\n    /**\n     * Indicate if the browser incorrectly calculates width:100% inside a\n     * scrolling element (IE6/7)\n     *  @type boolean\n     *  @default false\n     */\n    \"bScrollOversize\": false,\n\n    /**\n     * Determine if the vertical scrollbar is on the right or left of the\n     * scrolling container - needed for rtl language layout, although not\n     * all browsers move the scrollbar (Safari).\n     *  @type boolean\n     *  @default false\n     */\n    \"bScrollbarLeft\": false,\n\n    /**\n     * Flag for if `getBoundingClientRect` is fully supported or not\n     *  @type boolean\n     *  @default false\n     */\n    \"bBounding\": false,\n\n    /**\n     * Browser scrollbar width\n     *  @type integer\n     *  @default 0\n     */\n    \"barWidth\": 0\n  },\n  \"ajax\": null,\n\n  /**\n   * Array referencing the nodes which are used for the features. The\n   * parameters of this object match what is allowed by sDom - i.e.\n   *   <ul>\n   *     <li>'l' - Length changing</li>\n   *     <li>'f' - Filtering input</li>\n   *     <li>'t' - The table!</li>\n   *     <li>'i' - Information</li>\n   *     <li>'p' - Pagination</li>\n   *     <li>'r' - pRocessing</li>\n   *   </ul>\n   *  @type array\n   *  @default []\n   */\n  \"aanFeatures\": [],\n\n  /**\n   * Store data information - see {@link DataTable.models.oRow} for detailed\n   * information.\n   *  @type array\n   *  @default []\n   */\n  \"aoData\": [],\n\n  /**\n   * Array of indexes which are in the current display (after filtering etc)\n   *  @type array\n   *  @default []\n   */\n  \"aiDisplay\": [],\n\n  /**\n   * Array of indexes for display - no filtering\n   *  @type array\n   *  @default []\n   */\n  \"aiDisplayMaster\": [],\n\n  /**\n   * Map of row ids to data indexes\n   *  @type object\n   *  @default {}\n   */\n  \"aIds\": {},\n\n  /**\n   * Store information about each column that is in use\n   *  @type array\n   *  @default []\n   */\n  \"aoColumns\": [],\n\n  /**\n   * Store information about the table's header\n   *  @type array\n   *  @default []\n   */\n  \"aoHeader\": [],\n\n  /**\n   * Store information about the table's footer\n   *  @type array\n   *  @default []\n   */\n  \"aoFooter\": [],\n\n  /**\n   * Store the applied global search information in case we want to force a\n   * research or compare the old search to a new one.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   *  @namespace\n   *  @extends DataTable.models.oSearch\n   */\n  \"oPreviousSearch\": {},\n\n  /**\n   * Store the applied search for each column - see\n   * {@link DataTable.models.oSearch} for the format that is used for the\n   * filtering information for each column.\n   *  @type array\n   *  @default []\n   */\n  \"aoPreSearchCols\": [],\n\n  /**\n   * Sorting that is applied to the table. Note that the inner arrays are\n   * used in the following manner:\n   * <ul>\n   *   <li>Index 0 - column number</li>\n   *   <li>Index 1 - current sorting direction</li>\n   * </ul>\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   *  @type array\n   *  @todo These inner arrays should really be objects\n   */\n  \"aaSorting\": null,\n\n  /**\n   * Sorting that is always applied to the table (i.e. prefixed in front of\n   * aaSorting).\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   *  @type array\n   *  @default []\n   */\n  \"aaSortingFixed\": [],\n\n  /**\n   * Classes to use for the striping of a table.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   *  @type array\n   *  @default []\n   */\n  \"asStripeClasses\": null,\n\n  /**\n   * If restoring a table - we should restore its striping classes as well\n   *  @type array\n   *  @default []\n   */\n  \"asDestroyStripes\": [],\n\n  /**\n   * If restoring a table - we should restore its width\n   *  @type int\n   *  @default 0\n   */\n  \"sDestroyWidth\": 0,\n\n  /**\n   * Callback functions array for every time a row is inserted (i.e. on a draw).\n   *  @type array\n   *  @default []\n   */\n  \"aoRowCallback\": [],\n\n  /**\n   * Callback functions for the header on each draw.\n   *  @type array\n   *  @default []\n   */\n  \"aoHeaderCallback\": [],\n\n  /**\n   * Callback function for the footer on each draw.\n   *  @type array\n   *  @default []\n   */\n  \"aoFooterCallback\": [],\n\n  /**\n   * Array of callback functions for draw callback functions\n   *  @type array\n   *  @default []\n   */\n  \"aoDrawCallback\": [],\n\n  /**\n   * Array of callback functions for row created function\n   *  @type array\n   *  @default []\n   */\n  \"aoRowCreatedCallback\": [],\n\n  /**\n   * Callback functions for just before the table is redrawn. A return of\n   * false will be used to cancel the draw.\n   *  @type array\n   *  @default []\n   */\n  \"aoPreDrawCallback\": [],\n\n  /**\n   * Callback functions for when the table has been initialised.\n   *  @type array\n   *  @default []\n   */\n  \"aoInitComplete\": [],\n\n  /**\n   * Callbacks for modifying the settings to be stored for state saving, prior to\n   * saving state.\n   *  @type array\n   *  @default []\n   */\n  \"aoStateSaveParams\": [],\n\n  /**\n   * Callbacks for modifying the settings that have been stored for state saving\n   * prior to using the stored values to restore the state.\n   *  @type array\n   *  @default []\n   */\n  \"aoStateLoadParams\": [],\n\n  /**\n   * Callbacks for operating on the settings object once the saved state has been\n   * loaded\n   *  @type array\n   *  @default []\n   */\n  \"aoStateLoaded\": [],\n\n  /**\n   * Cache the table ID for quick access\n   *  @type string\n   *  @default <i>Empty string</i>\n   */\n  \"sTableId\": \"\",\n\n  /**\n   * The TABLE node for the main table\n   *  @type node\n   *  @default null\n   */\n  \"nTable\": null,\n\n  /**\n   * Permanent ref to the thead element\n   *  @type node\n   *  @default null\n   */\n  \"nTHead\": null,\n\n  /**\n   * Permanent ref to the tfoot element - if it exists\n   *  @type node\n   *  @default null\n   */\n  \"nTFoot\": null,\n\n  /**\n   * Permanent ref to the tbody element\n   *  @type node\n   *  @default null\n   */\n  \"nTBody\": null,\n\n  /**\n   * Cache the wrapper node (contains all DataTables controlled elements)\n   *  @type node\n   *  @default null\n   */\n  \"nTableWrapper\": null,\n\n  /**\n   * Indicate if when using server-side processing the loading of data\n   * should be deferred until the second draw.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   *  @type boolean\n   *  @default false\n   */\n  \"bDeferLoading\": false,\n\n  /**\n   * Indicate if all required information has been read in\n   *  @type boolean\n   *  @default false\n   */\n  \"bInitialised\": false,\n\n  /**\n   * Information about open rows. Each object in the array has the parameters\n   * 'nTr' and 'nParent'\n   *  @type array\n   *  @default []\n   */\n  \"aoOpenRows\": [],\n\n  /**\n   * Dictate the positioning of DataTables' control elements - see\n   * {@link DataTable.model.oInit.sDom}.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   *  @type string\n   *  @default null\n   */\n  \"sDom\": null,\n\n  /**\n   * Search delay (in mS)\n   *  @type integer\n   *  @default null\n   */\n  \"searchDelay\": null,\n\n  /**\n   * Which type of pagination should be used.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   *  @type string\n   *  @default two_button\n   */\n  \"sPaginationType\": \"two_button\",\n\n  /**\n   * The state duration (for `stateSave`) in seconds.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   *  @type int\n   *  @default 0\n   */\n  \"iStateDuration\": 0,\n\n  /**\n   * Array of callback functions for state saving. Each array element is an\n   * object with the following parameters:\n   *   <ul>\n   *     <li>function:fn - function to call. Takes two parameters, oSettings\n   *       and the JSON string to save that has been thus far created. Returns\n   *       a JSON string to be inserted into a json object\n   *       (i.e. '\"param\": [ 0, 1, 2]')</li>\n   *     <li>string:sName - name of callback</li>\n   *   </ul>\n   *  @type array\n   *  @default []\n   */\n  \"aoStateSave\": [],\n\n  /**\n   * Array of callback functions for state loading. Each array element is an\n   * object with the following parameters:\n   *   <ul>\n   *     <li>function:fn - function to call. Takes two parameters, oSettings\n   *       and the object stored. May return false to cancel state loading</li>\n   *     <li>string:sName - name of callback</li>\n   *   </ul>\n   *  @type array\n   *  @default []\n   */\n  \"aoStateLoad\": [],\n\n  /**\n   * State that was saved. Useful for back reference\n   *  @type object\n   *  @default null\n   */\n  \"oSavedState\": null,\n\n  /**\n   * State that was loaded. Useful for back reference\n   *  @type object\n   *  @default null\n   */\n  \"oLoadedState\": null,\n\n  /**\n   * Source url for AJAX data for the table.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   *  @type string\n   *  @default null\n   */\n  \"sAjaxSource\": null,\n\n  /**\n   * Property from a given object from which to read the table data from. This\n   * can be an empty string (when not server-side processing), in which case\n   * it is  assumed an an array is given directly.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   *  @type string\n   */\n  \"sAjaxDataProp\": null,\n\n  /**\n   * The last jQuery XHR object that was used for server-side data gathering.\n   * This can be used for working with the XHR information in one of the\n   * callbacks\n   *  @type object\n   *  @default null\n   */\n  \"jqXHR\": null,\n\n  /**\n   * JSON returned from the server in the last Ajax request\n   *  @type object\n   *  @default undefined\n   */\n  \"json\": undefined,\n\n  /**\n   * Data submitted as part of the last Ajax request\n   *  @type object\n   *  @default undefined\n   */\n  \"oAjaxData\": undefined,\n\n  /**\n   * Function to get the server-side data.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   *  @type function\n   */\n  \"fnServerData\": null,\n\n  /**\n   * Functions which are called prior to sending an Ajax request so extra\n   * parameters can easily be sent to the server\n   *  @type array\n   *  @default []\n   */\n  \"aoServerParams\": [],\n\n  /**\n   * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\n   * required).\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   *  @type string\n   */\n  \"sServerMethod\": null,\n\n  /**\n   * Format numbers for display.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   *  @type function\n   */\n  \"fnFormatNumber\": null,\n\n  /**\n   * List of options that can be used for the user selectable length menu.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   *  @type array\n   *  @default []\n   */\n  \"aLengthMenu\": null,\n\n  /**\n   * Counter for the draws that the table does. Also used as a tracker for\n   * server-side processing\n   *  @type int\n   *  @default 0\n   */\n  \"iDraw\": 0,\n\n  /**\n   * Indicate if a redraw is being done - useful for Ajax\n   *  @type boolean\n   *  @default false\n   */\n  \"bDrawing\": false,\n\n  /**\n   * Draw index (iDraw) of the last error when parsing the returned data\n   *  @type int\n   *  @default -1\n   */\n  \"iDrawError\": -1,\n\n  /**\n   * Paging display length\n   *  @type int\n   *  @default 10\n   */\n  \"_iDisplayLength\": 10,\n\n  /**\n   * Paging start point - aiDisplay index\n   *  @type int\n   *  @default 0\n   */\n  \"_iDisplayStart\": 0,\n\n  /**\n   * Server-side processing - number of records in the result set\n   * (i.e. before filtering), Use fnRecordsTotal rather than\n   * this property to get the value of the number of records, regardless of\n   * the server-side processing setting.\n   *  @type int\n   *  @default 0\n   *  @private\n   */\n  \"_iRecordsTotal\": 0,\n\n  /**\n   * Server-side processing - number of records in the current display set\n   * (i.e. after filtering). Use fnRecordsDisplay rather than\n   * this property to get the value of the number of records, regardless of\n   * the server-side processing setting.\n   *  @type boolean\n   *  @default 0\n   *  @private\n   */\n  \"_iRecordsDisplay\": 0,\n\n  /**\n   * The classes to use for the table\n   *  @type object\n   *  @default {}\n   */\n  \"oClasses\": {},\n\n  /**\n   * Flag attached to the settings object so you can check in the draw\n   * callback if filtering has been done in the draw. Deprecated in favour of\n   * events.\n   *  @type boolean\n   *  @default false\n   *  @deprecated\n   */\n  \"bFiltered\": false,\n\n  /**\n   * Flag attached to the settings object so you can check in the draw\n   * callback if sorting has been done in the draw. Deprecated in favour of\n   * events.\n   *  @type boolean\n   *  @default false\n   *  @deprecated\n   */\n  \"bSorted\": false,\n\n  /**\n   * Indicate that if multiple rows are in the header and there is more than\n   * one unique cell per column, if the top one (true) or bottom one (false)\n   * should be used for sorting / title by DataTables.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   *  @type boolean\n   */\n  \"bSortCellsTop\": null,\n\n  /**\n   * Initialisation object that is used for the table\n   *  @type object\n   *  @default null\n   */\n  \"oInit\": null,\n\n  /**\n   * Destroy callback functions - for plug-ins to attach themselves to the\n   * destroy so they can clean up markup and events.\n   *  @type array\n   *  @default []\n   */\n  \"aoDestroyCallback\": [],\n\n  /**\n   * Get the number of records in the current record set, before filtering\n   *  @type function\n   */\n  \"fnRecordsTotal\": function () {\n    return _fnDataSource(this) == 'ssp' ? this._iRecordsTotal * 1 : this.aiDisplayMaster.length;\n  },\n\n  /**\n   * Get the number of records in the current record set, after filtering\n   *  @type function\n   */\n  \"fnRecordsDisplay\": function () {\n    return _fnDataSource(this) == 'ssp' ? this._iRecordsDisplay * 1 : this.aiDisplay.length;\n  },\n\n  /**\n   * Get the display end point - aiDisplay index\n   *  @type function\n   */\n  \"fnDisplayEnd\": function () {\n    var len = this._iDisplayLength,\n        start = this._iDisplayStart,\n        calc = start + len,\n        records = this.aiDisplay.length,\n        features = this.oFeatures,\n        paginate = features.bPaginate;\n\n    if (features.bServerSide) {\n      return paginate === false || len === -1 ? start + records : Math.min(start + len, this._iRecordsDisplay);\n    } else {\n      return !paginate || calc > records || len === -1 ? records : calc;\n    }\n  },\n\n  /**\n   * The DataTables object for this table\n   *  @type object\n   *  @default null\n   */\n  \"oInstance\": null,\n\n  /**\n   * Unique identifier for each instance of the DataTables object. If there\n   * is an ID on the table node, then it takes that value, otherwise an\n   * incrementing internal counter is used.\n   *  @type string\n   *  @default null\n   */\n  \"sInstance\": null,\n\n  /**\n   * tabindex attribute value that is added to DataTables control elements, allowing\n   * keyboard navigation of the table and its controls.\n   */\n  \"iTabIndex\": 0,\n\n  /**\n   * DIV container for the footer scrolling table if scrolling\n   */\n  \"nScrollHead\": null,\n\n  /**\n   * DIV container for the footer scrolling table if scrolling\n   */\n  \"nScrollFoot\": null,\n\n  /**\n   * Last applied sort\n   *  @type array\n   *  @default []\n   */\n  \"aLastSort\": [],\n\n  /**\n   * Stored plug-in instances\n   *  @type object\n   *  @default {}\n   */\n  \"oPlugins\": {},\n\n  /**\n   * Function used to get a row's id from the row's data\n   *  @type function\n   *  @default null\n   */\n  \"rowIdFn\": null,\n\n  /**\n   * Data location where to store a row's id\n   *  @type string\n   *  @default null\n   */\n  \"rowId\": null\n};\n/**\n * Extension object for DataTables that is used to provide all extension\n * options.\n *\n * Note that the `DataTable.ext` object is available through\n * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\n * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\n *  @namespace\n *  @extends DataTable.models.ext\n */\n\n/**\n * DataTables extensions\n * \n * This namespace acts as a collection area for plug-ins that can be used to\n * extend DataTables capabilities. Indeed many of the build in methods\n * use this method to provide their own capabilities (sorting methods for\n * example).\n *\n * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\n * reasons\n *\n *  @namespace\n */\n\nDataTable.ext = _ext = {\n  /**\n   * Buttons. For use with the Buttons extension for DataTables. This is\n   * defined here so other extensions can define buttons regardless of load\n   * order. It is _not_ used by DataTables core.\n   *\n   *  @type object\n   *  @default {}\n   */\n  buttons: {},\n\n  /**\n   * Element class names\n   *\n   *  @type object\n   *  @default {}\n   */\n  classes: {},\n\n  /**\n   * DataTables build type (expanded by the download builder)\n   *\n   *  @type string\n   */\n  builder: \"-source-\",\n\n  /**\n   * Error reporting.\n   * \n   * How should DataTables report an error. Can take the value 'alert',\n   * 'throw', 'none' or a function.\n   *\n   *  @type string|function\n   *  @default alert\n   */\n  errMode: \"alert\",\n\n  /**\n   * Feature plug-ins.\n   * \n   * This is an array of objects which describe the feature plug-ins that are\n   * available to DataTables. These feature plug-ins are then available for\n   * use through the `dom` initialisation option.\n   * \n   * Each feature plug-in is described by an object which must have the\n   * following properties:\n   * \n   * * `fnInit` - function that is used to initialise the plug-in,\n   * * `cFeature` - a character so the feature can be enabled by the `dom`\n   *   instillation option. This is case sensitive.\n   *\n   * The `fnInit` function has the following input parameters:\n   *\n   * 1. `{object}` DataTables settings object: see\n   *    {@link DataTable.models.oSettings}\n   *\n   * And the following return is expected:\n   * \n   * * {node|null} The element which contains your feature. Note that the\n   *   return may also be void if your plug-in does not require to inject any\n   *   DOM elements into DataTables control (`dom`) - for example this might\n   *   be useful when developing a plug-in which allows table control via\n   *   keyboard entry\n   *\n   *  @type array\n   *\n   *  @example\n   *    $.fn.dataTable.ext.features.push( {\n   *      \"fnInit\": function( oSettings ) {\n   *        return new TableTools( { \"oDTSettings\": oSettings } );\n   *      },\n   *      \"cFeature\": \"T\"\n   *    } );\n   */\n  feature: [],\n\n  /**\n   * Row searching.\n   * \n   * This method of searching is complimentary to the default type based\n   * searching, and a lot more comprehensive as it allows you complete control\n   * over the searching logic. Each element in this array is a function\n   * (parameters described below) that is called for every row in the table,\n   * and your logic decides if it should be included in the searching data set\n   * or not.\n   *\n   * Searching functions have the following input parameters:\n   *\n   * 1. `{object}` DataTables settings object: see\n   *    {@link DataTable.models.oSettings}\n   * 2. `{array|object}` Data for the row to be processed (same as the\n   *    original format that was passed in as the data source, or an array\n   *    from a DOM data source\n   * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\n   *    can be useful to retrieve the `TR` element if you need DOM interaction.\n   *\n   * And the following return is expected:\n   *\n   * * {boolean} Include the row in the searched result set (true) or not\n   *   (false)\n   *\n   * Note that as with the main search ability in DataTables, technically this\n   * is \"filtering\", since it is subtractive. However, for consistency in\n   * naming we call it searching here.\n   *\n   *  @type array\n   *  @default []\n   *\n   *  @example\n   *    // The following example shows custom search being applied to the\n   *    // fourth column (i.e. the data[3] index) based on two input values\n   *    // from the end-user, matching the data in a certain range.\n   *    $.fn.dataTable.ext.search.push(\n   *      function( settings, data, dataIndex ) {\n   *        var min = document.getElementById('min').value * 1;\n   *        var max = document.getElementById('max').value * 1;\n   *        var version = data[3] == \"-\" ? 0 : data[3]*1;\n   *\n   *        if ( min == \"\" && max == \"\" ) {\n   *          return true;\n   *        }\n   *        else if ( min == \"\" && version < max ) {\n   *          return true;\n   *        }\n   *        else if ( min < version && \"\" == max ) {\n   *          return true;\n   *        }\n   *        else if ( min < version && version < max ) {\n   *          return true;\n   *        }\n   *        return false;\n   *      }\n   *    );\n   */\n  search: [],\n\n  /**\n   * Selector extensions\n   *\n   * The `selector` option can be used to extend the options available for the\n   * selector modifier options (`selector-modifier` object data type) that\n   * each of the three built in selector types offer (row, column and cell +\n   * their plural counterparts). For example the Select extension uses this\n   * mechanism to provide an option to select only rows, columns and cells\n   * that have been marked as selected by the end user (`{selected: true}`),\n   * which can be used in conjunction with the existing built in selector\n   * options.\n   *\n   * Each property is an array to which functions can be pushed. The functions\n   * take three attributes:\n   *\n   * * Settings object for the host table\n   * * Options object (`selector-modifier` object type)\n   * * Array of selected item indexes\n   *\n   * The return is an array of the resulting item indexes after the custom\n   * selector has been applied.\n   *\n   *  @type object\n   */\n  selector: {\n    cell: [],\n    column: [],\n    row: []\n  },\n\n  /**\n   * Internal functions, exposed for used in plug-ins.\n   * \n   * Please note that you should not need to use the internal methods for\n   * anything other than a plug-in (and even then, try to avoid if possible).\n   * The internal function may change between releases.\n   *\n   *  @type object\n   *  @default {}\n   */\n  internal: {},\n\n  /**\n   * Legacy configuration options. Enable and disable legacy options that\n   * are available in DataTables.\n   *\n   *  @type object\n   */\n  legacy: {\n    /**\n     * Enable / disable DataTables 1.9 compatible server-side processing\n     * requests\n     *\n     *  @type boolean\n     *  @default null\n     */\n    ajax: null\n  },\n\n  /**\n   * Pagination plug-in methods.\n   * \n   * Each entry in this object is a function and defines which buttons should\n   * be shown by the pagination rendering method that is used for the table:\n   * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\n   * buttons are displayed in the document, while the functions here tell it\n   * what buttons to display. This is done by returning an array of button\n   * descriptions (what each button will do).\n   *\n   * Pagination types (the four built in options and any additional plug-in\n   * options defined here) can be used through the `paginationType`\n   * initialisation parameter.\n   *\n   * The functions defined take two parameters:\n   *\n   * 1. `{int} page` The current page index\n   * 2. `{int} pages` The number of pages in the table\n   *\n   * Each function is expected to return an array where each element of the\n   * array can be one of:\n   *\n   * * `first` - Jump to first page when activated\n   * * `last` - Jump to last page when activated\n   * * `previous` - Show previous page when activated\n   * * `next` - Show next page when activated\n   * * `{int}` - Show page of the index given\n   * * `{array}` - A nested array containing the above elements to add a\n   *   containing 'DIV' element (might be useful for styling).\n   *\n   * Note that DataTables v1.9- used this object slightly differently whereby\n   * an object with two functions would be defined for each plug-in. That\n   * ability is still supported by DataTables 1.10+ to provide backwards\n   * compatibility, but this option of use is now decremented and no longer\n   * documented in DataTables 1.10+.\n   *\n   *  @type object\n   *  @default {}\n   *\n   *  @example\n   *    // Show previous, next and current page buttons only\n   *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\n   *      return [ 'previous', page, 'next' ];\n   *    };\n   */\n  pager: {},\n  renderer: {\n    pageButton: {},\n    header: {}\n  },\n\n  /**\n   * Ordering plug-ins - custom data source\n   * \n   * The extension options for ordering of data available here is complimentary\n   * to the default type based ordering that DataTables typically uses. It\n   * allows much greater control over the the data that is being used to\n   * order a column, but is necessarily therefore more complex.\n   * \n   * This type of ordering is useful if you want to do ordering based on data\n   * live from the DOM (for example the contents of an 'input' element) rather\n   * than just the static string that DataTables knows of.\n   * \n   * The way these plug-ins work is that you create an array of the values you\n   * wish to be ordering for the column in question and then return that\n   * array. The data in the array much be in the index order of the rows in\n   * the table (not the currently ordering order!). Which order data gathering\n   * function is run here depends on the `dt-init columns.orderDataType`\n   * parameter that is used for the column (if any).\n   *\n   * The functions defined take two parameters:\n   *\n   * 1. `{object}` DataTables settings object: see\n   *    {@link DataTable.models.oSettings}\n   * 2. `{int}` Target column index\n   *\n   * Each function is expected to return an array:\n   *\n   * * `{array}` Data for the column to be ordering upon\n   *\n   *  @type array\n   *\n   *  @example\n   *    // Ordering using `input` node values\n   *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\n   *    {\n   *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\n   *        return $('input', td).val();\n   *      } );\n   *    }\n   */\n  order: {},\n\n  /**\n   * Type based plug-ins.\n   *\n   * Each column in DataTables has a type assigned to it, either by automatic\n   * detection or by direct assignment using the `type` option for the column.\n   * The type of a column will effect how it is ordering and search (plug-ins\n   * can also make use of the column type if required).\n   *\n   * @namespace\n   */\n  type: {\n    /**\n     * Type detection functions.\n     *\n     * The functions defined in this object are used to automatically detect\n     * a column's type, making initialisation of DataTables super easy, even\n     * when complex data is in the table.\n     *\n     * The functions defined take two parameters:\n     *\n        *  1. `{*}` Data from the column cell to be analysed\n        *  2. `{settings}` DataTables settings object. This can be used to\n        *     perform context specific type detection - for example detection\n        *     based on language settings such as using a comma for a decimal\n        *     place. Generally speaking the options from the settings will not\n        *     be required\n     *\n     * Each function is expected to return:\n     *\n     * * `{string|null}` Data type detected, or null if unknown (and thus\n     *   pass it on to the other type detection functions.\n     *\n     *  @type array\n     *\n     *  @example\n     *    // Currency type detection plug-in:\n     *    $.fn.dataTable.ext.type.detect.push(\n     *      function ( data, settings ) {\n     *        // Check the numeric part\n     *        if ( ! data.substring(1).match(/[0-9]/) ) {\n     *          return null;\n     *        }\n     *\n     *        // Check prefixed by currency\n     *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\n     *          return 'currency';\n     *        }\n     *        return null;\n     *      }\n     *    );\n     */\n    detect: [],\n\n    /**\n     * Type based search formatting.\n     *\n     * The type based searching functions can be used to pre-format the\n     * data to be search on. For example, it can be used to strip HTML\n     * tags or to de-format telephone numbers for numeric only searching.\n     *\n     * Note that is a search is not defined for a column of a given type,\n     * no search formatting will be performed.\n     * \n     * Pre-processing of searching data plug-ins - When you assign the sType\n     * for a column (or have it automatically detected for you by DataTables\n     * or a type detection plug-in), you will typically be using this for\n     * custom sorting, but it can also be used to provide custom searching\n     * by allowing you to pre-processing the data and returning the data in\n     * the format that should be searched upon. This is done by adding\n     * functions this object with a parameter name which matches the sType\n     * for that target column. This is the corollary of <i>afnSortData</i>\n     * for searching data.\n     *\n     * The functions defined take a single parameter:\n     *\n        *  1. `{*}` Data from the column cell to be prepared for searching\n     *\n     * Each function is expected to return:\n     *\n     * * `{string|null}` Formatted string that will be used for the searching.\n     *\n     *  @type object\n     *  @default {}\n     *\n     *  @example\n     *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\n     *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\n     *    }\n     */\n    search: {},\n\n    /**\n     * Type based ordering.\n     *\n     * The column type tells DataTables what ordering to apply to the table\n     * when a column is sorted upon. The order for each type that is defined,\n     * is defined by the functions available in this object.\n     *\n     * Each ordering option can be described by three properties added to\n     * this object:\n     *\n     * * `{type}-pre` - Pre-formatting function\n     * * `{type}-asc` - Ascending order function\n     * * `{type}-desc` - Descending order function\n     *\n     * All three can be used together, only `{type}-pre` or only\n     * `{type}-asc` and `{type}-desc` together. It is generally recommended\n     * that only `{type}-pre` is used, as this provides the optimal\n     * implementation in terms of speed, although the others are provided\n     * for compatibility with existing Javascript sort functions.\n     *\n     * `{type}-pre`: Functions defined take a single parameter:\n     *\n        *  1. `{*}` Data from the column cell to be prepared for ordering\n     *\n     * And return:\n     *\n     * * `{*}` Data to be sorted upon\n     *\n     * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\n     * functions, taking two parameters:\n     *\n        *  1. `{*}` Data to compare to the second parameter\n        *  2. `{*}` Data to compare to the first parameter\n     *\n     * And returning:\n     *\n     * * `{*}` Ordering match: <0 if first parameter should be sorted lower\n     *   than the second parameter, ===0 if the two parameters are equal and\n     *   >0 if the first parameter should be sorted height than the second\n     *   parameter.\n     * \n     *  @type object\n     *  @default {}\n     *\n     *  @example\n     *    // Numeric ordering of formatted numbers with a pre-formatter\n     *    $.extend( $.fn.dataTable.ext.type.order, {\n     *      \"string-pre\": function(x) {\n     *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\n     *        return parseFloat( a );\n     *      }\n     *    } );\n     *\n     *  @example\n     *    // Case-sensitive string ordering, with no pre-formatting method\n     *    $.extend( $.fn.dataTable.ext.order, {\n     *      \"string-case-asc\": function(x,y) {\n     *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n     *      },\n     *      \"string-case-desc\": function(x,y) {\n     *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n     *      }\n     *    } );\n     */\n    order: {}\n  },\n\n  /**\n   * Unique DataTables instance counter\n   *\n   * @type int\n   * @private\n   */\n  _unique: 0,\n  //\n  // Depreciated\n  // The following properties are retained for backwards compatibility only.\n  // The should not be used in new projects and will be removed in a future\n  // version\n  //\n\n  /**\n   * Version check function.\n   *  @type function\n   *  @depreciated Since 1.10\n   */\n  fnVersionCheck: DataTable.fnVersionCheck,\n\n  /**\n   * Index for what 'this' index API functions should use\n   *  @type int\n   *  @deprecated Since v1.10\n   */\n  iApiIndex: 0,\n\n  /**\n   * jQuery UI class container\n   *  @type object\n   *  @deprecated Since v1.10\n   */\n  oJUIClasses: {},\n\n  /**\n   * Software version\n   *  @type string\n   *  @deprecated Since v1.10\n   */\n  sVersion: DataTable.version\n}; //\n// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\n//\n\n$.extend(_ext, {\n  afnFiltering: _ext.search,\n  aTypes: _ext.type.detect,\n  ofnSearch: _ext.type.search,\n  oSort: _ext.type.order,\n  afnSortData: _ext.order,\n  aoFeatures: _ext.feature,\n  oApi: _ext.internal,\n  oStdClasses: _ext.classes,\n  oPagination: _ext.pager\n});\n$.extend(DataTable.ext.classes, {\n  \"sTable\": \"dataTable\",\n  \"sNoFooter\": \"no-footer\",\n\n  /* Paging buttons */\n  \"sPageButton\": \"paginate_button\",\n  \"sPageButtonActive\": \"current\",\n  \"sPageButtonDisabled\": \"disabled\",\n\n  /* Striping classes */\n  \"sStripeOdd\": \"odd\",\n  \"sStripeEven\": \"even\",\n\n  /* Empty row */\n  \"sRowEmpty\": \"dataTables_empty\",\n\n  /* Features */\n  \"sWrapper\": \"dataTables_wrapper\",\n  \"sFilter\": \"dataTables_filter\",\n  \"sInfo\": \"dataTables_info\",\n  \"sPaging\": \"dataTables_paginate paging_\",\n\n  /* Note that the type is postfixed */\n  \"sLength\": \"dataTables_length\",\n  \"sProcessing\": \"dataTables_processing\",\n\n  /* Sorting */\n  \"sSortAsc\": \"sorting_asc\",\n  \"sSortDesc\": \"sorting_desc\",\n  \"sSortable\": \"sorting\",\n\n  /* Sortable in both directions */\n  \"sSortableAsc\": \"sorting_desc_disabled\",\n  \"sSortableDesc\": \"sorting_asc_disabled\",\n  \"sSortableNone\": \"sorting_disabled\",\n  \"sSortColumn\": \"sorting_\",\n\n  /* Note that an int is postfixed for the sorting order */\n\n  /* Filtering */\n  \"sFilterInput\": \"\",\n\n  /* Page length */\n  \"sLengthSelect\": \"\",\n\n  /* Scrolling */\n  \"sScrollWrapper\": \"dataTables_scroll\",\n  \"sScrollHead\": \"dataTables_scrollHead\",\n  \"sScrollHeadInner\": \"dataTables_scrollHeadInner\",\n  \"sScrollBody\": \"dataTables_scrollBody\",\n  \"sScrollFoot\": \"dataTables_scrollFoot\",\n  \"sScrollFootInner\": \"dataTables_scrollFootInner\",\n\n  /* Misc */\n  \"sHeaderTH\": \"\",\n  \"sFooterTH\": \"\",\n  // Deprecated\n  \"sSortJUIAsc\": \"\",\n  \"sSortJUIDesc\": \"\",\n  \"sSortJUI\": \"\",\n  \"sSortJUIAscAllowed\": \"\",\n  \"sSortJUIDescAllowed\": \"\",\n  \"sSortJUIWrapper\": \"\",\n  \"sSortIcon\": \"\",\n  \"sJUIHeader\": \"\",\n  \"sJUIFooter\": \"\"\n});\nvar extPagination = DataTable.ext.pager;\n\nfunction _numbers(page, pages) {\n  var numbers = [],\n      buttons = extPagination.numbers_length,\n      half = Math.floor(buttons / 2),\n      i = 1;\n\n  if (pages <= buttons) {\n    numbers = _range(0, pages);\n  } else if (page <= half) {\n    numbers = _range(0, buttons - 2);\n    numbers.push('ellipsis');\n    numbers.push(pages - 1);\n  } else if (page >= pages - 1 - half) {\n    numbers = _range(pages - (buttons - 2), pages);\n    numbers.splice(0, 0, 'ellipsis'); // no unshift in ie6\n\n    numbers.splice(0, 0, 0);\n  } else {\n    numbers = _range(page - half + 2, page + half - 1);\n    numbers.push('ellipsis');\n    numbers.push(pages - 1);\n    numbers.splice(0, 0, 'ellipsis');\n    numbers.splice(0, 0, 0);\n  }\n\n  numbers.DT_el = 'span';\n  return numbers;\n}\n\n$.extend(extPagination, {\n  simple: function (page, pages) {\n    return ['previous', 'next'];\n  },\n  full: function (page, pages) {\n    return ['first', 'previous', 'next', 'last'];\n  },\n  numbers: function (page, pages) {\n    return [_numbers(page, pages)];\n  },\n  simple_numbers: function (page, pages) {\n    return ['previous', _numbers(page, pages), 'next'];\n  },\n  full_numbers: function (page, pages) {\n    return ['first', 'previous', _numbers(page, pages), 'next', 'last'];\n  },\n  first_last_numbers: function (page, pages) {\n    return ['first', _numbers(page, pages), 'last'];\n  },\n  // For testing and plug-ins to use\n  _numbers: _numbers,\n  // Number of number buttons (including ellipsis) to show. _Must be odd!_\n  numbers_length: 7\n});\n$.extend(true, DataTable.ext.renderer, {\n  pageButton: {\n    _: function (settings, host, idx, buttons, page, pages) {\n      var classes = settings.oClasses;\n      var lang = settings.oLanguage.oPaginate;\n      var aria = settings.oLanguage.oAria.paginate || {};\n      var btnDisplay, btnClass;\n\n      var attach = function (container, buttons) {\n        var i, ien, node, button, tabIndex;\n        var disabledClass = classes.sPageButtonDisabled;\n\n        var clickHandler = function (e) {\n          _fnPageChange(settings, e.data.action, true);\n        };\n\n        for (i = 0, ien = buttons.length; i < ien; i++) {\n          button = buttons[i];\n\n          if (Array.isArray(button)) {\n            var inner = $('<' + (button.DT_el || 'div') + '/>').appendTo(container);\n            attach(inner, button);\n          } else {\n            btnDisplay = null;\n            btnClass = button;\n            tabIndex = settings.iTabIndex;\n\n            switch (button) {\n              case 'ellipsis':\n                container.append('<span class=\"ellipsis\">&#x2026;</span>');\n                break;\n\n              case 'first':\n                btnDisplay = lang.sFirst;\n\n                if (page === 0) {\n                  tabIndex = -1;\n                  btnClass += ' ' + disabledClass;\n                }\n\n                break;\n\n              case 'previous':\n                btnDisplay = lang.sPrevious;\n\n                if (page === 0) {\n                  tabIndex = -1;\n                  btnClass += ' ' + disabledClass;\n                }\n\n                break;\n\n              case 'next':\n                btnDisplay = lang.sNext;\n\n                if (pages === 0 || page === pages - 1) {\n                  tabIndex = -1;\n                  btnClass += ' ' + disabledClass;\n                }\n\n                break;\n\n              case 'last':\n                btnDisplay = lang.sLast;\n\n                if (pages === 0 || page === pages - 1) {\n                  tabIndex = -1;\n                  btnClass += ' ' + disabledClass;\n                }\n\n                break;\n\n              default:\n                btnDisplay = settings.fnFormatNumber(button + 1);\n                btnClass = page === button ? classes.sPageButtonActive : '';\n                break;\n            }\n\n            if (btnDisplay !== null) {\n              node = $('<a>', {\n                'class': classes.sPageButton + ' ' + btnClass,\n                'aria-controls': settings.sTableId,\n                'aria-label': aria[button],\n                'data-dt-idx': button,\n                'tabindex': tabIndex,\n                'id': idx === 0 && typeof button === 'string' ? settings.sTableId + '_' + button : null\n              }).html(btnDisplay).appendTo(container);\n\n              _fnBindAction(node, {\n                action: button\n              }, clickHandler);\n            }\n          }\n        }\n      }; // IE9 throws an 'unknown error' if document.activeElement is used\n      // inside an iframe or frame. Try / catch the error. Not good for\n      // accessibility, but neither are frames.\n\n\n      var activeEl;\n\n      try {\n        // Because this approach is destroying and recreating the paging\n        // elements, focus is lost on the select button which is bad for\n        // accessibility. So we want to restore focus once the draw has\n        // completed\n        activeEl = $(host).find(document.activeElement).data('dt-idx');\n      } catch (e) {}\n\n      attach($(host).empty(), buttons);\n\n      if (activeEl !== undefined) {\n        $(host).find('[data-dt-idx=' + activeEl + ']').trigger('focus');\n      }\n    }\n  }\n}); // Built in type detection. See model.ext.aTypes for information about\n// what is required from this methods.\n\n$.extend(DataTable.ext.type.detect, [// Plain numbers - first since V8 detects some plain numbers as dates\n// e.g. Date.parse('55') (but not all, e.g. Date.parse('22')...).\nfunction (d, settings) {\n  var decimal = settings.oLanguage.sDecimal;\n  return _isNumber(d, decimal) ? 'num' + decimal : null;\n}, // Dates (only those recognised by the browser's Date.parse)\nfunction (d, settings) {\n  // V8 tries _very_ hard to make a string passed into `Date.parse()`\n  // valid, so we need to use a regex to restrict date formats. Use a\n  // plug-in for anything other than ISO8601 style strings\n  if (d && !(d instanceof Date) && !_re_date.test(d)) {\n    return null;\n  }\n\n  var parsed = Date.parse(d);\n  return parsed !== null && !isNaN(parsed) || _empty(d) ? 'date' : null;\n}, // Formatted numbers\nfunction (d, settings) {\n  var decimal = settings.oLanguage.sDecimal;\n  return _isNumber(d, decimal, true) ? 'num-fmt' + decimal : null;\n}, // HTML numeric\nfunction (d, settings) {\n  var decimal = settings.oLanguage.sDecimal;\n  return _htmlNumeric(d, decimal) ? 'html-num' + decimal : null;\n}, // HTML numeric, formatted\nfunction (d, settings) {\n  var decimal = settings.oLanguage.sDecimal;\n  return _htmlNumeric(d, decimal, true) ? 'html-num-fmt' + decimal : null;\n}, // HTML (this is strict checking - there must be html)\nfunction (d, settings) {\n  return _empty(d) || typeof d === 'string' && d.indexOf('<') !== -1 ? 'html' : null;\n}]); // Filter formatting functions. See model.ext.ofnSearch for information about\n// what is required from these methods.\n// \n// Note that additional search methods are added for the html numbers and\n// html formatted numbers by `_addNumericSort()` when we know what the decimal\n// place is\n\n$.extend(DataTable.ext.type.search, {\n  html: function (data) {\n    return _empty(data) ? data : typeof data === 'string' ? data.replace(_re_new_lines, \" \").replace(_re_html, \"\") : '';\n  },\n  string: function (data) {\n    return _empty(data) ? data : typeof data === 'string' ? data.replace(_re_new_lines, \" \") : data;\n  }\n});\n\nvar __numericReplace = function (d, decimalPlace, re1, re2) {\n  if (d !== 0 && (!d || d === '-')) {\n    return -Infinity;\n  } // If a decimal place other than `.` is used, it needs to be given to the\n  // function so we can detect it and replace with a `.` which is the only\n  // decimal place Javascript recognises - it is not locale aware.\n\n\n  if (decimalPlace) {\n    d = _numToDecimal(d, decimalPlace);\n  }\n\n  if (d.replace) {\n    if (re1) {\n      d = d.replace(re1, '');\n    }\n\n    if (re2) {\n      d = d.replace(re2, '');\n    }\n  }\n\n  return d * 1;\n}; // Add the numeric 'deformatting' functions for sorting and search. This is done\n// in a function to provide an easy ability for the language options to add\n// additional methods if a non-period decimal place is used.\n\n\nfunction _addNumericSort(decimalPlace) {\n  $.each({\n    // Plain numbers\n    \"num\": function (d) {\n      return __numericReplace(d, decimalPlace);\n    },\n    // Formatted numbers\n    \"num-fmt\": function (d) {\n      return __numericReplace(d, decimalPlace, _re_formatted_numeric);\n    },\n    // HTML numeric\n    \"html-num\": function (d) {\n      return __numericReplace(d, decimalPlace, _re_html);\n    },\n    // HTML numeric, formatted\n    \"html-num-fmt\": function (d) {\n      return __numericReplace(d, decimalPlace, _re_html, _re_formatted_numeric);\n    }\n  }, function (key, fn) {\n    // Add the ordering method\n    _ext.type.order[key + decimalPlace + '-pre'] = fn; // For HTML types add a search formatter that will strip the HTML\n\n    if (key.match(/^html\\-/)) {\n      _ext.type.search[key + decimalPlace] = _ext.type.search.html;\n    }\n  });\n} // Default sort methods\n\n\n$.extend(_ext.type.order, {\n  // Dates\n  \"date-pre\": function (d) {\n    var ts = Date.parse(d);\n    return isNaN(ts) ? -Infinity : ts;\n  },\n  // html\n  \"html-pre\": function (a) {\n    return _empty(a) ? '' : a.replace ? a.replace(/<.*?>/g, \"\").toLowerCase() : a + '';\n  },\n  // string\n  \"string-pre\": function (a) {\n    // This is a little complex, but faster than always calling toString,\n    // http://jsperf.com/tostring-v-check\n    return _empty(a) ? '' : typeof a === 'string' ? a.toLowerCase() : !a.toString ? '' : a.toString();\n  },\n  // string-asc and -desc are retained only for compatibility with the old\n  // sort methods\n  \"string-asc\": function (x, y) {\n    return x < y ? -1 : x > y ? 1 : 0;\n  },\n  \"string-desc\": function (x, y) {\n    return x < y ? 1 : x > y ? -1 : 0;\n  }\n}); // Numeric sorting types - order doesn't matter here\n\n_addNumericSort('');\n\n$.extend(true, DataTable.ext.renderer, {\n  header: {\n    _: function (settings, cell, column, classes) {\n      // No additional mark-up required\n      // Attach a sort listener to update on sort - note that using the\n      // `DT` namespace will allow the event to be removed automatically\n      // on destroy, while the `dt` namespaced event is the one we are\n      // listening for\n      $(settings.nTable).on('order.dt.DT', function (e, ctx, sorting, columns) {\n        if (settings !== ctx) {\n          // need to check this this is the host\n          return; // table, not a nested one\n        }\n\n        var colIdx = column.idx;\n        cell.removeClass(classes.sSortAsc + ' ' + classes.sSortDesc).addClass(columns[colIdx] == 'asc' ? classes.sSortAsc : columns[colIdx] == 'desc' ? classes.sSortDesc : column.sSortingClass);\n      });\n    },\n    jqueryui: function (settings, cell, column, classes) {\n      $('<div/>').addClass(classes.sSortJUIWrapper).append(cell.contents()).append($('<span/>').addClass(classes.sSortIcon + ' ' + column.sSortingClassJUI)).appendTo(cell); // Attach a sort listener to update on sort\n\n      $(settings.nTable).on('order.dt.DT', function (e, ctx, sorting, columns) {\n        if (settings !== ctx) {\n          return;\n        }\n\n        var colIdx = column.idx;\n        cell.removeClass(classes.sSortAsc + \" \" + classes.sSortDesc).addClass(columns[colIdx] == 'asc' ? classes.sSortAsc : columns[colIdx] == 'desc' ? classes.sSortDesc : column.sSortingClass);\n        cell.find('span.' + classes.sSortIcon).removeClass(classes.sSortJUIAsc + \" \" + classes.sSortJUIDesc + \" \" + classes.sSortJUI + \" \" + classes.sSortJUIAscAllowed + \" \" + classes.sSortJUIDescAllowed).addClass(columns[colIdx] == 'asc' ? classes.sSortJUIAsc : columns[colIdx] == 'desc' ? classes.sSortJUIDesc : column.sSortingClassJUI);\n      });\n    }\n  }\n});\n/*\n * Public helper functions. These aren't used internally by DataTables, or\n * called by any of the options passed into DataTables, but they can be used\n * externally by developers working with DataTables. They are helper functions\n * to make working with DataTables a little bit easier.\n */\n\nvar __htmlEscapeEntities = function (d) {\n  if (Array.isArray(d)) {\n    d = d.join(',');\n  }\n\n  return typeof d === 'string' ? d.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;') : d;\n}; // Common logic for moment, luxon or a date action\n\n\nfunction __mld(dt, momentFn, luxonFn, dateFn, arg1) {\n  if (window.moment) {\n    return dt[momentFn](arg1);\n  } else if (window.luxon) {\n    return dt[luxonFn](arg1);\n  }\n\n  return dateFn ? dt[dateFn](arg1) : dt;\n}\n\nvar __mlWarning = false;\n\nfunction __mldObj(d, format, locale) {\n  var dt;\n\n  if (window.moment) {\n    dt = window.moment.utc(d, format, locale, true);\n\n    if (!dt.isValid()) {\n      return null;\n    }\n  } else if (window.luxon) {\n    dt = format && typeof d === 'string' ? window.luxon.DateTime.fromFormat(d, format) : window.luxon.DateTime.fromISO(d);\n\n    if (!dt.isValid) {\n      return null;\n    }\n\n    dt.setLocale(locale);\n  } else if (!format) {\n    // No format given, must be ISO\n    dt = new Date(d);\n  } else {\n    if (!__mlWarning) {\n      alert('DataTables warning: Formatted date without Moment.js or Luxon - https://datatables.net/tn/17');\n    }\n\n    __mlWarning = true;\n  }\n\n  return dt;\n} // Wrapper for date, datetime and time which all operate the same way with the exception of\n// the output string for auto locale support\n\n\nfunction __mlHelper(localeString) {\n  return function (from, to, locale, def) {\n    // Luxon and Moment support\n    // Argument shifting\n    if (arguments.length === 0) {\n      locale = 'en';\n      to = null; // means toLocaleString\n\n      from = null; // means iso8601\n    } else if (arguments.length === 1) {\n      locale = 'en';\n      to = from;\n      from = null;\n    } else if (arguments.length === 2) {\n      locale = to;\n      to = from;\n      from = null;\n    }\n\n    var typeName = 'datetime-' + to; // Add type detection and sorting specific to this date format - we need to be able to identify\n    // date type columns as such, rather than as numbers in extensions. Hence the need for this.\n\n    if (!DataTable.ext.type.order[typeName]) {\n      // The renderer will give the value to type detect as the type!\n      DataTable.ext.type.detect.unshift(function (d) {\n        return d === typeName ? typeName : false;\n      }); // The renderer gives us Moment, Luxon or Date obects for the sorting, all of which have a\n      // `valueOf` which gives milliseconds epoch\n\n      DataTable.ext.type.order[typeName + '-asc'] = function (a, b) {\n        var x = a.valueOf();\n        var y = b.valueOf();\n        return x === y ? 0 : x < y ? -1 : 1;\n      };\n\n      DataTable.ext.type.order[typeName + '-desc'] = function (a, b) {\n        var x = a.valueOf();\n        var y = b.valueOf();\n        return x === y ? 0 : x > y ? -1 : 1;\n      };\n    }\n\n    return function (d, type) {\n      // Allow for a default value\n      if (d === null || d === undefined) {\n        if (def === '--now') {\n          // We treat everything as UTC further down, so no changes are\n          // made, as such need to get the local date / time as if it were\n          // UTC\n          var local = new Date();\n          d = new Date(Date.UTC(local.getFullYear(), local.getMonth(), local.getDate(), local.getHours(), local.getMinutes(), local.getSeconds()));\n        } else {\n          d = '';\n        }\n      }\n\n      if (type === 'type') {\n        // Typing uses the type name for fast matching\n        return typeName;\n      }\n\n      if (d === '') {\n        return type !== 'sort' ? '' : __mldObj('0000-01-01 00:00:00', null, locale);\n      } // Shortcut. If `from` and `to` are the same, we are using the renderer to\n      // format for ordering, not display - its already in the display format.\n\n\n      if (to !== null && from === to && type !== 'sort' && type !== 'type' && !(d instanceof Date)) {\n        return d;\n      }\n\n      var dt = __mldObj(d, from, locale);\n\n      if (dt === null) {\n        return d;\n      }\n\n      if (type === 'sort') {\n        return dt;\n      }\n\n      var formatted = to === null ? __mld(dt, 'toDate', 'toJSDate', '')[localeString]() : __mld(dt, 'format', 'toFormat', 'toISOString', to); // XSS protection\n\n      return type === 'display' ? __htmlEscapeEntities(formatted) : formatted;\n    };\n  };\n} // Based on locale, determine standard number formatting\n// Fallback for legacy browsers is US English\n\n\nvar __thousands = ',';\nvar __decimal = '.';\n\nif (Intl) {\n  try {\n    var num = new Intl.NumberFormat().formatToParts(100000.1);\n\n    for (var i = 0; i < num.length; i++) {\n      if (num[i].type === 'group') {\n        __thousands = num[i].value;\n      } else if (num[i].type === 'decimal') {\n        __decimal = num[i].value;\n      }\n    }\n  } catch (e) {// noop\n  }\n} // Formatted date time detection - use by declaring the formats you are going to use\n\n\nDataTable.datetime = function (format, locale) {\n  var typeName = 'datetime-detect-' + format;\n\n  if (!locale) {\n    locale = 'en';\n  }\n\n  if (!DataTable.ext.type.order[typeName]) {\n    DataTable.ext.type.detect.unshift(function (d) {\n      var dt = __mldObj(d, format, locale);\n\n      return d === '' || dt ? typeName : false;\n    });\n\n    DataTable.ext.type.order[typeName + '-pre'] = function (d) {\n      return __mldObj(d, format, locale) || 0;\n    };\n  }\n};\n/**\n * Helpers for `columns.render`.\n *\n * The options defined here can be used with the `columns.render` initialisation\n * option to provide a display renderer. The following functions are defined:\n *\n * * `number` - Will format numeric data (defined by `columns.data`) for\n *   display, retaining the original unformatted data for sorting and filtering.\n *   It takes 5 parameters:\n *   * `string` - Thousands grouping separator\n *   * `string` - Decimal point indicator\n *   * `integer` - Number of decimal points to show\n *   * `string` (optional) - Prefix.\n *   * `string` (optional) - Postfix (/suffix).\n * * `text` - Escape HTML to help prevent XSS attacks. It has no optional\n *   parameters.\n *\n * @example\n *   // Column definition using the number renderer\n *   {\n *     data: \"salary\",\n *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\n *   }\n *\n * @namespace\n */\n\n\nDataTable.render = {\n  date: __mlHelper('toLocaleDateString'),\n  datetime: __mlHelper('toLocaleString'),\n  time: __mlHelper('toLocaleTimeString'),\n  number: function (thousands, decimal, precision, prefix, postfix) {\n    // Auto locale detection\n    if (thousands === null || thousands === undefined) {\n      thousands = __thousands;\n    }\n\n    if (decimal === null || decimal === undefined) {\n      decimal = __decimal;\n    }\n\n    return {\n      display: function (d) {\n        if (typeof d !== 'number' && typeof d !== 'string') {\n          return d;\n        }\n\n        if (d === '' || d === null) {\n          return d;\n        }\n\n        var negative = d < 0 ? '-' : '';\n        var flo = parseFloat(d); // If NaN then there isn't much formatting that we can do - just\n        // return immediately, escaping any HTML (this was supposed to\n        // be a number after all)\n\n        if (isNaN(flo)) {\n          return __htmlEscapeEntities(d);\n        }\n\n        flo = flo.toFixed(precision);\n        d = Math.abs(flo);\n        var intPart = parseInt(d, 10);\n        var floatPart = precision ? decimal + (d - intPart).toFixed(precision).substring(2) : ''; // If zero, then can't have a negative prefix\n\n        if (intPart === 0 && parseFloat(floatPart) === 0) {\n          negative = '';\n        }\n\n        return negative + (prefix || '') + intPart.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, thousands) + floatPart + (postfix || '');\n      }\n    };\n  },\n  text: function () {\n    return {\n      display: __htmlEscapeEntities,\n      filter: __htmlEscapeEntities\n    };\n  }\n};\n/*\n * This is really a good bit rubbish this method of exposing the internal methods\n * publicly... - To be fixed in 2.0 using methods on the prototype\n */\n\n/**\n * Create a wrapper function for exporting an internal functions to an external API.\n *  @param {string} fn API function name\n *  @returns {function} wrapped function\n *  @memberof DataTable#internal\n */\n\nfunction _fnExternApiFunc(fn) {\n  return function () {\n    var args = [_fnSettingsFromNode(this[DataTable.ext.iApiIndex])].concat(Array.prototype.slice.call(arguments));\n    return DataTable.ext.internal[fn].apply(this, args);\n  };\n}\n/**\n * Reference to internal functions for use by plug-in developers. Note that\n * these methods are references to internal functions and are considered to be\n * private. If you use these methods, be aware that they are liable to change\n * between versions.\n *  @namespace\n */\n\n\n$.extend(DataTable.ext.internal, {\n  _fnExternApiFunc: _fnExternApiFunc,\n  _fnBuildAjax: _fnBuildAjax,\n  _fnAjaxUpdate: _fnAjaxUpdate,\n  _fnAjaxParameters: _fnAjaxParameters,\n  _fnAjaxUpdateDraw: _fnAjaxUpdateDraw,\n  _fnAjaxDataSrc: _fnAjaxDataSrc,\n  _fnAddColumn: _fnAddColumn,\n  _fnColumnOptions: _fnColumnOptions,\n  _fnAdjustColumnSizing: _fnAdjustColumnSizing,\n  _fnVisibleToColumnIndex: _fnVisibleToColumnIndex,\n  _fnColumnIndexToVisible: _fnColumnIndexToVisible,\n  _fnVisbleColumns: _fnVisbleColumns,\n  _fnGetColumns: _fnGetColumns,\n  _fnColumnTypes: _fnColumnTypes,\n  _fnApplyColumnDefs: _fnApplyColumnDefs,\n  _fnHungarianMap: _fnHungarianMap,\n  _fnCamelToHungarian: _fnCamelToHungarian,\n  _fnLanguageCompat: _fnLanguageCompat,\n  _fnBrowserDetect: _fnBrowserDetect,\n  _fnAddData: _fnAddData,\n  _fnAddTr: _fnAddTr,\n  _fnNodeToDataIndex: _fnNodeToDataIndex,\n  _fnNodeToColumnIndex: _fnNodeToColumnIndex,\n  _fnGetCellData: _fnGetCellData,\n  _fnSetCellData: _fnSetCellData,\n  _fnSplitObjNotation: _fnSplitObjNotation,\n  _fnGetObjectDataFn: _fnGetObjectDataFn,\n  _fnSetObjectDataFn: _fnSetObjectDataFn,\n  _fnGetDataMaster: _fnGetDataMaster,\n  _fnClearTable: _fnClearTable,\n  _fnDeleteIndex: _fnDeleteIndex,\n  _fnInvalidate: _fnInvalidate,\n  _fnGetRowElements: _fnGetRowElements,\n  _fnCreateTr: _fnCreateTr,\n  _fnBuildHead: _fnBuildHead,\n  _fnDrawHead: _fnDrawHead,\n  _fnDraw: _fnDraw,\n  _fnReDraw: _fnReDraw,\n  _fnAddOptionsHtml: _fnAddOptionsHtml,\n  _fnDetectHeader: _fnDetectHeader,\n  _fnGetUniqueThs: _fnGetUniqueThs,\n  _fnFeatureHtmlFilter: _fnFeatureHtmlFilter,\n  _fnFilterComplete: _fnFilterComplete,\n  _fnFilterCustom: _fnFilterCustom,\n  _fnFilterColumn: _fnFilterColumn,\n  _fnFilter: _fnFilter,\n  _fnFilterCreateSearch: _fnFilterCreateSearch,\n  _fnEscapeRegex: _fnEscapeRegex,\n  _fnFilterData: _fnFilterData,\n  _fnFeatureHtmlInfo: _fnFeatureHtmlInfo,\n  _fnUpdateInfo: _fnUpdateInfo,\n  _fnInfoMacros: _fnInfoMacros,\n  _fnInitialise: _fnInitialise,\n  _fnInitComplete: _fnInitComplete,\n  _fnLengthChange: _fnLengthChange,\n  _fnFeatureHtmlLength: _fnFeatureHtmlLength,\n  _fnFeatureHtmlPaginate: _fnFeatureHtmlPaginate,\n  _fnPageChange: _fnPageChange,\n  _fnFeatureHtmlProcessing: _fnFeatureHtmlProcessing,\n  _fnProcessingDisplay: _fnProcessingDisplay,\n  _fnFeatureHtmlTable: _fnFeatureHtmlTable,\n  _fnScrollDraw: _fnScrollDraw,\n  _fnApplyToChildren: _fnApplyToChildren,\n  _fnCalculateColumnWidths: _fnCalculateColumnWidths,\n  _fnThrottle: _fnThrottle,\n  _fnConvertToWidth: _fnConvertToWidth,\n  _fnGetWidestNode: _fnGetWidestNode,\n  _fnGetMaxLenString: _fnGetMaxLenString,\n  _fnStringToCss: _fnStringToCss,\n  _fnSortFlatten: _fnSortFlatten,\n  _fnSort: _fnSort,\n  _fnSortAria: _fnSortAria,\n  _fnSortListener: _fnSortListener,\n  _fnSortAttachListener: _fnSortAttachListener,\n  _fnSortingClasses: _fnSortingClasses,\n  _fnSortData: _fnSortData,\n  _fnSaveState: _fnSaveState,\n  _fnLoadState: _fnLoadState,\n  _fnImplementState: _fnImplementState,\n  _fnSettingsFromNode: _fnSettingsFromNode,\n  _fnLog: _fnLog,\n  _fnMap: _fnMap,\n  _fnBindAction: _fnBindAction,\n  _fnCallbackReg: _fnCallbackReg,\n  _fnCallbackFire: _fnCallbackFire,\n  _fnLengthOverflow: _fnLengthOverflow,\n  _fnRenderer: _fnRenderer,\n  _fnDataSource: _fnDataSource,\n  _fnRowAttributes: _fnRowAttributes,\n  _fnExtend: _fnExtend,\n  _fnCalculateEnd: function () {} // Used by a lot of plug-ins, but redundant\n  // in 1.10, so this dead-end function is\n  // added to prevent errors\n\n}); // jQuery access\n\n$.fn.dataTable = DataTable; // Provide access to the host jQuery object (circular reference)\n\nDataTable.$ = $; // Legacy aliases\n\n$.fn.dataTableSettings = DataTable.settings;\n$.fn.dataTableExt = DataTable.ext; // With a capital `D` we return a DataTables API instance rather than a\n// jQuery object\n\n$.fn.DataTable = function (opts) {\n  return $(this).dataTable(opts).api();\n}; // All properties that are available to $.fn.dataTable should also be\n// available on $.fn.DataTable\n\n\n$.each(DataTable, function (prop, val) {\n  $.fn.DataTable[prop] = val;\n});\n\nDataTable.use = function (module, type) {\n  if (type === 'lib' || module.fn) {\n    $ = module;\n  } else if (type == 'win' || module.document) {\n    window = module;\n  }\n};\n\nexport default DataTable;","map":{"version":3,"names":["jQuery","$","DataTable","selector","options","sSelector","oOpts","api","_","rows","data","traditional","_Api","_fnSettingsFromNode","_ext","iApiIndex","fnAddData","redraw","Array","isArray","isPlainObject","add","row","undefined","draw","flatten","toArray","fnAdjustColumnSizing","bRedraw","columns","adjust","settings","scroll","oScroll","sX","sY","_fnScrollDraw","fnClearTable","clear","fnClose","nTr","child","hide","fnDeleteRow","target","callback","aoData","remove","call","fnDestroy","destroy","fnDraw","complete","fnFilter","sInput","iColumn","bRegex","bSmart","bShowGlobal","bCaseInsensitive","search","column","fnGetData","src","col","type","nodeName","toLowerCase","cell","fnGetNodes","iRow","node","nodes","fnGetPosition","toUpperCase","index","columnVisible","fnIsOpen","isShown","fnOpen","mHtml","sClass","show","fnPageChange","mAction","page","fnSetColumnVis","iCol","bShow","visible","fnSettings","fnSort","aaSort","order","fnSortListener","nNode","fnCallback","listener","fnUpdate","mData","mRow","bAction","fnVersionCheck","_that","emptyInit","len","length","oApi","internal","fn","ext","_fnExternApiFunc","each","o","oInit","_fnExtend","i","iLen","j","jLen","k","kLen","sId","getAttribute","bInitHandedOff","defaults","$this","_fnLog","_fnCompatOpts","_fnCompatCols","_fnCamelToHungarian","extend","allSettings","s","nTable","nTHead","parentNode","nTFoot","bRetrieve","bDestroy","oInstance","sTableId","id","splice","_unique","oSettings","models","style","width","push","dataTable","_fnLanguageCompat","oLanguage","aLengthMenu","iDisplayLength","_fnMap","oFeatures","_fnCallbackReg","fnDrawCallback","fnServerParams","fnStateSaveParams","fnStateLoadParams","fnStateLoaded","fnRowCallback","fnCreatedRow","fnHeaderCallback","fnFooterCallback","fnInitComplete","fnPreDrawCallback","rowIdFn","_fnGetObjectDataFn","rowId","_fnBrowserDetect","oClasses","classes","addClass","sTable","iInitDisplayStart","iDisplayStart","_iDisplayStart","iDeferLoading","bDeferLoading","tmp","_iRecordsDisplay","_iRecordsTotal","sUrl","ajax","dataType","url","success","json","_fnCallbackFire","_fnInitialise","error","asStripeClasses","sStripeOdd","sStripeEven","stripeClasses","rowOne","children","find","eq","inArray","map","el","hasClass","removeClass","join","asDestroyStripes","slice","anThs","aoColumnsInit","nThead","getElementsByTagName","_fnDetectHeader","aoHeader","_fnGetUniqueThs","aoColumns","_fnAddColumn","_fnApplyColumnDefs","aoColumnDefs","oDef","_fnColumnOptions","a","name","sort","filter","features","loadedInit","aaSorting","sorting","asSorting","_fnSortingClasses","bSort","bSorted","aSort","_fnSortFlatten","sortedColumns","val","dir","_fnSortAria","_fnDataSource","bDeferRender","captions","_captionSide","css","thead","appendTo","tbody","insertAfter","nTBody","tfoot","sNoFooter","aoFooter","aaData","_fnAddData","_fnAddTr","aiDisplay","aiDisplayMaster","bInitialised","_fnSaveState","bStateSave","_fnLoadState","_api_register","_api_registerPlural","_re_dic","_re_new_lines","_re_html","_re_date","_re_escape_regex","RegExp","_re_formatted_numeric","_empty","d","_intVal","integer","parseInt","isNaN","isFinite","_numToDecimal","num","decimalPoint","_fnEscapeRegex","replace","_isNumber","formatted","strType","parseFloat","_isHtml","_htmlNumeric","html","_stripHtml","_pluck","prop","prop2","out","ien","_pluck_order","_range","start","end","_removeEmpty","_areAllUnique","sorted","last","again","_flatten","_includes","indexOf","arg","Object","prototype","toString","includes","String","trim","util","throttle","freq","frequency","timer","that","now","Date","args","arguments","clearTimeout","setTimeout","apply","escapeRegex","set","source","meta","setData","_fnSplitObjNotation","b","aLast","arrayNotation","funcNotation","innerSrc","Error","match","__reArray","__reFn","get","key","t","fetchData","substring","_fnHungarianMap","hungarian","newKey","_hungarianMap","user","force","hungarianKey","charAt","lang","defaultDecimal","sDecimal","_addNumericSort","zeroRecords","sZeroRecords","sEmptyTable","sLoadingRecords","sInfoThousands","sThousands","decimal","_fnCompatMap","knew","old","init","sScrollX","scrollX","searchCols","aoSearchCols","oSearch","dataSort","aDataSort","__browser","browser","n","position","top","left","window","scrollLeft","height","overflow","append","outer","inner","barWidth","offsetWidth","clientWidth","bScrollOversize","bScrollbarLeft","Math","round","offset","bBounding","getBoundingClientRect","oBrowser","iBarWidth","_fnReduce","inc","value","isSet","hasOwnProperty","nTh","oDefaults","oCol","oColumn","document","createElement","sTitle","innerHTML","idx","aoPreSearchCols","oOptions","th","sWidthOrig","attr","mDataProp","sType","_sManualType","className","origClass","iDataSort","mDataSrc","mRender","attrTest","_bAttrSrc","_setter","rowData","innerData","fnSetData","_fnSetObjectDataFn","_rowReadObject","bSortable","sSortableNone","bAsc","bDesc","sSortingClass","sSortingClassJUI","sSortableAsc","sSortJUIAscAllowed","sSortableDesc","sSortJUIDescAllowed","sSortable","sSortJUI","_fnAdjustColumnSizing","bAutoWidth","_fnCalculateColumnWidths","sWidth","_fnVisibleToColumnIndex","iMatch","aiVis","_fnGetColumns","_fnColumnIndexToVisible","iPos","_fnVisbleColumns","vis","bVisible","sParam","_fnColumnTypes","types","detect","jen","ken","detectedType","cache","_fnGetCellData","aoColDefs","aoCols","def","aTargets","targets","aDataIn","anTds","oData","oRow","_aData","nTd","sThisType","aIds","_fnCreateTr","trs","_fnGetRowElements","cells","_fnNodeToDataIndex","_DT_RowIndex","_fnNodeToColumnIndex","anCells","rowIdx","colIdx","iDraw","defaultContent","sDefaultContent","cellData","iDrawError","fomatters","_fnSetCellData","str","_fnGetDataMaster","_fnClearTable","_fnDeleteIndex","iTarget","iTargetIndex","_fnInvalidate","cellWrite","childNodes","removeChild","firstChild","_aSortData","_aFilterData","cols","_fnRowAttributes","tds","td","contents","objectRead","setter","cellProcess","nextSibling","rowNode","nTrIn","create","sCellType","_DT_CellIndex","appendChild","fnCreatedCell","tr","DT_RowClass","split","__rowc","concat","DT_RowAttr","DT_RowData","_fnBuildHead","createHeader","iTabIndex","_fnSortAttachListener","_fnRenderer","sHeaderTH","sFooterTH","nTf","_fnDrawHead","aoSource","bIncludeHidden","nLocalTr","aoLocal","aApplied","iColumns","iRowspan","iColspan","_fnDraw","ajaxComplete","_fnStart","aPreDraw","_fnProcessingDisplay","anRows","iRowCount","iStripes","oLang","bServerSide","iDisplayEnd","fnDisplayEnd","bDrawing","bDestroying","_fnAjaxUpdate","iStart","iEnd","iDataIndex","nRow","sStripe","_sRowStripe","sZero","fnRecordsTotal","sRowEmpty","body","detach","bFiltered","_fnReDraw","holdPosition","bFilter","_fnSort","_fnFilterComplete","oPreviousSearch","_drawHold","_fnAddOptionsHtml","table","holding","insertBefore","insert","sWrapper","nHolding","nTableWrapper","nTableReinsertBefore","aDom","sDom","featureNode","cOption","nNewNode","cNext","sAttr","sJUIHeader","sJUIFooter","aSplit","substr","parent","bPaginate","bLengthChange","_fnFeatureHtmlLength","_fnFeatureHtmlFilter","bProcessing","_fnFeatureHtmlProcessing","_fnFeatureHtmlTable","bInfo","_fnFeatureHtmlInfo","_fnFeatureHtmlPaginate","feature","aoFeatures","cFeature","fnInit","aanFeatures","replaceWith","aLayout","nTrs","nCell","l","iColShifted","bUnique","fnShiftCol","nHeader","aReturn","unique","bSortCellsTop","fnRecordsDisplay","_fnBuildAjax","rbracket","ajaxData","instance","status","jqXHR","_fnAjaxDataSrc","sError","newData","baseAjax","sServerMethod","xhr","thrown","ret","readyState","oAjaxData","fnServerData","sAjaxSource","_fnAjaxParameters","_fnAjaxUpdateDraw","columnCount","preSearch","preColSearch","dataProp","columnSearch","displayStart","displayLength","_iDisplayLength","param","sSearch","regex","sName","searchable","bSearchable","orderable","legacy","compat","modern","recordsTotal","recordsFiltered","_bInitComplete","_fnInitComplete","write","dataSrc","sAjaxDataProp","tableId","language","previousSearch","input","sFilterInput","f","sFilter","searchFn","event","return","searchDelay","jqFilter","sSearchPlaceholder","on","_fnThrottle","e","keyCode","ev","activeElement","oInput","iForce","oPrevSearch","aoPrevSearch","fnSaveFilter","oFilter","fnRegex","bEscapeRegex","_fnFilter","_fnFilterColumn","_fnFilterCustom","filters","displayRows","merge","searchStr","smart","caseInsensitive","display","rpSearch","_fnFilterCreateSearch","test","prevSearch","displayMaster","invalidated","filtered","_fnFilterData","_sFilterRow","word","m","__filter_div","__filter_div_textContent","textContent","filterData","wasInvalidated","innerText","_fnSearchToCamel","obj","_fnSearchToHung","tid","sInfo","aoDrawCallback","_fnUpdateInfo","max","total","sInfoEmpty","sInfoFiltered","sInfoPostFix","_fnInfoMacros","fnInfoCallback","formatter","fnFormatNumber","all","ceil","iAjaxStart","deferLoading","_fnStringToCss","aData","_fnLengthChange","_fnLengthOverflow","menu","d2","lengths","select","sLengthSelect","Option","div","sLength","sLengthMenu","outerHTML","sPaginationType","plugin","pager","sPaging","p","visRecords","pages","buttons","_fnPageChange","action","records","floor","changed","r","sProcessing","scrollY","caption","captionSide","headerClone","cloneNode","footerClone","footer","_div","size","scroller","sScrollWrapper","sScrollHead","border","sScrollHeadInner","sXInner","removeAttr","sScrollBody","sScrollFoot","sScrollFootInner","scrollHead","scrollBody","scrollFoot","bCollapse","nScrollHead","nScrollBody","nScrollFoot","scrollXInner","divHeader","divHeaderStyle","divHeaderInner","divHeaderInnerStyle","divHeaderTable","divBodyEl","divBody","divBodyStyle","divFooter","divFooterInner","divFooterTable","header","tableEl","tableStyle","ie67","dtHeaderCells","headerTrgEls","footerTrgEls","headerSrcEls","footerSrcEls","headerCopy","footerCopy","headerWidths","footerWidths","headerContent","footerContent","correction","sanityWidth","zeroOut","nSizer","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","scrollBarVis","scrollHeight","clientHeight","clone","prependTo","_fnApplyToChildren","outerWidth","offsetHeight","getComputedStyle","nToSize","iOuterWidth","bScrolling","padding","trigger","scrollTop","an1","an2","nNode1","nNode2","nodeType","__re_html_remove","visibleColumns","headerCells","tableWidthAttr","tableContainer","userInputs","columnIdx","styleWidth","_fnConvertToWidth","tmpTable","margin","_fnGetWidestNode","sContentPadding","holder","right","bounding","_reszEvt","bindResize","sInstance","_fnGetMaxLenString","maxIdx","aiOrig","srcCol","fixed","aaSortingFixed","fixedObj","nestedSort","pre","post","_idx","sDataType","oExtSort","oSort","formatters","sortCol","_fnSortData","x","y","dataA","dataB","label","nextSort","oAria","ariaTitle","removeAttribute","setAttribute","sSortAscending","sSortDescending","_fnSortListener","nextSortIdx","next","bSortMulti","sortIdx","attachTo","_fnBindAction","shiftKey","oldSort","aLastSort","sortClass","sSortColumn","bSortClasses","customSort","sSortDataType","customData","_bLoadingState","state","time","oSavedState","fnStateSaveCallback","loaded","_fnImplementState","fnStateLoadCallback","Api","abStateLoad","duration","iStateDuration","oLoadedState","level","msg","tn","sErrMode","errMode","alert","console","log","mappedName","extender","breakRefs","which","preventDefault","sStore","callbackArr","eventName","reverse","Event","result","renderer","host","__apiStruct","__arrayProto","_toSettings","mixed","jq","tables","context","ctxSettings","opts","any","count","ctx","iterator","alwaysNew","items","item","apiInst","_selector_row_indexes","apiSelector","lastIndexOf","pluck","pop","reduce","reduceRight","shift","to$","toJQuery","unshift","scope","__dt_wrapper","struct","methodScoping","struc","methodExt","propExt","register","heir","method","registerPlural","pluralName","singularName","__table_selector","paging","info","__reload","one","abort","resetPaging","_selector_run","selectFn","res","selectorType","_selector_opts","_selector_first","inst","displayFiltered","displayFilteredMap","__row_selector","run","sel","selInt","cellIdx","closest","rowObj","hash","thatIdx","loopRow","loopCells","newRows","modRows","namespace","stateSaveParamsEvent","destroyEvent","idFn","ids","_detailsShow","childRows","off","every","__details_add","klass","addRow","created","colSpan","_details","__details_state","__details_remove","__details_display","__details_events","drawEvent","colvisEvent","_emp","_child_obj","_child_mth","__re_column_selector","__columnData","r1","r2","__column_selector","names","visColumns","jqResult","__setColumnVis","calc","__cell_selector","allCells","fnSelector","rowSelector","columnSelector","internalOpts","cellsNoOpts","selected","caseInsen","versionCheck","version","aThis","aThat","iThis","iThat","isDataTable","fnIsDataTable","is","head","foot","fnTables","camelToHungarian","jqRows","jqTable","jqTbody","jqWrapper","orig","removedMethod","sDestroyWidth","arg1","arg2","arg3","arg4","token","plural","resolved","toFormat","JSON","parse","sessionStorage","localStorage","getItem","location","pathname","setItem","stringify","paginate","min","builder","pageButton","oJUIClasses","sVersion","afnFiltering","aTypes","ofnSearch","afnSortData","oStdClasses","oPagination","extPagination","_numbers","numbers","numbers_length","half","DT_el","simple","full","simple_numbers","full_numbers","first_last_numbers","oPaginate","aria","btnDisplay","btnClass","attach","container","button","tabIndex","disabledClass","sPageButtonDisabled","clickHandler","sFirst","sPrevious","sNext","sLast","sPageButtonActive","sPageButton","activeEl","empty","parsed","string","__numericReplace","decimalPlace","re1","re2","Infinity","ts","sSortAsc","sSortDesc","jqueryui","sSortJUIWrapper","sSortIcon","sSortJUIAsc","sSortJUIDesc","__htmlEscapeEntities","__mld","dt","momentFn","luxonFn","dateFn","moment","luxon","__mlWarning","__mldObj","format","locale","utc","isValid","DateTime","fromFormat","fromISO","setLocale","__mlHelper","localeString","from","to","typeName","valueOf","local","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","__thousands","__decimal","Intl","NumberFormat","formatToParts","datetime","render","date","number","thousands","precision","prefix","postfix","negative","flo","toFixed","abs","intPart","floatPart","text","_fnCalculateEnd","dataTableSettings","dataTableExt","use","module"],"sources":["/Users/sithuhein/Desktop/PosSystem/pos_project_bk/node_modules/datatables.net/js/jquery.dataTables.mjs"],"sourcesContent":["/*! DataTables 1.13.1\n * Â©2008-2022 SpryMedia Ltd - datatables.net/license\n */\n\nimport jQuery from 'jquery';\n\n// DataTables code uses $ internally, but we want to be able to\n// reassign $ with the `use` method below, so it is a regular var.\nlet $ = jQuery;\n\n\nvar DataTable = function ( selector, options )\n{\n\t// When creating with `new`, create a new DataTable, returning the API instance\n\tif (this instanceof DataTable) {\n\t\treturn $(selector).DataTable(options);\n\t}\n\telse {\n\t\t// Argument switching\n\t\toptions = selector;\n\t}\n\n\t/**\n\t * Perform a jQuery selector action on the table's TR elements (from the tbody) and\n\t * return the resulting jQuery object.\n\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n\t *  @param {string} [oOpts.filter=none] Select TR elements that meet the current filter\n\t *    criterion (\"applied\") or all TR elements (i.e. no filter).\n\t *  @param {string} [oOpts.order=current] Order of the TR elements in the processed array.\n\t *    Can be either 'current', whereby the current sorting of the table is used, or\n\t *    'original' whereby the original order the data was read into the table is used.\n\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n\t *    'current' and filter is 'applied', regardless of what they might be given as.\n\t *  @returns {object} jQuery object, filtered by the given selector.\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Highlight every second row\n\t *      oTable.$('tr:odd').css('backgroundColor', 'blue');\n\t *    } );\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Filter to rows with 'Webkit' in them, add a background colour and then\n\t *      // remove the filter, thus highlighting the 'Webkit' rows only.\n\t *      oTable.fnFilter('Webkit');\n\t *      oTable.$('tr', {\"search\": \"applied\"}).css('backgroundColor', 'blue');\n\t *      oTable.fnFilter('');\n\t *    } );\n\t */\n\tthis.$ = function ( sSelector, oOpts )\n\t{\n\t\treturn this.api(true).$( sSelector, oOpts );\n\t};\n\t\n\t\n\t/**\n\t * Almost identical to $ in operation, but in this case returns the data for the matched\n\t * rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes\n\t * rather than any descendants, so the data can be obtained for the row/cell. If matching\n\t * rows are found, the data returned is the original data array/object that was used to\n\t * create the row (or a generated array if from a DOM source).\n\t *\n\t * This method is often useful in-combination with $ where both functions are given the\n\t * same parameters and the array indexes will match identically.\n\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n\t *  @param {string} [oOpts.filter=none] Select elements that meet the current filter\n\t *    criterion (\"applied\") or all elements (i.e. no filter).\n\t *  @param {string} [oOpts.order=current] Order of the data in the processed array.\n\t *    Can be either 'current', whereby the current sorting of the table is used, or\n\t *    'original' whereby the original order the data was read into the table is used.\n\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n\t *    'current' and filter is 'applied', regardless of what they might be given as.\n\t *  @returns {array} Data for the matched elements. If any elements, as a result of the\n\t *    selector, were not TR, TD or TH elements in the DataTable, they will have a null\n\t *    entry in the array.\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Get the data from the first row in the table\n\t *      var data = oTable._('tr:first');\n\t *\n\t *      // Do something useful with the data\n\t *      alert( \"First cell is: \"+data[0] );\n\t *    } );\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Filter to 'Webkit' and get all data for\n\t *      oTable.fnFilter('Webkit');\n\t *      var data = oTable._('tr', {\"search\": \"applied\"});\n\t *\n\t *      // Do something with the data\n\t *      alert( data.length+\" rows matched the search\" );\n\t *    } );\n\t */\n\tthis._ = function ( sSelector, oOpts )\n\t{\n\t\treturn this.api(true).rows( sSelector, oOpts ).data();\n\t};\n\t\n\t\n\t/**\n\t * Create a DataTables Api instance, with the currently selected tables for\n\t * the Api's context.\n\t * @param {boolean} [traditional=false] Set the API instance's context to be\n\t *   only the table referred to by the `DataTable.ext.iApiIndex` option, as was\n\t *   used in the API presented by DataTables 1.9- (i.e. the traditional mode),\n\t *   or if all tables captured in the jQuery object should be used.\n\t * @return {DataTables.Api}\n\t */\n\tthis.api = function ( traditional )\n\t{\n\t\treturn traditional ?\n\t\t\tnew _Api(\n\t\t\t\t_fnSettingsFromNode( this[ _ext.iApiIndex ] )\n\t\t\t) :\n\t\t\tnew _Api( this );\n\t};\n\t\n\t\n\t/**\n\t * Add a single new row or multiple rows of data to the table. Please note\n\t * that this is suitable for client-side processing only - if you are using\n\t * server-side processing (i.e. \"bServerSide\": true), then to add data, you\n\t * must add it to the data source, i.e. the server-side, through an Ajax call.\n\t *  @param {array|object} data The data to be added to the table. This can be:\n\t *    <ul>\n\t *      <li>1D array of data - add a single row with the data provided</li>\n\t *      <li>2D array of arrays - add multiple rows in a single call</li>\n\t *      <li>object - data object when using <i>mData</i></li>\n\t *      <li>array of objects - multiple data objects when using <i>mData</i></li>\n\t *    </ul>\n\t *  @param {bool} [redraw=true] redraw the table or not\n\t *  @returns {array} An array of integers, representing the list of indexes in\n\t *    <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to\n\t *    the table.\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    // Global var for counter\n\t *    var giCount = 2;\n\t *\n\t *    $(document).ready(function() {\n\t *      $('#example').dataTable();\n\t *    } );\n\t *\n\t *    function fnClickAddRow() {\n\t *      $('#example').dataTable().fnAddData( [\n\t *        giCount+\".1\",\n\t *        giCount+\".2\",\n\t *        giCount+\".3\",\n\t *        giCount+\".4\" ]\n\t *      );\n\t *\n\t *      giCount++;\n\t *    }\n\t */\n\tthis.fnAddData = function( data, redraw )\n\t{\n\t\tvar api = this.api( true );\n\t\n\t\t/* Check if we want to add multiple rows or not */\n\t\tvar rows = Array.isArray(data) && ( Array.isArray(data[0]) || $.isPlainObject(data[0]) ) ?\n\t\t\tapi.rows.add( data ) :\n\t\t\tapi.row.add( data );\n\t\n\t\tif ( redraw === undefined || redraw ) {\n\t\t\tapi.draw();\n\t\t}\n\t\n\t\treturn rows.flatten().toArray();\n\t};\n\t\n\t\n\t/**\n\t * This function will make DataTables recalculate the column sizes, based on the data\n\t * contained in the table and the sizes applied to the columns (in the DOM, CSS or\n\t * through the sWidth parameter). This can be useful when the width of the table's\n\t * parent element changes (for example a window resize).\n\t *  @param {boolean} [bRedraw=true] Redraw the table or not, you will typically want to\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable( {\n\t *        \"sScrollY\": \"200px\",\n\t *        \"bPaginate\": false\n\t *      } );\n\t *\n\t *      $(window).on('resize', function () {\n\t *        oTable.fnAdjustColumnSizing();\n\t *      } );\n\t *    } );\n\t */\n\tthis.fnAdjustColumnSizing = function ( bRedraw )\n\t{\n\t\tvar api = this.api( true ).columns.adjust();\n\t\tvar settings = api.settings()[0];\n\t\tvar scroll = settings.oScroll;\n\t\n\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\tapi.draw( false );\n\t\t}\n\t\telse if ( scroll.sX !== \"\" || scroll.sY !== \"\" ) {\n\t\t\t/* If not redrawing, but scrolling, we want to apply the new column sizes anyway */\n\t\t\t_fnScrollDraw( settings );\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * Quickly and simply clear a table\n\t *  @param {bool} [bRedraw=true] redraw the table or not\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)\n\t *      oTable.fnClearTable();\n\t *    } );\n\t */\n\tthis.fnClearTable = function( bRedraw )\n\t{\n\t\tvar api = this.api( true ).clear();\n\t\n\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\tapi.draw();\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * The exact opposite of 'opening' a row, this function will close any rows which\n\t * are currently 'open'.\n\t *  @param {node} nTr the table row to 'close'\n\t *  @returns {int} 0 on success, or 1 if failed (can't find the row)\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable;\n\t *\n\t *      // 'open' an information row when a row is clicked on\n\t *      $('#example tbody tr').click( function () {\n\t *        if ( oTable.fnIsOpen(this) ) {\n\t *          oTable.fnClose( this );\n\t *        } else {\n\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t *        }\n\t *      } );\n\t *\n\t *      oTable = $('#example').dataTable();\n\t *    } );\n\t */\n\tthis.fnClose = function( nTr )\n\t{\n\t\tthis.api( true ).row( nTr ).child.hide();\n\t};\n\t\n\t\n\t/**\n\t * Remove a row for the table\n\t *  @param {mixed} target The index of the row from aoData to be deleted, or\n\t *    the TR element you want to delete\n\t *  @param {function|null} [callBack] Callback function\n\t *  @param {bool} [redraw=true] Redraw the table or not\n\t *  @returns {array} The row that was deleted\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Immediately remove the first row\n\t *      oTable.fnDeleteRow( 0 );\n\t *    } );\n\t */\n\tthis.fnDeleteRow = function( target, callback, redraw )\n\t{\n\t\tvar api = this.api( true );\n\t\tvar rows = api.rows( target );\n\t\tvar settings = rows.settings()[0];\n\t\tvar data = settings.aoData[ rows[0][0] ];\n\t\n\t\trows.remove();\n\t\n\t\tif ( callback ) {\n\t\t\tcallback.call( this, settings, data );\n\t\t}\n\t\n\t\tif ( redraw === undefined || redraw ) {\n\t\t\tapi.draw();\n\t\t}\n\t\n\t\treturn data;\n\t};\n\t\n\t\n\t/**\n\t * Restore the table to it's original state in the DOM by removing all of DataTables\n\t * enhancements, alterations to the DOM structure of the table and event listeners.\n\t *  @param {boolean} [remove=false] Completely remove the table from the DOM\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      // This example is fairly pointless in reality, but shows how fnDestroy can be used\n\t *      var oTable = $('#example').dataTable();\n\t *      oTable.fnDestroy();\n\t *    } );\n\t */\n\tthis.fnDestroy = function ( remove )\n\t{\n\t\tthis.api( true ).destroy( remove );\n\t};\n\t\n\t\n\t/**\n\t * Redraw the table\n\t *  @param {bool} [complete=true] Re-filter and resort (if enabled) the table before the draw.\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Re-draw the table - you wouldn't want to do it here, but it's an example :-)\n\t *      oTable.fnDraw();\n\t *    } );\n\t */\n\tthis.fnDraw = function( complete )\n\t{\n\t\t// Note that this isn't an exact match to the old call to _fnDraw - it takes\n\t\t// into account the new data, but can hold position.\n\t\tthis.api( true ).draw( complete );\n\t};\n\t\n\t\n\t/**\n\t * Filter the input based on data\n\t *  @param {string} sInput String to filter the table on\n\t *  @param {int|null} [iColumn] Column to limit filtering to\n\t *  @param {bool} [bRegex=false] Treat as regular expression or not\n\t *  @param {bool} [bSmart=true] Perform smart filtering or not\n\t *  @param {bool} [bShowGlobal=true] Show the input global filter in it's input box(es)\n\t *  @param {bool} [bCaseInsensitive=true] Do case-insensitive matching (true) or not (false)\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Sometime later - filter...\n\t *      oTable.fnFilter( 'test string' );\n\t *    } );\n\t */\n\tthis.fnFilter = function( sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive )\n\t{\n\t\tvar api = this.api( true );\n\t\n\t\tif ( iColumn === null || iColumn === undefined ) {\n\t\t\tapi.search( sInput, bRegex, bSmart, bCaseInsensitive );\n\t\t}\n\t\telse {\n\t\t\tapi.column( iColumn ).search( sInput, bRegex, bSmart, bCaseInsensitive );\n\t\t}\n\t\n\t\tapi.draw();\n\t};\n\t\n\t\n\t/**\n\t * Get the data for the whole table, an individual row or an individual cell based on the\n\t * provided parameters.\n\t *  @param {int|node} [src] A TR row node, TD/TH cell node or an integer. If given as\n\t *    a TR node then the data source for the whole row will be returned. If given as a\n\t *    TD/TH cell node then iCol will be automatically calculated and the data for the\n\t *    cell returned. If given as an integer, then this is treated as the aoData internal\n\t *    data index for the row (see fnGetPosition) and the data for that row used.\n\t *  @param {int} [col] Optional column index that you want the data of.\n\t *  @returns {array|object|string} If mRow is undefined, then the data for all rows is\n\t *    returned. If mRow is defined, just data for that row, and is iCol is\n\t *    defined, only data for the designated cell is returned.\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    // Row data\n\t *    $(document).ready(function() {\n\t *      oTable = $('#example').dataTable();\n\t *\n\t *      oTable.$('tr').click( function () {\n\t *        var data = oTable.fnGetData( this );\n\t *        // ... do something with the array / object of data for the row\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Individual cell data\n\t *    $(document).ready(function() {\n\t *      oTable = $('#example').dataTable();\n\t *\n\t *      oTable.$('td').click( function () {\n\t *        var sData = oTable.fnGetData( this );\n\t *        alert( 'The cell clicked on had the value of '+sData );\n\t *      } );\n\t *    } );\n\t */\n\tthis.fnGetData = function( src, col )\n\t{\n\t\tvar api = this.api( true );\n\t\n\t\tif ( src !== undefined ) {\n\t\t\tvar type = src.nodeName ? src.nodeName.toLowerCase() : '';\n\t\n\t\t\treturn col !== undefined || type == 'td' || type == 'th' ?\n\t\t\t\tapi.cell( src, col ).data() :\n\t\t\t\tapi.row( src ).data() || null;\n\t\t}\n\t\n\t\treturn api.data().toArray();\n\t};\n\t\n\t\n\t/**\n\t * Get an array of the TR nodes that are used in the table's body. Note that you will\n\t * typically want to use the '$' API method in preference to this as it is more\n\t * flexible.\n\t *  @param {int} [iRow] Optional row index for the TR element you want\n\t *  @returns {array|node} If iRow is undefined, returns an array of all TR elements\n\t *    in the table's body, or iRow is defined, just the TR element requested.\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Get the nodes from the table\n\t *      var nNodes = oTable.fnGetNodes( );\n\t *    } );\n\t */\n\tthis.fnGetNodes = function( iRow )\n\t{\n\t\tvar api = this.api( true );\n\t\n\t\treturn iRow !== undefined ?\n\t\t\tapi.row( iRow ).node() :\n\t\t\tapi.rows().nodes().flatten().toArray();\n\t};\n\t\n\t\n\t/**\n\t * Get the array indexes of a particular cell from it's DOM element\n\t * and column index including hidden columns\n\t *  @param {node} node this can either be a TR, TD or TH in the table's body\n\t *  @returns {int} If nNode is given as a TR, then a single index is returned, or\n\t *    if given as a cell, an array of [row index, column index (visible),\n\t *    column index (all)] is given.\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      $('#example tbody td').click( function () {\n\t *        // Get the position of the current data from the node\n\t *        var aPos = oTable.fnGetPosition( this );\n\t *\n\t *        // Get the data array for this row\n\t *        var aData = oTable.fnGetData( aPos[0] );\n\t *\n\t *        // Update the data array and return the value\n\t *        aData[ aPos[1] ] = 'clicked';\n\t *        this.innerHTML = 'clicked';\n\t *      } );\n\t *\n\t *      // Init DataTables\n\t *      oTable = $('#example').dataTable();\n\t *    } );\n\t */\n\tthis.fnGetPosition = function( node )\n\t{\n\t\tvar api = this.api( true );\n\t\tvar nodeName = node.nodeName.toUpperCase();\n\t\n\t\tif ( nodeName == 'TR' ) {\n\t\t\treturn api.row( node ).index();\n\t\t}\n\t\telse if ( nodeName == 'TD' || nodeName == 'TH' ) {\n\t\t\tvar cell = api.cell( node ).index();\n\t\n\t\t\treturn [\n\t\t\t\tcell.row,\n\t\t\t\tcell.columnVisible,\n\t\t\t\tcell.column\n\t\t\t];\n\t\t}\n\t\treturn null;\n\t};\n\t\n\t\n\t/**\n\t * Check to see if a row is 'open' or not.\n\t *  @param {node} nTr the table row to check\n\t *  @returns {boolean} true if the row is currently open, false otherwise\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable;\n\t *\n\t *      // 'open' an information row when a row is clicked on\n\t *      $('#example tbody tr').click( function () {\n\t *        if ( oTable.fnIsOpen(this) ) {\n\t *          oTable.fnClose( this );\n\t *        } else {\n\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t *        }\n\t *      } );\n\t *\n\t *      oTable = $('#example').dataTable();\n\t *    } );\n\t */\n\tthis.fnIsOpen = function( nTr )\n\t{\n\t\treturn this.api( true ).row( nTr ).child.isShown();\n\t};\n\t\n\t\n\t/**\n\t * This function will place a new row directly after a row which is currently\n\t * on display on the page, with the HTML contents that is passed into the\n\t * function. This can be used, for example, to ask for confirmation that a\n\t * particular record should be deleted.\n\t *  @param {node} nTr The table row to 'open'\n\t *  @param {string|node|jQuery} mHtml The HTML to put into the row\n\t *  @param {string} sClass Class to give the new TD cell\n\t *  @returns {node} The row opened. Note that if the table row passed in as the\n\t *    first parameter, is not found in the table, this method will silently\n\t *    return.\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable;\n\t *\n\t *      // 'open' an information row when a row is clicked on\n\t *      $('#example tbody tr').click( function () {\n\t *        if ( oTable.fnIsOpen(this) ) {\n\t *          oTable.fnClose( this );\n\t *        } else {\n\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t *        }\n\t *      } );\n\t *\n\t *      oTable = $('#example').dataTable();\n\t *    } );\n\t */\n\tthis.fnOpen = function( nTr, mHtml, sClass )\n\t{\n\t\treturn this.api( true )\n\t\t\t.row( nTr )\n\t\t\t.child( mHtml, sClass )\n\t\t\t.show()\n\t\t\t.child()[0];\n\t};\n\t\n\t\n\t/**\n\t * Change the pagination - provides the internal logic for pagination in a simple API\n\t * function. With this function you can have a DataTables table go to the next,\n\t * previous, first or last pages.\n\t *  @param {string|int} mAction Paging action to take: \"first\", \"previous\", \"next\" or \"last\"\n\t *    or page number to jump to (integer), note that page 0 is the first page.\n\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *      oTable.fnPageChange( 'next' );\n\t *    } );\n\t */\n\tthis.fnPageChange = function ( mAction, bRedraw )\n\t{\n\t\tvar api = this.api( true ).page( mAction );\n\t\n\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\tapi.draw(false);\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * Show a particular column\n\t *  @param {int} iCol The column whose display should be changed\n\t *  @param {bool} bShow Show (true) or hide (false) the column\n\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Hide the second column after initialisation\n\t *      oTable.fnSetColumnVis( 1, false );\n\t *    } );\n\t */\n\tthis.fnSetColumnVis = function ( iCol, bShow, bRedraw )\n\t{\n\t\tvar api = this.api( true ).column( iCol ).visible( bShow );\n\t\n\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\tapi.columns.adjust().draw();\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * Get the settings for a particular table for external manipulation\n\t *  @returns {object} DataTables settings object. See\n\t *    {@link DataTable.models.oSettings}\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *      var oSettings = oTable.fnSettings();\n\t *\n\t *      // Show an example parameter from the settings\n\t *      alert( oSettings._iDisplayStart );\n\t *    } );\n\t */\n\tthis.fnSettings = function()\n\t{\n\t\treturn _fnSettingsFromNode( this[_ext.iApiIndex] );\n\t};\n\t\n\t\n\t/**\n\t * Sort the table by a particular column\n\t *  @param {int} iCol the data index to sort on. Note that this will not match the\n\t *    'display index' if you have hidden data entries\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Sort immediately with columns 0 and 1\n\t *      oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );\n\t *    } );\n\t */\n\tthis.fnSort = function( aaSort )\n\t{\n\t\tthis.api( true ).order( aaSort ).draw();\n\t};\n\t\n\t\n\t/**\n\t * Attach a sort listener to an element for a given column\n\t *  @param {node} nNode the element to attach the sort listener to\n\t *  @param {int} iColumn the column that a click on this node will sort on\n\t *  @param {function} [fnCallback] callback function when sort is run\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Sort on column 1, when 'sorter' is clicked on\n\t *      oTable.fnSortListener( document.getElementById('sorter'), 1 );\n\t *    } );\n\t */\n\tthis.fnSortListener = function( nNode, iColumn, fnCallback )\n\t{\n\t\tthis.api( true ).order.listener( nNode, iColumn, fnCallback );\n\t};\n\t\n\t\n\t/**\n\t * Update a table cell or row - this method will accept either a single value to\n\t * update the cell with, an array of values with one element for each column or\n\t * an object in the same format as the original data source. The function is\n\t * self-referencing in order to make the multi column updates easier.\n\t *  @param {object|array|string} mData Data to update the cell/row with\n\t *  @param {node|int} mRow TR element you want to update or the aoData index\n\t *  @param {int} [iColumn] The column to update, give as null or undefined to\n\t *    update a whole row.\n\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t *  @param {bool} [bAction=true] Perform pre-draw actions or not\n\t *  @returns {int} 0 on success, 1 on error\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *      oTable.fnUpdate( 'Example update', 0, 0 ); // Single cell\n\t *      oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], $('tbody tr')[0] ); // Row\n\t *    } );\n\t */\n\tthis.fnUpdate = function( mData, mRow, iColumn, bRedraw, bAction )\n\t{\n\t\tvar api = this.api( true );\n\t\n\t\tif ( iColumn === undefined || iColumn === null ) {\n\t\t\tapi.row( mRow ).data( mData );\n\t\t}\n\t\telse {\n\t\t\tapi.cell( mRow, iColumn ).data( mData );\n\t\t}\n\t\n\t\tif ( bAction === undefined || bAction ) {\n\t\t\tapi.columns.adjust();\n\t\t}\n\t\n\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\tapi.draw();\n\t\t}\n\t\treturn 0;\n\t};\n\t\n\t\n\t/**\n\t * Provide a common method for plug-ins to check the version of DataTables being used, in order\n\t * to ensure compatibility.\n\t *  @param {string} sVersion Version string to check for, in the format \"X.Y.Z\". Note that the\n\t *    formats \"X\" and \"X.Y\" are also acceptable.\n\t *  @returns {boolean} true if this version of DataTables is greater or equal to the required\n\t *    version, or false if this version of DataTales is not suitable\n\t *  @method\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *      alert( oTable.fnVersionCheck( '1.9.0' ) );\n\t *    } );\n\t */\n\tthis.fnVersionCheck = _ext.fnVersionCheck;\n\t\n\n\tvar _that = this;\n\tvar emptyInit = options === undefined;\n\tvar len = this.length;\n\n\tif ( emptyInit ) {\n\t\toptions = {};\n\t}\n\n\tthis.oApi = this.internal = _ext.internal;\n\n\t// Extend with old style plug-in API methods\n\tfor ( var fn in DataTable.ext.internal ) {\n\t\tif ( fn ) {\n\t\t\tthis[fn] = _fnExternApiFunc(fn);\n\t\t}\n\t}\n\n\tthis.each(function() {\n\t\t// For each initialisation we want to give it a clean initialisation\n\t\t// object that can be bashed around\n\t\tvar o = {};\n\t\tvar oInit = len > 1 ? // optimisation for single table case\n\t\t\t_fnExtend( o, options, true ) :\n\t\t\toptions;\n\n\t\t/*global oInit,_that,emptyInit*/\n\t\tvar i=0, iLen, j, jLen, k, kLen;\n\t\tvar sId = this.getAttribute( 'id' );\n\t\tvar bInitHandedOff = false;\n\t\tvar defaults = DataTable.defaults;\n\t\tvar $this = $(this);\n\t\t\n\t\t\n\t\t/* Sanity check */\n\t\tif ( this.nodeName.toLowerCase() != 'table' )\n\t\t{\n\t\t\t_fnLog( null, 0, 'Non-table node initialisation ('+this.nodeName+')', 2 );\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t/* Backwards compatibility for the defaults */\n\t\t_fnCompatOpts( defaults );\n\t\t_fnCompatCols( defaults.column );\n\t\t\n\t\t/* Convert the camel-case defaults to Hungarian */\n\t\t_fnCamelToHungarian( defaults, defaults, true );\n\t\t_fnCamelToHungarian( defaults.column, defaults.column, true );\n\t\t\n\t\t/* Setting up the initialisation object */\n\t\t_fnCamelToHungarian( defaults, $.extend( oInit, $this.data() ), true );\n\t\t\n\t\t\n\t\t\n\t\t/* Check to see if we are re-initialising a table */\n\t\tvar allSettings = DataTable.settings;\n\t\tfor ( i=0, iLen=allSettings.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tvar s = allSettings[i];\n\t\t\n\t\t\t/* Base check on table node */\n\t\t\tif (\n\t\t\t\ts.nTable == this ||\n\t\t\t\t(s.nTHead && s.nTHead.parentNode == this) ||\n\t\t\t\t(s.nTFoot && s.nTFoot.parentNode == this)\n\t\t\t) {\n\t\t\t\tvar bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;\n\t\t\t\tvar bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;\n\t\t\n\t\t\t\tif ( emptyInit || bRetrieve )\n\t\t\t\t{\n\t\t\t\t\treturn s.oInstance;\n\t\t\t\t}\n\t\t\t\telse if ( bDestroy )\n\t\t\t\t{\n\t\t\t\t\ts.oInstance.fnDestroy();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t_fnLog( s, 0, 'Cannot reinitialise DataTable', 3 );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\t/* If the element we are initialising has the same ID as a table which was previously\n\t\t\t * initialised, but the table nodes don't match (from before) then we destroy the old\n\t\t\t * instance by simply deleting it. This is under the assumption that the table has been\n\t\t\t * destroyed by other methods. Anyone using non-id selectors will need to do this manually\n\t\t\t */\n\t\t\tif ( s.sTableId == this.id )\n\t\t\t{\n\t\t\t\tallSettings.splice( i, 1 );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* Ensure the table has an ID - required for accessibility */\n\t\tif ( sId === null || sId === \"\" )\n\t\t{\n\t\t\tsId = \"DataTables_Table_\"+(DataTable.ext._unique++);\n\t\t\tthis.id = sId;\n\t\t}\n\t\t\n\t\t/* Create the settings object for this table and set some of the default parameters */\n\t\tvar oSettings = $.extend( true, {}, DataTable.models.oSettings, {\n\t\t\t\"sDestroyWidth\": $this[0].style.width,\n\t\t\t\"sInstance\":     sId,\n\t\t\t\"sTableId\":      sId\n\t\t} );\n\t\toSettings.nTable = this;\n\t\toSettings.oApi   = _that.internal;\n\t\toSettings.oInit  = oInit;\n\t\t\n\t\tallSettings.push( oSettings );\n\t\t\n\t\t// Need to add the instance after the instance after the settings object has been added\n\t\t// to the settings array, so we can self reference the table instance if more than one\n\t\toSettings.oInstance = (_that.length===1) ? _that : $this.dataTable();\n\t\t\n\t\t// Backwards compatibility, before we apply all the defaults\n\t\t_fnCompatOpts( oInit );\n\t\t_fnLanguageCompat( oInit.oLanguage );\n\t\t\n\t\t// If the length menu is given, but the init display length is not, use the length menu\n\t\tif ( oInit.aLengthMenu && ! oInit.iDisplayLength )\n\t\t{\n\t\t\toInit.iDisplayLength = Array.isArray( oInit.aLengthMenu[0] ) ?\n\t\t\t\toInit.aLengthMenu[0][0] : oInit.aLengthMenu[0];\n\t\t}\n\t\t\n\t\t// Apply the defaults and init options to make a single init object will all\n\t\t// options defined from defaults and instance options.\n\t\toInit = _fnExtend( $.extend( true, {}, defaults ), oInit );\n\t\t\n\t\t\n\t\t// Map the initialisation options onto the settings object\n\t\t_fnMap( oSettings.oFeatures, oInit, [\n\t\t\t\"bPaginate\",\n\t\t\t\"bLengthChange\",\n\t\t\t\"bFilter\",\n\t\t\t\"bSort\",\n\t\t\t\"bSortMulti\",\n\t\t\t\"bInfo\",\n\t\t\t\"bProcessing\",\n\t\t\t\"bAutoWidth\",\n\t\t\t\"bSortClasses\",\n\t\t\t\"bServerSide\",\n\t\t\t\"bDeferRender\"\n\t\t] );\n\t\t_fnMap( oSettings, oInit, [\n\t\t\t\"asStripeClasses\",\n\t\t\t\"ajax\",\n\t\t\t\"fnServerData\",\n\t\t\t\"fnFormatNumber\",\n\t\t\t\"sServerMethod\",\n\t\t\t\"aaSorting\",\n\t\t\t\"aaSortingFixed\",\n\t\t\t\"aLengthMenu\",\n\t\t\t\"sPaginationType\",\n\t\t\t\"sAjaxSource\",\n\t\t\t\"sAjaxDataProp\",\n\t\t\t\"iStateDuration\",\n\t\t\t\"sDom\",\n\t\t\t\"bSortCellsTop\",\n\t\t\t\"iTabIndex\",\n\t\t\t\"fnStateLoadCallback\",\n\t\t\t\"fnStateSaveCallback\",\n\t\t\t\"renderer\",\n\t\t\t\"searchDelay\",\n\t\t\t\"rowId\",\n\t\t\t[ \"iCookieDuration\", \"iStateDuration\" ], // backwards compat\n\t\t\t[ \"oSearch\", \"oPreviousSearch\" ],\n\t\t\t[ \"aoSearchCols\", \"aoPreSearchCols\" ],\n\t\t\t[ \"iDisplayLength\", \"_iDisplayLength\" ]\n\t\t] );\n\t\t_fnMap( oSettings.oScroll, oInit, [\n\t\t\t[ \"sScrollX\", \"sX\" ],\n\t\t\t[ \"sScrollXInner\", \"sXInner\" ],\n\t\t\t[ \"sScrollY\", \"sY\" ],\n\t\t\t[ \"bScrollCollapse\", \"bCollapse\" ]\n\t\t] );\n\t\t_fnMap( oSettings.oLanguage, oInit, \"fnInfoCallback\" );\n\t\t\n\t\t/* Callback functions which are array driven */\n\t\t_fnCallbackReg( oSettings, 'aoDrawCallback',       oInit.fnDrawCallback,      'user' );\n\t\t_fnCallbackReg( oSettings, 'aoServerParams',       oInit.fnServerParams,      'user' );\n\t\t_fnCallbackReg( oSettings, 'aoStateSaveParams',    oInit.fnStateSaveParams,   'user' );\n\t\t_fnCallbackReg( oSettings, 'aoStateLoadParams',    oInit.fnStateLoadParams,   'user' );\n\t\t_fnCallbackReg( oSettings, 'aoStateLoaded',        oInit.fnStateLoaded,       'user' );\n\t\t_fnCallbackReg( oSettings, 'aoRowCallback',        oInit.fnRowCallback,       'user' );\n\t\t_fnCallbackReg( oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow,        'user' );\n\t\t_fnCallbackReg( oSettings, 'aoHeaderCallback',     oInit.fnHeaderCallback,    'user' );\n\t\t_fnCallbackReg( oSettings, 'aoFooterCallback',     oInit.fnFooterCallback,    'user' );\n\t\t_fnCallbackReg( oSettings, 'aoInitComplete',       oInit.fnInitComplete,      'user' );\n\t\t_fnCallbackReg( oSettings, 'aoPreDrawCallback',    oInit.fnPreDrawCallback,   'user' );\n\t\t\n\t\toSettings.rowIdFn = _fnGetObjectDataFn( oInit.rowId );\n\t\t\n\t\t/* Browser support detection */\n\t\t_fnBrowserDetect( oSettings );\n\t\t\n\t\tvar oClasses = oSettings.oClasses;\n\t\t\n\t\t$.extend( oClasses, DataTable.ext.classes, oInit.oClasses );\n\t\t$this.addClass( oClasses.sTable );\n\t\t\n\t\t\n\t\tif ( oSettings.iInitDisplayStart === undefined )\n\t\t{\n\t\t\t/* Display start point, taking into account the save saving */\n\t\t\toSettings.iInitDisplayStart = oInit.iDisplayStart;\n\t\t\toSettings._iDisplayStart = oInit.iDisplayStart;\n\t\t}\n\t\t\n\t\tif ( oInit.iDeferLoading !== null )\n\t\t{\n\t\t\toSettings.bDeferLoading = true;\n\t\t\tvar tmp = Array.isArray( oInit.iDeferLoading );\n\t\t\toSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;\n\t\t\toSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading;\n\t\t}\n\t\t\n\t\t/* Language definitions */\n\t\tvar oLanguage = oSettings.oLanguage;\n\t\t$.extend( true, oLanguage, oInit.oLanguage );\n\t\t\n\t\tif ( oLanguage.sUrl )\n\t\t{\n\t\t\t/* Get the language definitions from a file - because this Ajax call makes the language\n\t\t\t * get async to the remainder of this function we use bInitHandedOff to indicate that\n\t\t\t * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor\n\t\t\t */\n\t\t\t$.ajax( {\n\t\t\t\tdataType: 'json',\n\t\t\t\turl: oLanguage.sUrl,\n\t\t\t\tsuccess: function ( json ) {\n\t\t\t\t\t_fnCamelToHungarian( defaults.oLanguage, json );\n\t\t\t\t\t_fnLanguageCompat( json );\n\t\t\t\t\t$.extend( true, oLanguage, json, oSettings.oInit.oLanguage );\n\t\t\n\t\t\t\t\t_fnCallbackFire( oSettings, null, 'i18n', [oSettings]);\n\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t},\n\t\t\t\terror: function () {\n\t\t\t\t\t// Error occurred loading language file, continue on as best we can\n\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t}\n\t\t\t} );\n\t\t\tbInitHandedOff = true;\n\t\t}\n\t\telse {\n\t\t\t_fnCallbackFire( oSettings, null, 'i18n', [oSettings]);\n\t\t}\n\t\t\n\t\t/*\n\t\t * Stripes\n\t\t */\n\t\tif ( oInit.asStripeClasses === null )\n\t\t{\n\t\t\toSettings.asStripeClasses =[\n\t\t\t\toClasses.sStripeOdd,\n\t\t\t\toClasses.sStripeEven\n\t\t\t];\n\t\t}\n\t\t\n\t\t/* Remove row stripe classes if they are already on the table row */\n\t\tvar stripeClasses = oSettings.asStripeClasses;\n\t\tvar rowOne = $this.children('tbody').find('tr').eq(0);\n\t\tif ( $.inArray( true, $.map( stripeClasses, function(el, i) {\n\t\t\treturn rowOne.hasClass(el);\n\t\t} ) ) !== -1 ) {\n\t\t\t$('tbody tr', this).removeClass( stripeClasses.join(' ') );\n\t\t\toSettings.asDestroyStripes = stripeClasses.slice();\n\t\t}\n\t\t\n\t\t/*\n\t\t * Columns\n\t\t * See if we should load columns automatically or use defined ones\n\t\t */\n\t\tvar anThs = [];\n\t\tvar aoColumnsInit;\n\t\tvar nThead = this.getElementsByTagName('thead');\n\t\tif ( nThead.length !== 0 )\n\t\t{\n\t\t\t_fnDetectHeader( oSettings.aoHeader, nThead[0] );\n\t\t\tanThs = _fnGetUniqueThs( oSettings );\n\t\t}\n\t\t\n\t\t/* If not given a column array, generate one with nulls */\n\t\tif ( oInit.aoColumns === null )\n\t\t{\n\t\t\taoColumnsInit = [];\n\t\t\tfor ( i=0, iLen=anThs.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\taoColumnsInit.push( null );\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\taoColumnsInit = oInit.aoColumns;\n\t\t}\n\t\t\n\t\t/* Add the columns */\n\t\tfor ( i=0, iLen=aoColumnsInit.length ; i<iLen ; i++ )\n\t\t{\n\t\t\t_fnAddColumn( oSettings, anThs ? anThs[i] : null );\n\t\t}\n\t\t\n\t\t/* Apply the column definitions */\n\t\t_fnApplyColumnDefs( oSettings, oInit.aoColumnDefs, aoColumnsInit, function (iCol, oDef) {\n\t\t\t_fnColumnOptions( oSettings, iCol, oDef );\n\t\t} );\n\t\t\n\t\t/* HTML5 attribute detection - build an mData object automatically if the\n\t\t * attributes are found\n\t\t */\n\t\tif ( rowOne.length ) {\n\t\t\tvar a = function ( cell, name ) {\n\t\t\t\treturn cell.getAttribute( 'data-'+name ) !== null ? name : null;\n\t\t\t};\n\t\t\n\t\t\t$( rowOne[0] ).children('th, td').each( function (i, cell) {\n\t\t\t\tvar col = oSettings.aoColumns[i];\n\t\t\n\t\t\t\tif (! col) {\n\t\t\t\t\t_fnLog( oSettings, 0, 'Incorrect column count', 18 );\n\t\t\t\t}\n\t\t\n\t\t\t\tif ( col.mData === i ) {\n\t\t\t\t\tvar sort = a( cell, 'sort' ) || a( cell, 'order' );\n\t\t\t\t\tvar filter = a( cell, 'filter' ) || a( cell, 'search' );\n\t\t\n\t\t\t\t\tif ( sort !== null || filter !== null ) {\n\t\t\t\t\t\tcol.mData = {\n\t\t\t\t\t\t\t_:      i+'.display',\n\t\t\t\t\t\t\tsort:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\ttype:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\tfilter: filter !== null ? i+'.@data-'+filter : undefined\n\t\t\t\t\t\t};\n\t\t\n\t\t\t\t\t\t_fnColumnOptions( oSettings, i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\t\n\t\tvar features = oSettings.oFeatures;\n\t\tvar loadedInit = function () {\n\t\t\t/*\n\t\t\t * Sorting\n\t\t\t * @todo For modularisation (1.11) this needs to do into a sort start up handler\n\t\t\t */\n\t\t\n\t\t\t// If aaSorting is not defined, then we use the first indicator in asSorting\n\t\t\t// in case that has been altered, so the default sort reflects that option\n\t\t\tif ( oInit.aaSorting === undefined ) {\n\t\t\t\tvar sorting = oSettings.aaSorting;\n\t\t\t\tfor ( i=0, iLen=sorting.length ; i<iLen ; i++ ) {\n\t\t\t\t\tsorting[i][1] = oSettings.aoColumns[ i ].asSorting[0];\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\t/* Do a first pass on the sorting classes (allows any size changes to be taken into\n\t\t\t * account, and also will apply sorting disabled classes if disabled\n\t\t\t */\n\t\t\t_fnSortingClasses( oSettings );\n\t\t\n\t\t\tif ( features.bSort ) {\n\t\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\n\t\t\t\t\tif ( oSettings.bSorted ) {\n\t\t\t\t\t\tvar aSort = _fnSortFlatten( oSettings );\n\t\t\t\t\t\tvar sortedColumns = {};\n\t\t\n\t\t\t\t\t\t$.each( aSort, function (i, val) {\n\t\t\t\t\t\t\tsortedColumns[ val.src ] = val.dir;\n\t\t\t\t\t\t} );\n\t\t\n\t\t\t\t\t\t_fnCallbackFire( oSettings, null, 'order', [oSettings, aSort, sortedColumns] );\n\t\t\t\t\t\t_fnSortAria( oSettings );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\n\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\n\t\t\t\tif ( oSettings.bSorted || _fnDataSource( oSettings ) === 'ssp' || features.bDeferRender ) {\n\t\t\t\t\t_fnSortingClasses( oSettings );\n\t\t\t\t}\n\t\t\t}, 'sc' );\n\t\t\n\t\t\n\t\t\t/*\n\t\t\t * Final init\n\t\t\t * Cache the header, body and footer as required, creating them if needed\n\t\t\t */\n\t\t\n\t\t\t// Work around for Webkit bug 83867 - store the caption-side before removing from doc\n\t\t\tvar captions = $this.children('caption').each( function () {\n\t\t\t\tthis._captionSide = $(this).css('caption-side');\n\t\t\t} );\n\t\t\n\t\t\tvar thead = $this.children('thead');\n\t\t\tif ( thead.length === 0 ) {\n\t\t\t\tthead = $('<thead/>').appendTo($this);\n\t\t\t}\n\t\t\toSettings.nTHead = thead[0];\n\t\t\n\t\t\tvar tbody = $this.children('tbody');\n\t\t\tif ( tbody.length === 0 ) {\n\t\t\t\ttbody = $('<tbody/>').insertAfter(thead);\n\t\t\t}\n\t\t\toSettings.nTBody = tbody[0];\n\t\t\n\t\t\tvar tfoot = $this.children('tfoot');\n\t\t\tif ( tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== \"\" || oSettings.oScroll.sY !== \"\") ) {\n\t\t\t\t// If we are a scrolling table, and no footer has been given, then we need to create\n\t\t\t\t// a tfoot element for the caption element to be appended to\n\t\t\t\ttfoot = $('<tfoot/>').appendTo($this);\n\t\t\t}\n\t\t\n\t\t\tif ( tfoot.length === 0 || tfoot.children().length === 0 ) {\n\t\t\t\t$this.addClass( oClasses.sNoFooter );\n\t\t\t}\n\t\t\telse if ( tfoot.length > 0 ) {\n\t\t\t\toSettings.nTFoot = tfoot[0];\n\t\t\t\t_fnDetectHeader( oSettings.aoFooter, oSettings.nTFoot );\n\t\t\t}\n\t\t\n\t\t\t/* Check if there is data passing into the constructor */\n\t\t\tif ( oInit.aaData ) {\n\t\t\t\tfor ( i=0 ; i<oInit.aaData.length ; i++ ) {\n\t\t\t\t\t_fnAddData( oSettings, oInit.aaData[ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( oSettings.bDeferLoading || _fnDataSource( oSettings ) == 'dom' ) {\n\t\t\t\t/* Grab the data from the page - only do this when deferred loading or no Ajax\n\t\t\t\t * source since there is no point in reading the DOM data if we are then going\n\t\t\t\t * to replace it with Ajax data\n\t\t\t\t */\n\t\t\t\t_fnAddTr( oSettings, $(oSettings.nTBody).children('tr') );\n\t\t\t}\n\t\t\n\t\t\t/* Copy the data index array */\n\t\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\t\t\n\t\t\t/* Initialisation complete - table can be drawn */\n\t\t\toSettings.bInitialised = true;\n\t\t\n\t\t\t/* Check if we need to initialise the table (it might not have been handed off to the\n\t\t\t * language processor)\n\t\t\t */\n\t\t\tif ( bInitHandedOff === false ) {\n\t\t\t\t_fnInitialise( oSettings );\n\t\t\t}\n\t\t};\n\t\t\n\t\t/* Must be done after everything which can be overridden by the state saving! */\n\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSaveState, 'state_save' );\n\t\t\n\t\tif ( oInit.bStateSave )\n\t\t{\n\t\t\tfeatures.bStateSave = true;\n\t\t\t_fnLoadState( oSettings, oInit, loadedInit );\n\t\t}\n\t\telse {\n\t\t\tloadedInit();\n\t\t}\n\t\t\n\t} );\n\t_that = null;\n\treturn this;\n};\n\n\n/*\n * It is useful to have variables which are scoped locally so only the\n * DataTables functions can access them and they don't leak into global space.\n * At the same time these functions are often useful over multiple files in the\n * core and API, so we list, or at least document, all variables which are used\n * by DataTables as private variables here. This also ensures that there is no\n * clashing of variable names and that they can easily referenced for reuse.\n */\n\n\n// Defined else where\n//  _selector_run\n//  _selector_opts\n//  _selector_first\n//  _selector_row_indexes\n\nvar _ext; // DataTable.ext\nvar _Api; // DataTable.Api\nvar _api_register; // DataTable.Api.register\nvar _api_registerPlural; // DataTable.Api.registerPlural\n\nvar _re_dic = {};\nvar _re_new_lines = /[\\r\\n\\u2028]/g;\nvar _re_html = /<.*?>/g;\n\n// This is not strict ISO8601 - Date.parse() is quite lax, although\n// implementations differ between browsers.\nvar _re_date = /^\\d{2,4}[\\.\\/\\-]\\d{1,2}[\\.\\/\\-]\\d{1,2}([T ]{1}\\d{1,2}[:\\.]\\d{2}([\\.:]\\d{2})?)?$/;\n\n// Escape regular expression special characters\nvar _re_escape_regex = new RegExp( '(\\\\' + [ '/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-' ].join('|\\\\') + ')', 'g' );\n\n// http://en.wikipedia.org/wiki/Foreign_exchange_market\n// - \\u20BD - Russian ruble.\n// - \\u20a9 - South Korean Won\n// - \\u20BA - Turkish Lira\n// - \\u20B9 - Indian Rupee\n// - R - Brazil (R$) and South Africa\n// - fr - Swiss Franc\n// - kr - Swedish krona, Norwegian krone and Danish krone\n// - \\u2009 is thin space and \\u202F is narrow no-break space, both used in many\n// - É - Bitcoin\n// - Î - Ethereum\n//   standards as thousands separators.\nvar _re_formatted_numeric = /['\\u00A0,$Â£â¬Â¥%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfkÉÎ]/gi;\n\n\nvar _empty = function ( d ) {\n\treturn !d || d === true || d === '-' ? true : false;\n};\n\n\nvar _intVal = function ( s ) {\n\tvar integer = parseInt( s, 10 );\n\treturn !isNaN(integer) && isFinite(s) ? integer : null;\n};\n\n// Convert from a formatted number with characters other than `.` as the\n// decimal place, to a Javascript number\nvar _numToDecimal = function ( num, decimalPoint ) {\n\t// Cache created regular expressions for speed as this function is called often\n\tif ( ! _re_dic[ decimalPoint ] ) {\n\t\t_re_dic[ decimalPoint ] = new RegExp( _fnEscapeRegex( decimalPoint ), 'g' );\n\t}\n\treturn typeof num === 'string' && decimalPoint !== '.' ?\n\t\tnum.replace( /\\./g, '' ).replace( _re_dic[ decimalPoint ], '.' ) :\n\t\tnum;\n};\n\n\nvar _isNumber = function ( d, decimalPoint, formatted ) {\n\tvar strType = typeof d === 'string';\n\n\t// If empty return immediately so there must be a number if it is a\n\t// formatted string (this stops the string \"k\", or \"kr\", etc being detected\n\t// as a formatted number for currency\n\tif ( _empty( d ) ) {\n\t\treturn true;\n\t}\n\n\tif ( decimalPoint && strType ) {\n\t\td = _numToDecimal( d, decimalPoint );\n\t}\n\n\tif ( formatted && strType ) {\n\t\td = d.replace( _re_formatted_numeric, '' );\n\t}\n\n\treturn !isNaN( parseFloat(d) ) && isFinite( d );\n};\n\n\n// A string without HTML in it can be considered to be HTML still\nvar _isHtml = function ( d ) {\n\treturn _empty( d ) || typeof d === 'string';\n};\n\n\nvar _htmlNumeric = function ( d, decimalPoint, formatted ) {\n\tif ( _empty( d ) ) {\n\t\treturn true;\n\t}\n\n\tvar html = _isHtml( d );\n\treturn ! html ?\n\t\tnull :\n\t\t_isNumber( _stripHtml( d ), decimalPoint, formatted ) ?\n\t\t\ttrue :\n\t\t\tnull;\n};\n\n\nvar _pluck = function ( a, prop, prop2 ) {\n\tvar out = [];\n\tvar i=0, ien=a.length;\n\n\t// Could have the test in the loop for slightly smaller code, but speed\n\t// is essential here\n\tif ( prop2 !== undefined ) {\n\t\tfor ( ; i<ien ; i++ ) {\n\t\t\tif ( a[i] && a[i][ prop ] ) {\n\t\t\t\tout.push( a[i][ prop ][ prop2 ] );\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tfor ( ; i<ien ; i++ ) {\n\t\t\tif ( a[i] ) {\n\t\t\t\tout.push( a[i][ prop ] );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn out;\n};\n\n\n// Basically the same as _pluck, but rather than looping over `a` we use `order`\n// as the indexes to pick from `a`\nvar _pluck_order = function ( a, order, prop, prop2 )\n{\n\tvar out = [];\n\tvar i=0, ien=order.length;\n\n\t// Could have the test in the loop for slightly smaller code, but speed\n\t// is essential here\n\tif ( prop2 !== undefined ) {\n\t\tfor ( ; i<ien ; i++ ) {\n\t\t\tif ( a[ order[i] ][ prop ] ) {\n\t\t\t\tout.push( a[ order[i] ][ prop ][ prop2 ] );\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tfor ( ; i<ien ; i++ ) {\n\t\t\tout.push( a[ order[i] ][ prop ] );\n\t\t}\n\t}\n\n\treturn out;\n};\n\n\nvar _range = function ( len, start )\n{\n\tvar out = [];\n\tvar end;\n\n\tif ( start === undefined ) {\n\t\tstart = 0;\n\t\tend = len;\n\t}\n\telse {\n\t\tend = start;\n\t\tstart = len;\n\t}\n\n\tfor ( var i=start ; i<end ; i++ ) {\n\t\tout.push( i );\n\t}\n\n\treturn out;\n};\n\n\nvar _removeEmpty = function ( a )\n{\n\tvar out = [];\n\n\tfor ( var i=0, ien=a.length ; i<ien ; i++ ) {\n\t\tif ( a[i] ) { // careful - will remove all falsy values!\n\t\t\tout.push( a[i] );\n\t\t}\n\t}\n\n\treturn out;\n};\n\n\nvar _stripHtml = function ( d ) {\n\treturn d.replace( _re_html, '' );\n};\n\n\n/**\n * Determine if all values in the array are unique. This means we can short\n * cut the _unique method at the cost of a single loop. A sorted array is used\n * to easily check the values.\n *\n * @param  {array} src Source array\n * @return {boolean} true if all unique, false otherwise\n * @ignore\n */\nvar _areAllUnique = function ( src ) {\n\tif ( src.length < 2 ) {\n\t\treturn true;\n\t}\n\n\tvar sorted = src.slice().sort();\n\tvar last = sorted[0];\n\n\tfor ( var i=1, ien=sorted.length ; i<ien ; i++ ) {\n\t\tif ( sorted[i] === last ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlast = sorted[i];\n\t}\n\n\treturn true;\n};\n\n\n/**\n * Find the unique elements in a source array.\n *\n * @param  {array} src Source array\n * @return {array} Array of unique items\n * @ignore\n */\nvar _unique = function ( src )\n{\n\tif ( _areAllUnique( src ) ) {\n\t\treturn src.slice();\n\t}\n\n\t// A faster unique method is to use object keys to identify used values,\n\t// but this doesn't work with arrays or objects, which we must also\n\t// consider. See jsperf.com/compare-array-unique-versions/4 for more\n\t// information.\n\tvar\n\t\tout = [],\n\t\tval,\n\t\ti, ien=src.length,\n\t\tj, k=0;\n\n\tagain: for ( i=0 ; i<ien ; i++ ) {\n\t\tval = src[i];\n\n\t\tfor ( j=0 ; j<k ; j++ ) {\n\t\t\tif ( out[j] === val ) {\n\t\t\t\tcontinue again;\n\t\t\t}\n\t\t}\n\n\t\tout.push( val );\n\t\tk++;\n\t}\n\n\treturn out;\n};\n\n// Surprisingly this is faster than [].concat.apply\n// https://jsperf.com/flatten-an-array-loop-vs-reduce/2\nvar _flatten = function (out, val) {\n\tif (Array.isArray(val)) {\n\t\tfor (var i=0 ; i<val.length ; i++) {\n\t\t\t_flatten(out, val[i]);\n\t\t}\n\t}\n\telse {\n\t\tout.push(val);\n\t}\n  \n\treturn out;\n}\n\nvar _includes = function (search, start) {\n\tif (start === undefined) {\n\t\tstart = 0;\n\t}\n\n\treturn this.indexOf(search, start) !== -1;\t\n};\n\n// Array.isArray polyfill.\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray\nif (! Array.isArray) {\n    Array.isArray = function(arg) {\n        return Object.prototype.toString.call(arg) === '[object Array]';\n    };\n}\n\nif (! Array.prototype.includes) {\n\tArray.prototype.includes = _includes;\n}\n\n// .trim() polyfill\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/trim\nif (!String.prototype.trim) {\n  String.prototype.trim = function () {\n    return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  };\n}\n\nif (! String.prototype.includes) {\n\tString.prototype.includes = _includes;\n}\n\n/**\n * DataTables utility methods\n * \n * This namespace provides helper methods that DataTables uses internally to\n * create a DataTable, but which are not exclusively used only for DataTables.\n * These methods can be used by extension authors to save the duplication of\n * code.\n *\n *  @namespace\n */\nDataTable.util = {\n\t/**\n\t * Throttle the calls to a function. Arguments and context are maintained\n\t * for the throttled function.\n\t *\n\t * @param {function} fn Function to be called\n\t * @param {integer} freq Call frequency in mS\n\t * @return {function} Wrapped function\n\t */\n\tthrottle: function ( fn, freq ) {\n\t\tvar\n\t\t\tfrequency = freq !== undefined ? freq : 200,\n\t\t\tlast,\n\t\t\ttimer;\n\n\t\treturn function () {\n\t\t\tvar\n\t\t\t\tthat = this,\n\t\t\t\tnow  = +new Date(),\n\t\t\t\targs = arguments;\n\n\t\t\tif ( last && now < last + frequency ) {\n\t\t\t\tclearTimeout( timer );\n\n\t\t\t\ttimer = setTimeout( function () {\n\t\t\t\t\tlast = undefined;\n\t\t\t\t\tfn.apply( that, args );\n\t\t\t\t}, frequency );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlast = now;\n\t\t\t\tfn.apply( that, args );\n\t\t\t}\n\t\t};\n\t},\n\n\n\t/**\n\t * Escape a string such that it can be used in a regular expression\n\t *\n\t *  @param {string} val string to escape\n\t *  @returns {string} escaped string\n\t */\n\tescapeRegex: function ( val ) {\n\t\treturn val.replace( _re_escape_regex, '\\\\$1' );\n\t},\n\n\t/**\n\t * Create a function that will write to a nested object or array\n\t * @param {*} source JSON notation string\n\t * @returns Write function\n\t */\n\tset: function ( source ) {\n\t\tif ( $.isPlainObject( source ) ) {\n\t\t\t/* Unlike get, only the underscore (global) option is used for for\n\t\t\t * setting data since we don't know the type here. This is why an object\n\t\t\t * option is not documented for `mData` (which is read/write), but it is\n\t\t\t * for `mRender` which is read only.\n\t\t\t */\n\t\t\treturn DataTable.util.set( source._ );\n\t\t}\n\t\telse if ( source === null ) {\n\t\t\t// Nothing to do when the data source is null\n\t\t\treturn function () {};\n\t\t}\n\t\telse if ( typeof source === 'function' ) {\n\t\t\treturn function (data, val, meta) {\n\t\t\t\tsource( data, 'set', val, meta );\n\t\t\t};\n\t\t}\n\t\telse if ( typeof source === 'string' && (source.indexOf('.') !== -1 ||\n\t\t\t\t  source.indexOf('[') !== -1 || source.indexOf('(') !== -1) )\n\t\t{\n\t\t\t// Like the get, we need to get data from a nested object\n\t\t\tvar setData = function (data, val, src) {\n\t\t\t\tvar a = _fnSplitObjNotation( src ), b;\n\t\t\t\tvar aLast = a[a.length-1];\n\t\t\t\tvar arrayNotation, funcNotation, o, innerSrc;\n\t\n\t\t\t\tfor ( var i=0, iLen=a.length-1 ; i<iLen ; i++ ) {\n\t\t\t\t\t// Protect against prototype pollution\n\t\t\t\t\tif (a[i] === '__proto__' || a[i] === 'constructor') {\n\t\t\t\t\t\tthrow new Error('Cannot set prototype values');\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Check if we are dealing with an array notation request\n\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\t\n\t\t\t\t\tif ( arrayNotation ) {\n\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\t\t\t\t\tdata[ a[i] ] = [];\n\t\n\t\t\t\t\t\t// Get the remainder of the nested object to set so we can recurse\n\t\t\t\t\t\tb = a.slice();\n\t\t\t\t\t\tb.splice( 0, i+1 );\n\t\t\t\t\t\tinnerSrc = b.join('.');\n\t\n\t\t\t\t\t\t// Traverse each entry in the array setting the properties requested\n\t\t\t\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\t\t\t\tfor ( var j=0, jLen=val.length ; j<jLen ; j++ ) {\n\t\t\t\t\t\t\t\to = {};\n\t\t\t\t\t\t\t\tsetData( o, val[j], innerSrc );\n\t\t\t\t\t\t\t\tdata[ a[i] ].push( o );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// We've been asked to save data to an array, but it\n\t\t\t\t\t\t\t// isn't array data to be saved. Best that can be done\n\t\t\t\t\t\t\t// is to just save the value.\n\t\t\t\t\t\t\tdata[ a[i] ] = val;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// The inner call to setData has already traversed through the remainder\n\t\t\t\t\t\t// of the source and has set the data, thus we can exit here\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( funcNotation ) {\n\t\t\t\t\t\t// Function call\n\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\tdata = data[ a[i] ]( val );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// If the nested object doesn't currently exist - since we are\n\t\t\t\t\t// trying to set the value - create it\n\t\t\t\t\tif ( data[ a[i] ] === null || data[ a[i] ] === undefined ) {\n\t\t\t\t\t\tdata[ a[i] ] = {};\n\t\t\t\t\t}\n\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t}\n\t\n\t\t\t\t// Last item in the input - i.e, the actual set\n\t\t\t\tif ( aLast.match(__reFn ) ) {\n\t\t\t\t\t// Function call\n\t\t\t\t\tdata = data[ aLast.replace(__reFn, '') ]( val );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// If array notation is used, we just want to strip it and use the property name\n\t\t\t\t\t// and assign the value. If it isn't used, then we get the result we want anyway\n\t\t\t\t\tdata[ aLast.replace(__reArray, '') ] = val;\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\treturn setData( data, val, source );\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\t// Array or flat object mapping\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\tdata[source] = val;\n\t\t\t};\n\t\t}\n\t},\n\n\t/**\n\t * Create a function that will read nested objects from arrays, based on JSON notation\n\t * @param {*} source JSON notation string\n\t * @returns Value read\n\t */\n\tget: function ( source ) {\n\t\tif ( $.isPlainObject( source ) ) {\n\t\t\t// Build an object of get functions, and wrap them in a single call\n\t\t\tvar o = {};\n\t\t\t$.each( source, function (key, val) {\n\t\t\t\tif ( val ) {\n\t\t\t\t\to[key] = DataTable.util.get( val );\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\treturn function (data, type, row, meta) {\n\t\t\t\tvar t = o[type] || o._;\n\t\t\t\treturn t !== undefined ?\n\t\t\t\t\tt(data, type, row, meta) :\n\t\t\t\t\tdata;\n\t\t\t};\n\t\t}\n\t\telse if ( source === null ) {\n\t\t\t// Give an empty string for rendering / sorting etc\n\t\t\treturn function (data) { // type, row and meta also passed, but not used\n\t\t\t\treturn data;\n\t\t\t};\n\t\t}\n\t\telse if ( typeof source === 'function' ) {\n\t\t\treturn function (data, type, row, meta) {\n\t\t\t\treturn source( data, type, row, meta );\n\t\t\t};\n\t\t}\n\t\telse if ( typeof source === 'string' && (source.indexOf('.') !== -1 ||\n\t\t\t\t  source.indexOf('[') !== -1 || source.indexOf('(') !== -1) )\n\t\t{\n\t\t\t/* If there is a . in the source string then the data source is in a\n\t\t\t * nested object so we loop over the data for each level to get the next\n\t\t\t * level down. On each loop we test for undefined, and if found immediately\n\t\t\t * return. This allows entire objects to be missing and sDefaultContent to\n\t\t\t * be used if defined, rather than throwing an error\n\t\t\t */\n\t\t\tvar fetchData = function (data, type, src) {\n\t\t\t\tvar arrayNotation, funcNotation, out, innerSrc;\n\t\n\t\t\t\tif ( src !== \"\" ) {\n\t\t\t\t\tvar a = _fnSplitObjNotation( src );\n\t\n\t\t\t\t\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ ) {\n\t\t\t\t\t\t// Check if we are dealing with special notation\n\t\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\t\n\t\t\t\t\t\tif ( arrayNotation ) {\n\t\t\t\t\t\t\t// Array notation\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\n\t\t\t\t\t\t\t// Condition allows simply [] to be passed in\n\t\t\t\t\t\t\tif ( a[i] !== \"\" ) {\n\t\t\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tout = [];\n\t\n\t\t\t\t\t\t\t// Get the remainder of the nested object to get\n\t\t\t\t\t\t\ta.splice( 0, i+1 );\n\t\t\t\t\t\t\tinnerSrc = a.join('.');\n\t\n\t\t\t\t\t\t\t// Traverse each entry in the array getting the properties requested\n\t\t\t\t\t\t\tif ( Array.isArray( data ) ) {\n\t\t\t\t\t\t\t\tfor ( var j=0, jLen=data.length ; j<jLen ; j++ ) {\n\t\t\t\t\t\t\t\t\tout.push( fetchData( data[j], type, innerSrc ) );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// If a string is given in between the array notation indicators, that\n\t\t\t\t\t\t\t// is used to join the strings together, otherwise an array is returned\n\t\t\t\t\t\t\tvar join = arrayNotation[0].substring(1, arrayNotation[0].length-1);\n\t\t\t\t\t\t\tdata = (join===\"\") ? out : out.join(join);\n\t\n\t\t\t\t\t\t\t// The inner call to fetchData has already traversed through the remainder\n\t\t\t\t\t\t\t// of the source requested, so we exit from the loop\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( funcNotation ) {\n\t\t\t\t\t\t\t// Function call\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\t\tdata = data[ a[i] ]();\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( data === null || data[ a[i] ] === undefined ) {\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn data;\n\t\t\t};\n\t\n\t\t\treturn function (data, type) { // row and meta also passed, but not used\n\t\t\t\treturn fetchData( data, type, source );\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\t// Array or flat object mapping\n\t\t\treturn function (data, type) { // row and meta also passed, but not used\n\t\t\t\treturn data[source];\n\t\t\t};\n\t\t}\n\t}\n};\n\n\n\n/**\n * Create a mapping object that allows camel case parameters to be looked up\n * for their Hungarian counterparts. The mapping is stored in a private\n * parameter called `_hungarianMap` which can be accessed on the source object.\n *  @param {object} o\n *  @memberof DataTable#oApi\n */\nfunction _fnHungarianMap ( o )\n{\n\tvar\n\t\thungarian = 'a aa ai ao as b fn i m o s ',\n\t\tmatch,\n\t\tnewKey,\n\t\tmap = {};\n\n\t$.each( o, function (key, val) {\n\t\tmatch = key.match(/^([^A-Z]+?)([A-Z])/);\n\n\t\tif ( match && hungarian.indexOf(match[1]+' ') !== -1 )\n\t\t{\n\t\t\tnewKey = key.replace( match[0], match[2].toLowerCase() );\n\t\t\tmap[ newKey ] = key;\n\n\t\t\tif ( match[1] === 'o' )\n\t\t\t{\n\t\t\t\t_fnHungarianMap( o[key] );\n\t\t\t}\n\t\t}\n\t} );\n\n\to._hungarianMap = map;\n}\n\n\n/**\n * Convert from camel case parameters to Hungarian, based on a Hungarian map\n * created by _fnHungarianMap.\n *  @param {object} src The model object which holds all parameters that can be\n *    mapped.\n *  @param {object} user The object to convert from camel case to Hungarian.\n *  @param {boolean} force When set to `true`, properties which already have a\n *    Hungarian value in the `user` object will be overwritten. Otherwise they\n *    won't be.\n *  @memberof DataTable#oApi\n */\nfunction _fnCamelToHungarian ( src, user, force )\n{\n\tif ( ! src._hungarianMap ) {\n\t\t_fnHungarianMap( src );\n\t}\n\n\tvar hungarianKey;\n\n\t$.each( user, function (key, val) {\n\t\thungarianKey = src._hungarianMap[ key ];\n\n\t\tif ( hungarianKey !== undefined && (force || user[hungarianKey] === undefined) )\n\t\t{\n\t\t\t// For objects, we need to buzz down into the object to copy parameters\n\t\t\tif ( hungarianKey.charAt(0) === 'o' )\n\t\t\t{\n\t\t\t\t// Copy the camelCase options over to the hungarian\n\t\t\t\tif ( ! user[ hungarianKey ] ) {\n\t\t\t\t\tuser[ hungarianKey ] = {};\n\t\t\t\t}\n\t\t\t\t$.extend( true, user[hungarianKey], user[key] );\n\n\t\t\t\t_fnCamelToHungarian( src[hungarianKey], user[hungarianKey], force );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tuser[hungarianKey] = user[ key ];\n\t\t\t}\n\t\t}\n\t} );\n}\n\n\n/**\n * Language compatibility - when certain options are given, and others aren't, we\n * need to duplicate the values over, in order to provide backwards compatibility\n * with older language files.\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnLanguageCompat( lang )\n{\n\t// Note the use of the Hungarian notation for the parameters in this method as\n\t// this is called after the mapping of camelCase to Hungarian\n\tvar defaults = DataTable.defaults.oLanguage;\n\n\t// Default mapping\n\tvar defaultDecimal = defaults.sDecimal;\n\tif ( defaultDecimal ) {\n\t\t_addNumericSort( defaultDecimal );\n\t}\n\n\tif ( lang ) {\n\t\tvar zeroRecords = lang.sZeroRecords;\n\n\t\t// Backwards compatibility - if there is no sEmptyTable given, then use the same as\n\t\t// sZeroRecords - assuming that is given.\n\t\tif ( ! lang.sEmptyTable && zeroRecords &&\n\t\t\tdefaults.sEmptyTable === \"No data available in table\" )\n\t\t{\n\t\t\t_fnMap( lang, lang, 'sZeroRecords', 'sEmptyTable' );\n\t\t}\n\n\t\t// Likewise with loading records\n\t\tif ( ! lang.sLoadingRecords && zeroRecords &&\n\t\t\tdefaults.sLoadingRecords === \"Loading...\" )\n\t\t{\n\t\t\t_fnMap( lang, lang, 'sZeroRecords', 'sLoadingRecords' );\n\t\t}\n\n\t\t// Old parameter name of the thousands separator mapped onto the new\n\t\tif ( lang.sInfoThousands ) {\n\t\t\tlang.sThousands = lang.sInfoThousands;\n\t\t}\n\n\t\tvar decimal = lang.sDecimal;\n\t\tif ( decimal && defaultDecimal !== decimal ) {\n\t\t\t_addNumericSort( decimal );\n\t\t}\n\t}\n}\n\n\n/**\n * Map one parameter onto another\n *  @param {object} o Object to map\n *  @param {*} knew The new parameter name\n *  @param {*} old The old parameter name\n */\nvar _fnCompatMap = function ( o, knew, old ) {\n\tif ( o[ knew ] !== undefined ) {\n\t\to[ old ] = o[ knew ];\n\t}\n};\n\n\n/**\n * Provide backwards compatibility for the main DT options. Note that the new\n * options are mapped onto the old parameters, so this is an external interface\n * change only.\n *  @param {object} init Object to map\n */\nfunction _fnCompatOpts ( init )\n{\n\t_fnCompatMap( init, 'ordering',      'bSort' );\n\t_fnCompatMap( init, 'orderMulti',    'bSortMulti' );\n\t_fnCompatMap( init, 'orderClasses',  'bSortClasses' );\n\t_fnCompatMap( init, 'orderCellsTop', 'bSortCellsTop' );\n\t_fnCompatMap( init, 'order',         'aaSorting' );\n\t_fnCompatMap( init, 'orderFixed',    'aaSortingFixed' );\n\t_fnCompatMap( init, 'paging',        'bPaginate' );\n\t_fnCompatMap( init, 'pagingType',    'sPaginationType' );\n\t_fnCompatMap( init, 'pageLength',    'iDisplayLength' );\n\t_fnCompatMap( init, 'searching',     'bFilter' );\n\n\t// Boolean initialisation of x-scrolling\n\tif ( typeof init.sScrollX === 'boolean' ) {\n\t\tinit.sScrollX = init.sScrollX ? '100%' : '';\n\t}\n\tif ( typeof init.scrollX === 'boolean' ) {\n\t\tinit.scrollX = init.scrollX ? '100%' : '';\n\t}\n\n\t// Column search objects are in an array, so it needs to be converted\n\t// element by element\n\tvar searchCols = init.aoSearchCols;\n\n\tif ( searchCols ) {\n\t\tfor ( var i=0, ien=searchCols.length ; i<ien ; i++ ) {\n\t\t\tif ( searchCols[i] ) {\n\t\t\t\t_fnCamelToHungarian( DataTable.models.oSearch, searchCols[i] );\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/**\n * Provide backwards compatibility for column options. Note that the new options\n * are mapped onto the old parameters, so this is an external interface change\n * only.\n *  @param {object} init Object to map\n */\nfunction _fnCompatCols ( init )\n{\n\t_fnCompatMap( init, 'orderable',     'bSortable' );\n\t_fnCompatMap( init, 'orderData',     'aDataSort' );\n\t_fnCompatMap( init, 'orderSequence', 'asSorting' );\n\t_fnCompatMap( init, 'orderDataType', 'sortDataType' );\n\n\t// orderData can be given as an integer\n\tvar dataSort = init.aDataSort;\n\tif ( typeof dataSort === 'number' && ! Array.isArray( dataSort ) ) {\n\t\tinit.aDataSort = [ dataSort ];\n\t}\n}\n\n\n/**\n * Browser feature detection for capabilities, quirks\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnBrowserDetect( settings )\n{\n\t// We don't need to do this every time DataTables is constructed, the values\n\t// calculated are specific to the browser and OS configuration which we\n\t// don't expect to change between initialisations\n\tif ( ! DataTable.__browser ) {\n\t\tvar browser = {};\n\t\tDataTable.__browser = browser;\n\n\t\t// Scrolling feature / quirks detection\n\t\tvar n = $('<div/>')\n\t\t\t.css( {\n\t\t\t\tposition: 'fixed',\n\t\t\t\ttop: 0,\n\t\t\t\tleft: $(window).scrollLeft()*-1, // allow for scrolling\n\t\t\t\theight: 1,\n\t\t\t\twidth: 1,\n\t\t\t\toverflow: 'hidden'\n\t\t\t} )\n\t\t\t.append(\n\t\t\t\t$('<div/>')\n\t\t\t\t\t.css( {\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\ttop: 1,\n\t\t\t\t\t\tleft: 1,\n\t\t\t\t\t\twidth: 100,\n\t\t\t\t\t\toverflow: 'scroll'\n\t\t\t\t\t} )\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$('<div/>')\n\t\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\theight: 10\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t)\n\t\t\t)\n\t\t\t.appendTo( 'body' );\n\n\t\tvar outer = n.children();\n\t\tvar inner = outer.children();\n\n\t\t// Numbers below, in order, are:\n\t\t// inner.offsetWidth, inner.clientWidth, outer.offsetWidth, outer.clientWidth\n\t\t//\n\t\t// IE6 XP:                           100 100 100  83\n\t\t// IE7 Vista:                        100 100 100  83\n\t\t// IE 8+ Windows:                     83  83 100  83\n\t\t// Evergreen Windows:                 83  83 100  83\n\t\t// Evergreen Mac with scrollbars:     85  85 100  85\n\t\t// Evergreen Mac without scrollbars: 100 100 100 100\n\n\t\t// Get scrollbar width\n\t\tbrowser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;\n\n\t\t// IE6/7 will oversize a width 100% element inside a scrolling element, to\n\t\t// include the width of the scrollbar, while other browsers ensure the inner\n\t\t// element is contained without forcing scrolling\n\t\tbrowser.bScrollOversize = inner[0].offsetWidth === 100 && outer[0].clientWidth !== 100;\n\n\t\t// In rtl text layout, some browsers (most, but not all) will place the\n\t\t// scrollbar on the left, rather than the right.\n\t\tbrowser.bScrollbarLeft = Math.round( inner.offset().left ) !== 1;\n\n\t\t// IE8- don't provide height and width for getBoundingClientRect\n\t\tbrowser.bBounding = n[0].getBoundingClientRect().width ? true : false;\n\n\t\tn.remove();\n\t}\n\n\t$.extend( settings.oBrowser, DataTable.__browser );\n\tsettings.oScroll.iBarWidth = DataTable.__browser.barWidth;\n}\n\n\n/**\n * Array.prototype reduce[Right] method, used for browsers which don't support\n * JS 1.6. Done this way to reduce code size, since we iterate either way\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnReduce ( that, fn, init, start, end, inc )\n{\n\tvar\n\t\ti = start,\n\t\tvalue,\n\t\tisSet = false;\n\n\tif ( init !== undefined ) {\n\t\tvalue = init;\n\t\tisSet = true;\n\t}\n\n\twhile ( i !== end ) {\n\t\tif ( ! that.hasOwnProperty(i) ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvalue = isSet ?\n\t\t\tfn( value, that[i], i, that ) :\n\t\t\tthat[i];\n\n\t\tisSet = true;\n\t\ti += inc;\n\t}\n\n\treturn value;\n}\n\n/**\n * Add a column to the list used for the table with default values\n *  @param {object} oSettings dataTables settings object\n *  @param {node} nTh The th element for this column\n *  @memberof DataTable#oApi\n */\nfunction _fnAddColumn( oSettings, nTh )\n{\n\t// Add column to aoColumns array\n\tvar oDefaults = DataTable.defaults.column;\n\tvar iCol = oSettings.aoColumns.length;\n\tvar oCol = $.extend( {}, DataTable.models.oColumn, oDefaults, {\n\t\t\"nTh\": nTh ? nTh : document.createElement('th'),\n\t\t\"sTitle\":    oDefaults.sTitle    ? oDefaults.sTitle    : nTh ? nTh.innerHTML : '',\n\t\t\"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\n\t\t\"mData\": oDefaults.mData ? oDefaults.mData : iCol,\n\t\tidx: iCol\n\t} );\n\toSettings.aoColumns.push( oCol );\n\n\t// Add search object for column specific search. Note that the `searchCols[ iCol ]`\n\t// passed into extend can be undefined. This allows the user to give a default\n\t// with only some of the parameters defined, and also not give a default\n\tvar searchCols = oSettings.aoPreSearchCols;\n\tsearchCols[ iCol ] = $.extend( {}, DataTable.models.oSearch, searchCols[ iCol ] );\n\n\t// Use the default column options function to initialise classes etc\n\t_fnColumnOptions( oSettings, iCol, $(nTh).data() );\n}\n\n\n/**\n * Apply options for a column\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iCol column index to consider\n *  @param {object} oOptions object with sType, bVisible and bSearchable etc\n *  @memberof DataTable#oApi\n */\nfunction _fnColumnOptions( oSettings, iCol, oOptions )\n{\n\tvar oCol = oSettings.aoColumns[ iCol ];\n\tvar oClasses = oSettings.oClasses;\n\tvar th = $(oCol.nTh);\n\n\t// Try to get width information from the DOM. We can't get it from CSS\n\t// as we'd need to parse the CSS stylesheet. `width` option can override\n\tif ( ! oCol.sWidthOrig ) {\n\t\t// Width attribute\n\t\toCol.sWidthOrig = th.attr('width') || null;\n\n\t\t// Style attribute\n\t\tvar t = (th.attr('style') || '').match(/width:\\s*(\\d+[pxem%]+)/);\n\t\tif ( t ) {\n\t\t\toCol.sWidthOrig = t[1];\n\t\t}\n\t}\n\n\t/* User specified column options */\n\tif ( oOptions !== undefined && oOptions !== null )\n\t{\n\t\t// Backwards compatibility\n\t\t_fnCompatCols( oOptions );\n\n\t\t// Map camel case parameters to their Hungarian counterparts\n\t\t_fnCamelToHungarian( DataTable.defaults.column, oOptions, true );\n\n\t\t/* Backwards compatibility for mDataProp */\n\t\tif ( oOptions.mDataProp !== undefined && !oOptions.mData )\n\t\t{\n\t\t\toOptions.mData = oOptions.mDataProp;\n\t\t}\n\n\t\tif ( oOptions.sType )\n\t\t{\n\t\t\toCol._sManualType = oOptions.sType;\n\t\t}\n\n\t\t// `class` is a reserved word in Javascript, so we need to provide\n\t\t// the ability to use a valid name for the camel case input\n\t\tif ( oOptions.className && ! oOptions.sClass )\n\t\t{\n\t\t\toOptions.sClass = oOptions.className;\n\t\t}\n\t\tif ( oOptions.sClass ) {\n\t\t\tth.addClass( oOptions.sClass );\n\t\t}\n\n\t\tvar origClass = oCol.sClass;\n\n\t\t$.extend( oCol, oOptions );\n\t\t_fnMap( oCol, oOptions, \"sWidth\", \"sWidthOrig\" );\n\n\t\t// Merge class from previously defined classes with this one, rather than just\n\t\t// overwriting it in the extend above\n\t\tif (origClass !== oCol.sClass) {\n\t\t\toCol.sClass = origClass + ' ' + oCol.sClass;\n\t\t}\n\n\t\t/* iDataSort to be applied (backwards compatibility), but aDataSort will take\n\t\t * priority if defined\n\t\t */\n\t\tif ( oOptions.iDataSort !== undefined )\n\t\t{\n\t\t\toCol.aDataSort = [ oOptions.iDataSort ];\n\t\t}\n\t\t_fnMap( oCol, oOptions, \"aDataSort\" );\n\t}\n\n\t/* Cache the data get and set functions for speed */\n\tvar mDataSrc = oCol.mData;\n\tvar mData = _fnGetObjectDataFn( mDataSrc );\n\tvar mRender = oCol.mRender ? _fnGetObjectDataFn( oCol.mRender ) : null;\n\n\tvar attrTest = function( src ) {\n\t\treturn typeof src === 'string' && src.indexOf('@') !== -1;\n\t};\n\toCol._bAttrSrc = $.isPlainObject( mDataSrc ) && (\n\t\tattrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter)\n\t);\n\toCol._setter = null;\n\n\toCol.fnGetData = function (rowData, type, meta) {\n\t\tvar innerData = mData( rowData, type, undefined, meta );\n\n\t\treturn mRender && type ?\n\t\t\tmRender( innerData, type, rowData, meta ) :\n\t\t\tinnerData;\n\t};\n\toCol.fnSetData = function ( rowData, val, meta ) {\n\t\treturn _fnSetObjectDataFn( mDataSrc )( rowData, val, meta );\n\t};\n\n\t// Indicate if DataTables should read DOM data as an object or array\n\t// Used in _fnGetRowElements\n\tif ( typeof mDataSrc !== 'number' ) {\n\t\toSettings._rowReadObject = true;\n\t}\n\n\t/* Feature sorting overrides column specific when off */\n\tif ( !oSettings.oFeatures.bSort )\n\t{\n\t\toCol.bSortable = false;\n\t\tth.addClass( oClasses.sSortableNone ); // Have to add class here as order event isn't called\n\t}\n\n\t/* Check that the class assignment is correct for sorting */\n\tvar bAsc = $.inArray('asc', oCol.asSorting) !== -1;\n\tvar bDesc = $.inArray('desc', oCol.asSorting) !== -1;\n\tif ( !oCol.bSortable || (!bAsc && !bDesc) )\n\t{\n\t\toCol.sSortingClass = oClasses.sSortableNone;\n\t\toCol.sSortingClassJUI = \"\";\n\t}\n\telse if ( bAsc && !bDesc )\n\t{\n\t\toCol.sSortingClass = oClasses.sSortableAsc;\n\t\toCol.sSortingClassJUI = oClasses.sSortJUIAscAllowed;\n\t}\n\telse if ( !bAsc && bDesc )\n\t{\n\t\toCol.sSortingClass = oClasses.sSortableDesc;\n\t\toCol.sSortingClassJUI = oClasses.sSortJUIDescAllowed;\n\t}\n\telse\n\t{\n\t\toCol.sSortingClass = oClasses.sSortable;\n\t\toCol.sSortingClassJUI = oClasses.sSortJUI;\n\t}\n}\n\n\n/**\n * Adjust the table column widths for new data. Note: you would probably want to\n * do a redraw after calling this function!\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnAdjustColumnSizing ( settings )\n{\n\t/* Not interested in doing column width calculation if auto-width is disabled */\n\tif ( settings.oFeatures.bAutoWidth !== false )\n\t{\n\t\tvar columns = settings.aoColumns;\n\n\t\t_fnCalculateColumnWidths( settings );\n\t\tfor ( var i=0 , iLen=columns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tcolumns[i].nTh.style.width = columns[i].sWidth;\n\t\t}\n\t}\n\n\tvar scroll = settings.oScroll;\n\tif ( scroll.sY !== '' || scroll.sX !== '')\n\t{\n\t\t_fnScrollDraw( settings );\n\t}\n\n\t_fnCallbackFire( settings, null, 'column-sizing', [settings] );\n}\n\n\n/**\n * Convert the index of a visible column to the index in the data array (take account\n * of hidden columns)\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iMatch Visible column index to lookup\n *  @returns {int} i the data index\n *  @memberof DataTable#oApi\n */\nfunction _fnVisibleToColumnIndex( oSettings, iMatch )\n{\n\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\n\treturn typeof aiVis[iMatch] === 'number' ?\n\t\taiVis[iMatch] :\n\t\tnull;\n}\n\n\n/**\n * Convert the index of an index in the data array and convert it to the visible\n *   column index (take account of hidden columns)\n *  @param {int} iMatch Column index to lookup\n *  @param {object} oSettings dataTables settings object\n *  @returns {int} i the data index\n *  @memberof DataTable#oApi\n */\nfunction _fnColumnIndexToVisible( oSettings, iMatch )\n{\n\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\tvar iPos = $.inArray( iMatch, aiVis );\n\n\treturn iPos !== -1 ? iPos : null;\n}\n\n\n/**\n * Get the number of visible columns\n *  @param {object} oSettings dataTables settings object\n *  @returns {int} i the number of visible columns\n *  @memberof DataTable#oApi\n */\nfunction _fnVisbleColumns( oSettings )\n{\n\tvar vis = 0;\n\n\t// No reduce in IE8, use a loop for now\n\t$.each( oSettings.aoColumns, function ( i, col ) {\n\t\tif ( col.bVisible && $(col.nTh).css('display') !== 'none' ) {\n\t\t\tvis++;\n\t\t}\n\t} );\n\n\treturn vis;\n}\n\n\n/**\n * Get an array of column indexes that match a given property\n *  @param {object} oSettings dataTables settings object\n *  @param {string} sParam Parameter in aoColumns to look for - typically\n *    bVisible or bSearchable\n *  @returns {array} Array of indexes with matched properties\n *  @memberof DataTable#oApi\n */\nfunction _fnGetColumns( oSettings, sParam )\n{\n\tvar a = [];\n\n\t$.map( oSettings.aoColumns, function(val, i) {\n\t\tif ( val[sParam] ) {\n\t\t\ta.push( i );\n\t\t}\n\t} );\n\n\treturn a;\n}\n\n\n/**\n * Calculate the 'type' of a column\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnColumnTypes ( settings )\n{\n\tvar columns = settings.aoColumns;\n\tvar data = settings.aoData;\n\tvar types = DataTable.ext.type.detect;\n\tvar i, ien, j, jen, k, ken;\n\tvar col, cell, detectedType, cache;\n\n\t// For each column, spin over the \n\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\tcol = columns[i];\n\t\tcache = [];\n\n\t\tif ( ! col.sType && col._sManualType ) {\n\t\t\tcol.sType = col._sManualType;\n\t\t}\n\t\telse if ( ! col.sType ) {\n\t\t\tfor ( j=0, jen=types.length ; j<jen ; j++ ) {\n\t\t\t\tfor ( k=0, ken=data.length ; k<ken ; k++ ) {\n\t\t\t\t\t// Use a cache array so we only need to get the type data\n\t\t\t\t\t// from the formatter once (when using multiple detectors)\n\t\t\t\t\tif ( cache[k] === undefined ) {\n\t\t\t\t\t\tcache[k] = _fnGetCellData( settings, k, i, 'type' );\n\t\t\t\t\t}\n\n\t\t\t\t\tdetectedType = types[j]( cache[k], settings );\n\n\t\t\t\t\t// If null, then this type can't apply to this column, so\n\t\t\t\t\t// rather than testing all cells, break out. There is an\n\t\t\t\t\t// exception for the last type which is `html`. We need to\n\t\t\t\t\t// scan all rows since it is possible to mix string and HTML\n\t\t\t\t\t// types\n\t\t\t\t\tif ( ! detectedType && j !== types.length-1 ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only a single match is needed for html type since it is\n\t\t\t\t\t// bottom of the pile and very similar to string - but it\n\t\t\t\t\t// must not be empty\n\t\t\t\t\tif ( detectedType === 'html' && ! _empty(cache[k]) ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Type is valid for all data points in the column - use this\n\t\t\t\t// type\n\t\t\t\tif ( detectedType ) {\n\t\t\t\t\tcol.sType = detectedType;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Fall back - if no type was detected, always use string\n\t\t\tif ( ! col.sType ) {\n\t\t\t\tcol.sType = 'string';\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/**\n * Take the column definitions and static columns arrays and calculate how\n * they relate to column indexes. The callback function will then apply the\n * definition found for a column to a suitable configuration object.\n *  @param {object} oSettings dataTables settings object\n *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\n *  @param {array} aoCols The aoColumns array that defines columns individually\n *  @param {function} fn Callback function - takes two parameters, the calculated\n *    column index and the definition for that column.\n *  @memberof DataTable#oApi\n */\nfunction _fnApplyColumnDefs( oSettings, aoColDefs, aoCols, fn )\n{\n\tvar i, iLen, j, jLen, k, kLen, def;\n\tvar columns = oSettings.aoColumns;\n\n\t// Column definitions with aTargets\n\tif ( aoColDefs )\n\t{\n\t\t/* Loop over the definitions array - loop in reverse so first instance has priority */\n\t\tfor ( i=aoColDefs.length-1 ; i>=0 ; i-- )\n\t\t{\n\t\t\tdef = aoColDefs[i];\n\n\t\t\t/* Each definition can target multiple columns, as it is an array */\n\t\t\tvar aTargets = def.target !== undefined\n\t\t\t\t? def.target\n\t\t\t\t: def.targets !== undefined\n\t\t\t\t\t? def.targets\n\t\t\t\t\t: def.aTargets;\n\n\t\t\tif ( ! Array.isArray( aTargets ) )\n\t\t\t{\n\t\t\t\taTargets = [ aTargets ];\n\t\t\t}\n\n\t\t\tfor ( j=0, jLen=aTargets.length ; j<jLen ; j++ )\n\t\t\t{\n\t\t\t\tif ( typeof aTargets[j] === 'number' && aTargets[j] >= 0 )\n\t\t\t\t{\n\t\t\t\t\t/* Add columns that we don't yet know about */\n\t\t\t\t\twhile( columns.length <= aTargets[j] )\n\t\t\t\t\t{\n\t\t\t\t\t\t_fnAddColumn( oSettings );\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Integer, basic index */\n\t\t\t\t\tfn( aTargets[j], def );\n\t\t\t\t}\n\t\t\t\telse if ( typeof aTargets[j] === 'number' && aTargets[j] < 0 )\n\t\t\t\t{\n\t\t\t\t\t/* Negative integer, right to left column counting */\n\t\t\t\t\tfn( columns.length+aTargets[j], def );\n\t\t\t\t}\n\t\t\t\telse if ( typeof aTargets[j] === 'string' )\n\t\t\t\t{\n\t\t\t\t\t/* Class name matching on TH element */\n\t\t\t\t\tfor ( k=0, kLen=columns.length ; k<kLen ; k++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( aTargets[j] == \"_all\" ||\n\t\t\t\t\t\t     $(columns[k].nTh).hasClass( aTargets[j] ) )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfn( k, def );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Statically defined columns array\n\tif ( aoCols )\n\t{\n\t\tfor ( i=0, iLen=aoCols.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tfn( i, aoCols[i] );\n\t\t}\n\t}\n}\n\n/**\n * Add a data array to the table, creating DOM node etc. This is the parallel to\n * _fnGatherData, but for adding rows from a Javascript source, rather than a\n * DOM source.\n *  @param {object} oSettings dataTables settings object\n *  @param {array} aData data array to be added\n *  @param {node} [nTr] TR element to add to the table - optional. If not given,\n *    DataTables will create a row automatically\n *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n *    if nTr is.\n *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\n *  @memberof DataTable#oApi\n */\nfunction _fnAddData ( oSettings, aDataIn, nTr, anTds )\n{\n\t/* Create the object for storing information about this new row */\n\tvar iRow = oSettings.aoData.length;\n\tvar oData = $.extend( true, {}, DataTable.models.oRow, {\n\t\tsrc: nTr ? 'dom' : 'data',\n\t\tidx: iRow\n\t} );\n\n\toData._aData = aDataIn;\n\toSettings.aoData.push( oData );\n\n\t/* Create the cells */\n\tvar nTd, sThisType;\n\tvar columns = oSettings.aoColumns;\n\n\t// Invalidate the column types as the new data needs to be revalidated\n\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\n\t{\n\t\tcolumns[i].sType = null;\n\t}\n\n\t/* Add to the display array */\n\toSettings.aiDisplayMaster.push( iRow );\n\n\tvar id = oSettings.rowIdFn( aDataIn );\n\tif ( id !== undefined ) {\n\t\toSettings.aIds[ id ] = oData;\n\t}\n\n\t/* Create the DOM information, or register it if already present */\n\tif ( nTr || ! oSettings.oFeatures.bDeferRender )\n\t{\n\t\t_fnCreateTr( oSettings, iRow, nTr, anTds );\n\t}\n\n\treturn iRow;\n}\n\n\n/**\n * Add one or more TR elements to the table. Generally we'd expect to\n * use this for reading data from a DOM sourced table, but it could be\n * used for an TR element. Note that if a TR is given, it is used (i.e.\n * it is not cloned).\n *  @param {object} settings dataTables settings object\n *  @param {array|node|jQuery} trs The TR element(s) to add to the table\n *  @returns {array} Array of indexes for the added rows\n *  @memberof DataTable#oApi\n */\nfunction _fnAddTr( settings, trs )\n{\n\tvar row;\n\n\t// Allow an individual node to be passed in\n\tif ( ! (trs instanceof $) ) {\n\t\ttrs = $(trs);\n\t}\n\n\treturn trs.map( function (i, el) {\n\t\trow = _fnGetRowElements( settings, el );\n\t\treturn _fnAddData( settings, row.data, el, row.cells );\n\t} );\n}\n\n\n/**\n * Take a TR element and convert it to an index in aoData\n *  @param {object} oSettings dataTables settings object\n *  @param {node} n the TR element to find\n *  @returns {int} index if the node is found, null if not\n *  @memberof DataTable#oApi\n */\nfunction _fnNodeToDataIndex( oSettings, n )\n{\n\treturn (n._DT_RowIndex!==undefined) ? n._DT_RowIndex : null;\n}\n\n\n/**\n * Take a TD element and convert it into a column data index (not the visible index)\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iRow The row number the TD/TH can be found in\n *  @param {node} n The TD/TH element to find\n *  @returns {int} index if the node is found, -1 if not\n *  @memberof DataTable#oApi\n */\nfunction _fnNodeToColumnIndex( oSettings, iRow, n )\n{\n\treturn $.inArray( n, oSettings.aoData[ iRow ].anCells );\n}\n\n\n/**\n * Get the data for a given cell from the internal cache, taking into account data mapping\n *  @param {object} settings dataTables settings object\n *  @param {int} rowIdx aoData row id\n *  @param {int} colIdx Column index\n *  @param {string} type data get type ('display', 'type' 'filter|search' 'sort|order')\n *  @returns {*} Cell data\n *  @memberof DataTable#oApi\n */\nfunction _fnGetCellData( settings, rowIdx, colIdx, type )\n{\n\tif (type === 'search') {\n\t\ttype = 'filter';\n\t}\n\telse if (type === 'order') {\n\t\ttype = 'sort';\n\t}\n\n\tvar draw           = settings.iDraw;\n\tvar col            = settings.aoColumns[colIdx];\n\tvar rowData        = settings.aoData[rowIdx]._aData;\n\tvar defaultContent = col.sDefaultContent;\n\tvar cellData       = col.fnGetData( rowData, type, {\n\t\tsettings: settings,\n\t\trow:      rowIdx,\n\t\tcol:      colIdx\n\t} );\n\n\tif ( cellData === undefined ) {\n\t\tif ( settings.iDrawError != draw && defaultContent === null ) {\n\t\t\t_fnLog( settings, 0, \"Requested unknown parameter \"+\n\t\t\t\t(typeof col.mData=='function' ? '{function}' : \"'\"+col.mData+\"'\")+\n\t\t\t\t\" for row \"+rowIdx+\", column \"+colIdx, 4 );\n\t\t\tsettings.iDrawError = draw;\n\t\t}\n\t\treturn defaultContent;\n\t}\n\n\t// When the data source is null and a specific data type is requested (i.e.\n\t// not the original data), we can use default column data\n\tif ( (cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined ) {\n\t\tcellData = defaultContent;\n\t}\n\telse if ( typeof cellData === 'function' ) {\n\t\t// If the data source is a function, then we run it and use the return,\n\t\t// executing in the scope of the data object (for instances)\n\t\treturn cellData.call( rowData );\n\t}\n\n\tif ( cellData === null && type === 'display' ) {\n\t\treturn '';\n\t}\n\n\tif ( type === 'filter' ) {\n\t\tvar fomatters = DataTable.ext.type.search;\n\n\t\tif ( fomatters[ col.sType ] ) {\n\t\t\tcellData = fomatters[ col.sType ]( cellData );\n\t\t}\n\t}\n\n\treturn cellData;\n}\n\n\n/**\n * Set the value for a specific cell, into the internal data cache\n *  @param {object} settings dataTables settings object\n *  @param {int} rowIdx aoData row id\n *  @param {int} colIdx Column index\n *  @param {*} val Value to set\n *  @memberof DataTable#oApi\n */\nfunction _fnSetCellData( settings, rowIdx, colIdx, val )\n{\n\tvar col     = settings.aoColumns[colIdx];\n\tvar rowData = settings.aoData[rowIdx]._aData;\n\n\tcol.fnSetData( rowData, val, {\n\t\tsettings: settings,\n\t\trow:      rowIdx,\n\t\tcol:      colIdx\n\t}  );\n}\n\n\n// Private variable that is used to match action syntax in the data property object\nvar __reArray = /\\[.*?\\]$/;\nvar __reFn = /\\(\\)$/;\n\n/**\n * Split string on periods, taking into account escaped periods\n * @param  {string} str String to split\n * @return {array} Split string\n */\nfunction _fnSplitObjNotation( str )\n{\n\treturn $.map( str.match(/(\\\\.|[^\\.])+/g) || [''], function ( s ) {\n\t\treturn s.replace(/\\\\\\./g, '.');\n\t} );\n}\n\n\n/**\n * Return a function that can be used to get data from a source object, taking\n * into account the ability to use nested objects as a source\n *  @param {string|int|function} mSource The data source for the object\n *  @returns {function} Data get function\n *  @memberof DataTable#oApi\n */\nvar _fnGetObjectDataFn = DataTable.util.get;\n\n\n/**\n * Return a function that can be used to set data from a source object, taking\n * into account the ability to use nested objects as a source\n *  @param {string|int|function} mSource The data source for the object\n *  @returns {function} Data set function\n *  @memberof DataTable#oApi\n */\nvar _fnSetObjectDataFn = DataTable.util.set;\n\n\n/**\n * Return an array with the full table data\n *  @param {object} oSettings dataTables settings object\n *  @returns array {array} aData Master data array\n *  @memberof DataTable#oApi\n */\nfunction _fnGetDataMaster ( settings )\n{\n\treturn _pluck( settings.aoData, '_aData' );\n}\n\n\n/**\n * Nuke the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnClearTable( settings )\n{\n\tsettings.aoData.length = 0;\n\tsettings.aiDisplayMaster.length = 0;\n\tsettings.aiDisplay.length = 0;\n\tsettings.aIds = {};\n}\n\n\n /**\n * Take an array of integers (index array) and remove a target integer (value - not\n * the key!)\n *  @param {array} a Index array to target\n *  @param {int} iTarget value to find\n *  @memberof DataTable#oApi\n */\nfunction _fnDeleteIndex( a, iTarget, splice )\n{\n\tvar iTargetIndex = -1;\n\n\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ )\n\t{\n\t\tif ( a[i] == iTarget )\n\t\t{\n\t\t\tiTargetIndex = i;\n\t\t}\n\t\telse if ( a[i] > iTarget )\n\t\t{\n\t\t\ta[i]--;\n\t\t}\n\t}\n\n\tif ( iTargetIndex != -1 && splice === undefined )\n\t{\n\t\ta.splice( iTargetIndex, 1 );\n\t}\n}\n\n\n/**\n * Mark cached data as invalid such that a re-read of the data will occur when\n * the cached data is next requested. Also update from the data source object.\n *\n * @param {object} settings DataTables settings object\n * @param {int}    rowIdx   Row index to invalidate\n * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'\n *     or 'data'\n * @param {int}    [colIdx] Column index to invalidate. If undefined the whole\n *     row will be invalidated\n * @memberof DataTable#oApi\n *\n * @todo For the modularisation of v1.11 this will need to become a callback, so\n *   the sort and filter methods can subscribe to it. That will required\n *   initialisation options for sorting, which is why it is not already baked in\n */\nfunction _fnInvalidate( settings, rowIdx, src, colIdx )\n{\n\tvar row = settings.aoData[ rowIdx ];\n\tvar i, ien;\n\tvar cellWrite = function ( cell, col ) {\n\t\t// This is very frustrating, but in IE if you just write directly\n\t\t// to innerHTML, and elements that are overwritten are GC'ed,\n\t\t// even if there is a reference to them elsewhere\n\t\twhile ( cell.childNodes.length ) {\n\t\t\tcell.removeChild( cell.firstChild );\n\t\t}\n\n\t\tcell.innerHTML = _fnGetCellData( settings, rowIdx, col, 'display' );\n\t};\n\n\t// Are we reading last data from DOM or the data object?\n\tif ( src === 'dom' || ((! src || src === 'auto') && row.src === 'dom') ) {\n\t\t// Read the data from the DOM\n\t\trow._aData = _fnGetRowElements(\n\t\t\t\tsettings, row, colIdx, colIdx === undefined ? undefined : row._aData\n\t\t\t)\n\t\t\t.data;\n\t}\n\telse {\n\t\t// Reading from data object, update the DOM\n\t\tvar cells = row.anCells;\n\n\t\tif ( cells ) {\n\t\t\tif ( colIdx !== undefined ) {\n\t\t\t\tcellWrite( cells[colIdx], colIdx );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\t\t\tcellWrite( cells[i], i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// For both row and cell invalidation, the cached data for sorting and\n\t// filtering is nulled out\n\trow._aSortData = null;\n\trow._aFilterData = null;\n\n\t// Invalidate the type for a specific column (if given) or all columns since\n\t// the data might have changed\n\tvar cols = settings.aoColumns;\n\tif ( colIdx !== undefined ) {\n\t\tcols[ colIdx ].sType = null;\n\t}\n\telse {\n\t\tfor ( i=0, ien=cols.length ; i<ien ; i++ ) {\n\t\t\tcols[i].sType = null;\n\t\t}\n\n\t\t// Update DataTables special `DT_*` attributes for the row\n\t\t_fnRowAttributes( settings, row );\n\t}\n}\n\n\n/**\n * Build a data source object from an HTML row, reading the contents of the\n * cells that are in the row.\n *\n * @param {object} settings DataTables settings object\n * @param {node|object} TR element from which to read data or existing row\n *   object from which to re-read the data from the cells\n * @param {int} [colIdx] Optional column index\n * @param {array|object} [d] Data source object. If `colIdx` is given then this\n *   parameter should also be given and will be used to write the data into.\n *   Only the column in question will be written\n * @returns {object} Object with two parameters: `data` the data read, in\n *   document order, and `cells` and array of nodes (they can be useful to the\n *   caller, so rather than needing a second traversal to get them, just return\n *   them from here).\n * @memberof DataTable#oApi\n */\nfunction _fnGetRowElements( settings, row, colIdx, d )\n{\n\tvar\n\t\ttds = [],\n\t\ttd = row.firstChild,\n\t\tname, col, o, i=0, contents,\n\t\tcolumns = settings.aoColumns,\n\t\tobjectRead = settings._rowReadObject;\n\n\t// Allow the data object to be passed in, or construct\n\td = d !== undefined ?\n\t\td :\n\t\tobjectRead ?\n\t\t\t{} :\n\t\t\t[];\n\n\tvar attr = function ( str, td  ) {\n\t\tif ( typeof str === 'string' ) {\n\t\t\tvar idx = str.indexOf('@');\n\n\t\t\tif ( idx !== -1 ) {\n\t\t\t\tvar attr = str.substring( idx+1 );\n\t\t\t\tvar setter = _fnSetObjectDataFn( str );\n\t\t\t\tsetter( d, td.getAttribute( attr ) );\n\t\t\t}\n\t\t}\n\t};\n\n\t// Read data from a cell and store into the data object\n\tvar cellProcess = function ( cell ) {\n\t\tif ( colIdx === undefined || colIdx === i ) {\n\t\t\tcol = columns[i];\n\t\t\tcontents = (cell.innerHTML).trim();\n\n\t\t\tif ( col && col._bAttrSrc ) {\n\t\t\t\tvar setter = _fnSetObjectDataFn( col.mData._ );\n\t\t\t\tsetter( d, contents );\n\n\t\t\t\tattr( col.mData.sort, cell );\n\t\t\t\tattr( col.mData.type, cell );\n\t\t\t\tattr( col.mData.filter, cell );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Depending on the `data` option for the columns the data can\n\t\t\t\t// be read to either an object or an array.\n\t\t\t\tif ( objectRead ) {\n\t\t\t\t\tif ( ! col._setter ) {\n\t\t\t\t\t\t// Cache the setter function\n\t\t\t\t\t\tcol._setter = _fnSetObjectDataFn( col.mData );\n\t\t\t\t\t}\n\t\t\t\t\tcol._setter( d, contents );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\td[i] = contents;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ti++;\n\t};\n\n\tif ( td ) {\n\t\t// `tr` element was passed in\n\t\twhile ( td ) {\n\t\t\tname = td.nodeName.toUpperCase();\n\n\t\t\tif ( name == \"TD\" || name == \"TH\" ) {\n\t\t\t\tcellProcess( td );\n\t\t\t\ttds.push( td );\n\t\t\t}\n\n\t\t\ttd = td.nextSibling;\n\t\t}\n\t}\n\telse {\n\t\t// Existing row object passed in\n\t\ttds = row.anCells;\n\n\t\tfor ( var j=0, jen=tds.length ; j<jen ; j++ ) {\n\t\t\tcellProcess( tds[j] );\n\t\t}\n\t}\n\n\t// Read the ID from the DOM if present\n\tvar rowNode = row.firstChild ? row : row.nTr;\n\n\tif ( rowNode ) {\n\t\tvar id = rowNode.getAttribute( 'id' );\n\n\t\tif ( id ) {\n\t\t\t_fnSetObjectDataFn( settings.rowId )( d, id );\n\t\t}\n\t}\n\n\treturn {\n\t\tdata: d,\n\t\tcells: tds\n\t};\n}\n/**\n * Create a new TR element (and it's TD children) for a row\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iRow Row to consider\n *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\n *    DataTables will create a row automatically\n *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n *    if nTr is.\n *  @memberof DataTable#oApi\n */\nfunction _fnCreateTr ( oSettings, iRow, nTrIn, anTds )\n{\n\tvar\n\t\trow = oSettings.aoData[iRow],\n\t\trowData = row._aData,\n\t\tcells = [],\n\t\tnTr, nTd, oCol,\n\t\ti, iLen, create;\n\n\tif ( row.nTr === null )\n\t{\n\t\tnTr = nTrIn || document.createElement('tr');\n\n\t\trow.nTr = nTr;\n\t\trow.anCells = cells;\n\n\t\t/* Use a private property on the node to allow reserve mapping from the node\n\t\t * to the aoData array for fast look up\n\t\t */\n\t\tnTr._DT_RowIndex = iRow;\n\n\t\t/* Special parameters can be given by the data source to be used on the row */\n\t\t_fnRowAttributes( oSettings, row );\n\n\t\t/* Process each column */\n\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\toCol = oSettings.aoColumns[i];\n\t\t\tcreate = nTrIn ? false : true;\n\n\t\t\tnTd = create ? document.createElement( oCol.sCellType ) : anTds[i];\n\n\t\t\tif (! nTd) {\n\t\t\t\t_fnLog( oSettings, 0, 'Incorrect column count', 18 );\n\t\t\t}\n\n\t\t\tnTd._DT_CellIndex = {\n\t\t\t\trow: iRow,\n\t\t\t\tcolumn: i\n\t\t\t};\n\t\t\t\n\t\t\tcells.push( nTd );\n\n\t\t\t// Need to create the HTML if new, or if a rendering function is defined\n\t\t\tif ( create || ((oCol.mRender || oCol.mData !== i) &&\n\t\t\t\t (!$.isPlainObject(oCol.mData) || oCol.mData._ !== i+'.display')\n\t\t\t)) {\n\t\t\t\tnTd.innerHTML = _fnGetCellData( oSettings, iRow, i, 'display' );\n\t\t\t}\n\n\t\t\t/* Add user defined class */\n\t\t\tif ( oCol.sClass )\n\t\t\t{\n\t\t\t\tnTd.className += ' '+oCol.sClass;\n\t\t\t}\n\n\t\t\t// Visibility - add or remove as required\n\t\t\tif ( oCol.bVisible && ! nTrIn )\n\t\t\t{\n\t\t\t\tnTr.appendChild( nTd );\n\t\t\t}\n\t\t\telse if ( ! oCol.bVisible && nTrIn )\n\t\t\t{\n\t\t\t\tnTd.parentNode.removeChild( nTd );\n\t\t\t}\n\n\t\t\tif ( oCol.fnCreatedCell )\n\t\t\t{\n\t\t\t\toCol.fnCreatedCell.call( oSettings.oInstance,\n\t\t\t\t\tnTd, _fnGetCellData( oSettings, iRow, i ), rowData, iRow, i\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t_fnCallbackFire( oSettings, 'aoRowCreatedCallback', null, [nTr, rowData, iRow, cells] );\n\t}\n}\n\n\n/**\n * Add attributes to a row based on the special `DT_*` parameters in a data\n * source object.\n *  @param {object} settings DataTables settings object\n *  @param {object} DataTables row object for the row to be modified\n *  @memberof DataTable#oApi\n */\nfunction _fnRowAttributes( settings, row )\n{\n\tvar tr = row.nTr;\n\tvar data = row._aData;\n\n\tif ( tr ) {\n\t\tvar id = settings.rowIdFn( data );\n\n\t\tif ( id ) {\n\t\t\ttr.id = id;\n\t\t}\n\n\t\tif ( data.DT_RowClass ) {\n\t\t\t// Remove any classes added by DT_RowClass before\n\t\t\tvar a = data.DT_RowClass.split(' ');\n\t\t\trow.__rowc = row.__rowc ?\n\t\t\t\t_unique( row.__rowc.concat( a ) ) :\n\t\t\t\ta;\n\n\t\t\t$(tr)\n\t\t\t\t.removeClass( row.__rowc.join(' ') )\n\t\t\t\t.addClass( data.DT_RowClass );\n\t\t}\n\n\t\tif ( data.DT_RowAttr ) {\n\t\t\t$(tr).attr( data.DT_RowAttr );\n\t\t}\n\n\t\tif ( data.DT_RowData ) {\n\t\t\t$(tr).data( data.DT_RowData );\n\t\t}\n\t}\n}\n\n\n/**\n * Create the HTML header for the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnBuildHead( oSettings )\n{\n\tvar i, ien, cell, row, column;\n\tvar thead = oSettings.nTHead;\n\tvar tfoot = oSettings.nTFoot;\n\tvar createHeader = $('th, td', thead).length === 0;\n\tvar classes = oSettings.oClasses;\n\tvar columns = oSettings.aoColumns;\n\n\tif ( createHeader ) {\n\t\trow = $('<tr/>').appendTo( thead );\n\t}\n\n\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\tcolumn = columns[i];\n\t\tcell = $( column.nTh ).addClass( column.sClass );\n\n\t\tif ( createHeader ) {\n\t\t\tcell.appendTo( row );\n\t\t}\n\n\t\t// 1.11 move into sorting\n\t\tif ( oSettings.oFeatures.bSort ) {\n\t\t\tcell.addClass( column.sSortingClass );\n\n\t\t\tif ( column.bSortable !== false ) {\n\t\t\t\tcell\n\t\t\t\t\t.attr( 'tabindex', oSettings.iTabIndex )\n\t\t\t\t\t.attr( 'aria-controls', oSettings.sTableId );\n\n\t\t\t\t_fnSortAttachListener( oSettings, column.nTh, i );\n\t\t\t}\n\t\t}\n\n\t\tif ( column.sTitle != cell[0].innerHTML ) {\n\t\t\tcell.html( column.sTitle );\n\t\t}\n\n\t\t_fnRenderer( oSettings, 'header' )(\n\t\t\toSettings, cell, column, classes\n\t\t);\n\t}\n\n\tif ( createHeader ) {\n\t\t_fnDetectHeader( oSettings.aoHeader, thead );\n\t}\n\n\t/* Deal with the footer - add classes if required */\n\t$(thead).children('tr').children('th, td').addClass( classes.sHeaderTH );\n\t$(tfoot).children('tr').children('th, td').addClass( classes.sFooterTH );\n\n\t// Cache the footer cells. Note that we only take the cells from the first\n\t// row in the footer. If there is more than one row the user wants to\n\t// interact with, they need to use the table().foot() method. Note also this\n\t// allows cells to be used for multiple columns using colspan\n\tif ( tfoot !== null ) {\n\t\tvar cells = oSettings.aoFooter[0];\n\n\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\tcolumn = columns[i];\n\n\t\t\tif (column) {\n\t\t\t\tcolumn.nTf = cells[i].cell;\n\t\n\t\t\t\tif ( column.sClass ) {\n\t\t\t\t\t$(column.nTf).addClass( column.sClass );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnLog( oSettings, 0, 'Incorrect column count', 18 );\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/**\n * Draw the header (or footer) element based on the column visibility states. The\n * methodology here is to use the layout array from _fnDetectHeader, modified for\n * the instantaneous column visibility, to construct the new layout. The grid is\n * traversed over cell at a time in a rows x columns grid fashion, although each\n * cell insert can cover multiple elements in the grid - which is tracks using the\n * aApplied array. Cell inserts in the grid will only occur where there isn't\n * already a cell in that position.\n *  @param {object} oSettings dataTables settings object\n *  @param array {objects} aoSource Layout array from _fnDetectHeader\n *  @param {boolean} [bIncludeHidden=false] If true then include the hidden columns in the calc,\n *  @memberof DataTable#oApi\n */\nfunction _fnDrawHead( oSettings, aoSource, bIncludeHidden )\n{\n\tvar i, iLen, j, jLen, k, kLen, n, nLocalTr;\n\tvar aoLocal = [];\n\tvar aApplied = [];\n\tvar iColumns = oSettings.aoColumns.length;\n\tvar iRowspan, iColspan;\n\n\tif ( ! aoSource )\n\t{\n\t\treturn;\n\t}\n\n\tif (  bIncludeHidden === undefined )\n\t{\n\t\tbIncludeHidden = false;\n\t}\n\n\t/* Make a copy of the master layout array, but without the visible columns in it */\n\tfor ( i=0, iLen=aoSource.length ; i<iLen ; i++ )\n\t{\n\t\taoLocal[i] = aoSource[i].slice();\n\t\taoLocal[i].nTr = aoSource[i].nTr;\n\n\t\t/* Remove any columns which are currently hidden */\n\t\tfor ( j=iColumns-1 ; j>=0 ; j-- )\n\t\t{\n\t\t\tif ( !oSettings.aoColumns[j].bVisible && !bIncludeHidden )\n\t\t\t{\n\t\t\t\taoLocal[i].splice( j, 1 );\n\t\t\t}\n\t\t}\n\n\t\t/* Prep the applied array - it needs an element for each row */\n\t\taApplied.push( [] );\n\t}\n\n\tfor ( i=0, iLen=aoLocal.length ; i<iLen ; i++ )\n\t{\n\t\tnLocalTr = aoLocal[i].nTr;\n\n\t\t/* All cells are going to be replaced, so empty out the row */\n\t\tif ( nLocalTr )\n\t\t{\n\t\t\twhile( (n = nLocalTr.firstChild) )\n\t\t\t{\n\t\t\t\tnLocalTr.removeChild( n );\n\t\t\t}\n\t\t}\n\n\t\tfor ( j=0, jLen=aoLocal[i].length ; j<jLen ; j++ )\n\t\t{\n\t\t\tiRowspan = 1;\n\t\t\tiColspan = 1;\n\n\t\t\t/* Check to see if there is already a cell (row/colspan) covering our target\n\t\t\t * insert point. If there is, then there is nothing to do.\n\t\t\t */\n\t\t\tif ( aApplied[i][j] === undefined )\n\t\t\t{\n\t\t\t\tnLocalTr.appendChild( aoLocal[i][j].cell );\n\t\t\t\taApplied[i][j] = 1;\n\n\t\t\t\t/* Expand the cell to cover as many rows as needed */\n\t\t\t\twhile ( aoLocal[i+iRowspan] !== undefined &&\n\t\t\t\t        aoLocal[i][j].cell == aoLocal[i+iRowspan][j].cell )\n\t\t\t\t{\n\t\t\t\t\taApplied[i+iRowspan][j] = 1;\n\t\t\t\t\tiRowspan++;\n\t\t\t\t}\n\n\t\t\t\t/* Expand the cell to cover as many columns as needed */\n\t\t\t\twhile ( aoLocal[i][j+iColspan] !== undefined &&\n\t\t\t\t        aoLocal[i][j].cell == aoLocal[i][j+iColspan].cell )\n\t\t\t\t{\n\t\t\t\t\t/* Must update the applied array over the rows for the columns */\n\t\t\t\t\tfor ( k=0 ; k<iRowspan ; k++ )\n\t\t\t\t\t{\n\t\t\t\t\t\taApplied[i+k][j+iColspan] = 1;\n\t\t\t\t\t}\n\t\t\t\t\tiColspan++;\n\t\t\t\t}\n\n\t\t\t\t/* Do the actual expansion in the DOM */\n\t\t\t\t$(aoLocal[i][j].cell)\n\t\t\t\t\t.attr('rowspan', iRowspan)\n\t\t\t\t\t.attr('colspan', iColspan);\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/**\n * Insert the required TR nodes into the table for display\n *  @param {object} oSettings dataTables settings object\n *  @param ajaxComplete true after ajax call to complete rendering\n *  @memberof DataTable#oApi\n */\nfunction _fnDraw( oSettings, ajaxComplete )\n{\n\t// Allow for state saving and a custom start position\n\t_fnStart( oSettings );\n\n\t/* Provide a pre-callback function which can be used to cancel the draw is false is returned */\n\tvar aPreDraw = _fnCallbackFire( oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings] );\n\tif ( $.inArray( false, aPreDraw ) !== -1 )\n\t{\n\t\t_fnProcessingDisplay( oSettings, false );\n\t\treturn;\n\t}\n\n\tvar anRows = [];\n\tvar iRowCount = 0;\n\tvar asStripeClasses = oSettings.asStripeClasses;\n\tvar iStripes = asStripeClasses.length;\n\tvar oLang = oSettings.oLanguage;\n\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\n\tvar aiDisplay = oSettings.aiDisplay;\n\tvar iDisplayStart = oSettings._iDisplayStart;\n\tvar iDisplayEnd = oSettings.fnDisplayEnd();\n\n\toSettings.bDrawing = true;\n\n\t/* Server-side processing draw intercept */\n\tif ( oSettings.bDeferLoading )\n\t{\n\t\toSettings.bDeferLoading = false;\n\t\toSettings.iDraw++;\n\t\t_fnProcessingDisplay( oSettings, false );\n\t}\n\telse if ( !bServerSide )\n\t{\n\t\toSettings.iDraw++;\n\t}\n\telse if ( !oSettings.bDestroying && !ajaxComplete)\n\t{\n\t\t_fnAjaxUpdate( oSettings );\n\t\treturn;\n\t}\n\n\tif ( aiDisplay.length !== 0 )\n\t{\n\t\tvar iStart = bServerSide ? 0 : iDisplayStart;\n\t\tvar iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;\n\n\t\tfor ( var j=iStart ; j<iEnd ; j++ )\n\t\t{\n\t\t\tvar iDataIndex = aiDisplay[j];\n\t\t\tvar aoData = oSettings.aoData[ iDataIndex ];\n\t\t\tif ( aoData.nTr === null )\n\t\t\t{\n\t\t\t\t_fnCreateTr( oSettings, iDataIndex );\n\t\t\t}\n\n\t\t\tvar nRow = aoData.nTr;\n\n\t\t\t/* Remove the old striping classes and then add the new one */\n\t\t\tif ( iStripes !== 0 )\n\t\t\t{\n\t\t\t\tvar sStripe = asStripeClasses[ iRowCount % iStripes ];\n\t\t\t\tif ( aoData._sRowStripe != sStripe )\n\t\t\t\t{\n\t\t\t\t\t$(nRow).removeClass( aoData._sRowStripe ).addClass( sStripe );\n\t\t\t\t\taoData._sRowStripe = sStripe;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Row callback functions - might want to manipulate the row\n\t\t\t// iRowCount and j are not currently documented. Are they at all\n\t\t\t// useful?\n\t\t\t_fnCallbackFire( oSettings, 'aoRowCallback', null,\n\t\t\t\t[nRow, aoData._aData, iRowCount, j, iDataIndex] );\n\n\t\t\tanRows.push( nRow );\n\t\t\tiRowCount++;\n\t\t}\n\t}\n\telse\n\t{\n\t\t/* Table is empty - create a row with an empty message in it */\n\t\tvar sZero = oLang.sZeroRecords;\n\t\tif ( oSettings.iDraw == 1 &&  _fnDataSource( oSettings ) == 'ajax' )\n\t\t{\n\t\t\tsZero = oLang.sLoadingRecords;\n\t\t}\n\t\telse if ( oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0 )\n\t\t{\n\t\t\tsZero = oLang.sEmptyTable;\n\t\t}\n\n\t\tanRows[ 0 ] = $( '<tr/>', { 'class': iStripes ? asStripeClasses[0] : '' } )\n\t\t\t.append( $('<td />', {\n\t\t\t\t'valign':  'top',\n\t\t\t\t'colSpan': _fnVisbleColumns( oSettings ),\n\t\t\t\t'class':   oSettings.oClasses.sRowEmpty\n\t\t\t} ).html( sZero ) )[0];\n\t}\n\n\t/* Header and footer callbacks */\n\t_fnCallbackFire( oSettings, 'aoHeaderCallback', 'header', [ $(oSettings.nTHead).children('tr')[0],\n\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\n\t_fnCallbackFire( oSettings, 'aoFooterCallback', 'footer', [ $(oSettings.nTFoot).children('tr')[0],\n\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\n\tvar body = $(oSettings.nTBody);\n\n\tbody.children().detach();\n\tbody.append( $(anRows) );\n\n\t/* Call all required callback functions for the end of a draw */\n\t_fnCallbackFire( oSettings, 'aoDrawCallback', 'draw', [oSettings] );\n\n\t/* Draw is complete, sorting and filtering must be as well */\n\toSettings.bSorted = false;\n\toSettings.bFiltered = false;\n\toSettings.bDrawing = false;\n}\n\n\n/**\n * Redraw the table - taking account of the various features which are enabled\n *  @param {object} oSettings dataTables settings object\n *  @param {boolean} [holdPosition] Keep the current paging position. By default\n *    the paging is reset to the first page\n *  @memberof DataTable#oApi\n */\nfunction _fnReDraw( settings, holdPosition )\n{\n\tvar\n\t\tfeatures = settings.oFeatures,\n\t\tsort     = features.bSort,\n\t\tfilter   = features.bFilter;\n\n\tif ( sort ) {\n\t\t_fnSort( settings );\n\t}\n\n\tif ( filter ) {\n\t\t_fnFilterComplete( settings, settings.oPreviousSearch );\n\t}\n\telse {\n\t\t// No filtering, so we want to just use the display master\n\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\t}\n\n\tif ( holdPosition !== true ) {\n\t\tsettings._iDisplayStart = 0;\n\t}\n\n\t// Let any modules know about the draw hold position state (used by\n\t// scrolling internally)\n\tsettings._drawHold = holdPosition;\n\n\t_fnDraw( settings );\n\n\tsettings._drawHold = false;\n}\n\n\n/**\n * Add the options to the page HTML for the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnAddOptionsHtml ( oSettings )\n{\n\tvar classes = oSettings.oClasses;\n\tvar table = $(oSettings.nTable);\n\tvar holding = $('<div/>').insertBefore( table ); // Holding element for speed\n\tvar features = oSettings.oFeatures;\n\n\t// All DataTables are wrapped in a div\n\tvar insert = $('<div/>', {\n\t\tid:      oSettings.sTableId+'_wrapper',\n\t\t'class': classes.sWrapper + (oSettings.nTFoot ? '' : ' '+classes.sNoFooter)\n\t} );\n\n\toSettings.nHolding = holding[0];\n\toSettings.nTableWrapper = insert[0];\n\toSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;\n\n\t/* Loop over the user set positioning and place the elements as needed */\n\tvar aDom = oSettings.sDom.split('');\n\tvar featureNode, cOption, nNewNode, cNext, sAttr, j;\n\tfor ( var i=0 ; i<aDom.length ; i++ )\n\t{\n\t\tfeatureNode = null;\n\t\tcOption = aDom[i];\n\n\t\tif ( cOption == '<' )\n\t\t{\n\t\t\t/* New container div */\n\t\t\tnNewNode = $('<div/>')[0];\n\n\t\t\t/* Check to see if we should append an id and/or a class name to the container */\n\t\t\tcNext = aDom[i+1];\n\t\t\tif ( cNext == \"'\" || cNext == '\"' )\n\t\t\t{\n\t\t\t\tsAttr = \"\";\n\t\t\t\tj = 2;\n\t\t\t\twhile ( aDom[i+j] != cNext )\n\t\t\t\t{\n\t\t\t\t\tsAttr += aDom[i+j];\n\t\t\t\t\tj++;\n\t\t\t\t}\n\n\t\t\t\t/* Replace jQuery UI constants @todo depreciated */\n\t\t\t\tif ( sAttr == \"H\" )\n\t\t\t\t{\n\t\t\t\t\tsAttr = classes.sJUIHeader;\n\t\t\t\t}\n\t\t\t\telse if ( sAttr == \"F\" )\n\t\t\t\t{\n\t\t\t\t\tsAttr = classes.sJUIFooter;\n\t\t\t\t}\n\n\t\t\t\t/* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\n\t\t\t\t * breaks the string into parts and applies them as needed\n\t\t\t\t */\n\t\t\t\tif ( sAttr.indexOf('.') != -1 )\n\t\t\t\t{\n\t\t\t\t\tvar aSplit = sAttr.split('.');\n\t\t\t\t\tnNewNode.id = aSplit[0].substr(1, aSplit[0].length-1);\n\t\t\t\t\tnNewNode.className = aSplit[1];\n\t\t\t\t}\n\t\t\t\telse if ( sAttr.charAt(0) == \"#\" )\n\t\t\t\t{\n\t\t\t\t\tnNewNode.id = sAttr.substr(1, sAttr.length-1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnNewNode.className = sAttr;\n\t\t\t\t}\n\n\t\t\t\ti += j; /* Move along the position array */\n\t\t\t}\n\n\t\t\tinsert.append( nNewNode );\n\t\t\tinsert = $(nNewNode);\n\t\t}\n\t\telse if ( cOption == '>' )\n\t\t{\n\t\t\t/* End container div */\n\t\t\tinsert = insert.parent();\n\t\t}\n\t\t// @todo Move options into their own plugins?\n\t\telse if ( cOption == 'l' && features.bPaginate && features.bLengthChange )\n\t\t{\n\t\t\t/* Length */\n\t\t\tfeatureNode = _fnFeatureHtmlLength( oSettings );\n\t\t}\n\t\telse if ( cOption == 'f' && features.bFilter )\n\t\t{\n\t\t\t/* Filter */\n\t\t\tfeatureNode = _fnFeatureHtmlFilter( oSettings );\n\t\t}\n\t\telse if ( cOption == 'r' && features.bProcessing )\n\t\t{\n\t\t\t/* pRocessing */\n\t\t\tfeatureNode = _fnFeatureHtmlProcessing( oSettings );\n\t\t}\n\t\telse if ( cOption == 't' )\n\t\t{\n\t\t\t/* Table */\n\t\t\tfeatureNode = _fnFeatureHtmlTable( oSettings );\n\t\t}\n\t\telse if ( cOption ==  'i' && features.bInfo )\n\t\t{\n\t\t\t/* Info */\n\t\t\tfeatureNode = _fnFeatureHtmlInfo( oSettings );\n\t\t}\n\t\telse if ( cOption == 'p' && features.bPaginate )\n\t\t{\n\t\t\t/* Pagination */\n\t\t\tfeatureNode = _fnFeatureHtmlPaginate( oSettings );\n\t\t}\n\t\telse if ( DataTable.ext.feature.length !== 0 )\n\t\t{\n\t\t\t/* Plug-in features */\n\t\t\tvar aoFeatures = DataTable.ext.feature;\n\t\t\tfor ( var k=0, kLen=aoFeatures.length ; k<kLen ; k++ )\n\t\t\t{\n\t\t\t\tif ( cOption == aoFeatures[k].cFeature )\n\t\t\t\t{\n\t\t\t\t\tfeatureNode = aoFeatures[k].fnInit( oSettings );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/* Add to the 2D features array */\n\t\tif ( featureNode )\n\t\t{\n\t\t\tvar aanFeatures = oSettings.aanFeatures;\n\n\t\t\tif ( ! aanFeatures[cOption] )\n\t\t\t{\n\t\t\t\taanFeatures[cOption] = [];\n\t\t\t}\n\n\t\t\taanFeatures[cOption].push( featureNode );\n\t\t\tinsert.append( featureNode );\n\t\t}\n\t}\n\n\t/* Built our DOM structure - replace the holding div with what we want */\n\tholding.replaceWith( insert );\n\toSettings.nHolding = null;\n}\n\n\n/**\n * Use the DOM source to create up an array of header cells. The idea here is to\n * create a layout grid (array) of rows x columns, which contains a reference\n * to the cell that that point in the grid (regardless of col/rowspan), such that\n * any column / row could be removed and the new grid constructed\n *  @param array {object} aLayout Array to store the calculated layout in\n *  @param {node} nThead The header/footer element for the table\n *  @memberof DataTable#oApi\n */\nfunction _fnDetectHeader ( aLayout, nThead )\n{\n\tvar nTrs = $(nThead).children('tr');\n\tvar nTr, nCell;\n\tvar i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;\n\tvar bUnique;\n\tvar fnShiftCol = function ( a, i, j ) {\n\t\tvar k = a[i];\n                while ( k[j] ) {\n\t\t\tj++;\n\t\t}\n\t\treturn j;\n\t};\n\n\taLayout.splice( 0, aLayout.length );\n\n\t/* We know how many rows there are in the layout - so prep it */\n\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\n\t{\n\t\taLayout.push( [] );\n\t}\n\n\t/* Calculate a layout array */\n\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\n\t{\n\t\tnTr = nTrs[i];\n\t\tiColumn = 0;\n\n\t\t/* For every cell in the row... */\n\t\tnCell = nTr.firstChild;\n\t\twhile ( nCell ) {\n\t\t\tif ( nCell.nodeName.toUpperCase() == \"TD\" ||\n\t\t\t     nCell.nodeName.toUpperCase() == \"TH\" )\n\t\t\t{\n\t\t\t\t/* Get the col and rowspan attributes from the DOM and sanitise them */\n\t\t\t\tiColspan = nCell.getAttribute('colspan') * 1;\n\t\t\t\tiRowspan = nCell.getAttribute('rowspan') * 1;\n\t\t\t\tiColspan = (!iColspan || iColspan===0 || iColspan===1) ? 1 : iColspan;\n\t\t\t\tiRowspan = (!iRowspan || iRowspan===0 || iRowspan===1) ? 1 : iRowspan;\n\n\t\t\t\t/* There might be colspan cells already in this row, so shift our target\n\t\t\t\t * accordingly\n\t\t\t\t */\n\t\t\t\tiColShifted = fnShiftCol( aLayout, i, iColumn );\n\n\t\t\t\t/* Cache calculation for unique columns */\n\t\t\t\tbUnique = iColspan === 1 ? true : false;\n\n\t\t\t\t/* If there is col / rowspan, copy the information into the layout grid */\n\t\t\t\tfor ( l=0 ; l<iColspan ; l++ )\n\t\t\t\t{\n\t\t\t\t\tfor ( k=0 ; k<iRowspan ; k++ )\n\t\t\t\t\t{\n\t\t\t\t\t\taLayout[i+k][iColShifted+l] = {\n\t\t\t\t\t\t\t\"cell\": nCell,\n\t\t\t\t\t\t\t\"unique\": bUnique\n\t\t\t\t\t\t};\n\t\t\t\t\t\taLayout[i+k].nTr = nTr;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tnCell = nCell.nextSibling;\n\t\t}\n\t}\n}\n\n\n/**\n * Get an array of unique th elements, one for each column\n *  @param {object} oSettings dataTables settings object\n *  @param {node} nHeader automatically detect the layout from this node - optional\n *  @param {array} aLayout thead/tfoot layout from _fnDetectHeader - optional\n *  @returns array {node} aReturn list of unique th's\n *  @memberof DataTable#oApi\n */\nfunction _fnGetUniqueThs ( oSettings, nHeader, aLayout )\n{\n\tvar aReturn = [];\n\tif ( !aLayout )\n\t{\n\t\taLayout = oSettings.aoHeader;\n\t\tif ( nHeader )\n\t\t{\n\t\t\taLayout = [];\n\t\t\t_fnDetectHeader( aLayout, nHeader );\n\t\t}\n\t}\n\n\tfor ( var i=0, iLen=aLayout.length ; i<iLen ; i++ )\n\t{\n\t\tfor ( var j=0, jLen=aLayout[i].length ; j<jLen ; j++ )\n\t\t{\n\t\t\tif ( aLayout[i][j].unique &&\n\t\t\t\t (!aReturn[j] || !oSettings.bSortCellsTop) )\n\t\t\t{\n\t\t\t\taReturn[j] = aLayout[i][j].cell;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn aReturn;\n}\n\n/**\n * Set the start position for draw\n *  @param {object} oSettings dataTables settings object\n */\nfunction _fnStart( oSettings )\n{\n\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\n\tvar iInitDisplayStart = oSettings.iInitDisplayStart;\n\n\t// Check and see if we have an initial draw position from state saving\n\tif ( iInitDisplayStart !== undefined && iInitDisplayStart !== -1 )\n\t{\n\t\toSettings._iDisplayStart = bServerSide ?\n\t\t\tiInitDisplayStart :\n\t\t\tiInitDisplayStart >= oSettings.fnRecordsDisplay() ?\n\t\t\t\t0 :\n\t\t\t\tiInitDisplayStart;\n\n\t\toSettings.iInitDisplayStart = -1;\n\t}\n}\n\n/**\n * Create an Ajax call based on the table's settings, taking into account that\n * parameters can have multiple forms, and backwards compatibility.\n *\n * @param {object} oSettings dataTables settings object\n * @param {array} data Data to send to the server, required by\n *     DataTables - may be augmented by developer callbacks\n * @param {function} fn Callback function to run when data is obtained\n */\nfunction _fnBuildAjax( oSettings, data, fn )\n{\n\t// Compatibility with 1.9-, allow fnServerData and event to manipulate\n\t_fnCallbackFire( oSettings, 'aoServerParams', 'serverParams', [data] );\n\n\t// Convert to object based for 1.10+ if using the old array scheme which can\n\t// come from server-side processing or serverParams\n\tif ( data && Array.isArray(data) ) {\n\t\tvar tmp = {};\n\t\tvar rbracket = /(.*?)\\[\\]$/;\n\n\t\t$.each( data, function (key, val) {\n\t\t\tvar match = val.name.match(rbracket);\n\n\t\t\tif ( match ) {\n\t\t\t\t// Support for arrays\n\t\t\t\tvar name = match[0];\n\n\t\t\t\tif ( ! tmp[ name ] ) {\n\t\t\t\t\ttmp[ name ] = [];\n\t\t\t\t}\n\t\t\t\ttmp[ name ].push( val.value );\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttmp[val.name] = val.value;\n\t\t\t}\n\t\t} );\n\t\tdata = tmp;\n\t}\n\n\tvar ajaxData;\n\tvar ajax = oSettings.ajax;\n\tvar instance = oSettings.oInstance;\n\tvar callback = function ( json ) {\n\t\tvar status = oSettings.jqXHR\n\t\t\t? oSettings.jqXHR.status\n\t\t\t: null;\n\n\t\tif ( json === null || (typeof status === 'number' && status == 204 ) ) {\n\t\t\tjson = {};\n\t\t\t_fnAjaxDataSrc( oSettings, json, [] );\n\t\t}\n\n\t\tvar error = json.error || json.sError;\n\t\tif ( error ) {\n\t\t\t_fnLog( oSettings, 0, error );\n\t\t}\n\n\t\toSettings.json = json;\n\n\t\t_fnCallbackFire( oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR] );\n\t\tfn( json );\n\t};\n\n\tif ( $.isPlainObject( ajax ) && ajax.data )\n\t{\n\t\tajaxData = ajax.data;\n\n\t\tvar newData = typeof ajaxData === 'function' ?\n\t\t\tajaxData( data, oSettings ) :  // fn can manipulate data or return\n\t\t\tajaxData;                      // an object object or array to merge\n\n\t\t// If the function returned something, use that alone\n\t\tdata = typeof ajaxData === 'function' && newData ?\n\t\t\tnewData :\n\t\t\t$.extend( true, data, newData );\n\n\t\t// Remove the data property as we've resolved it already and don't want\n\t\t// jQuery to do it again (it is restored at the end of the function)\n\t\tdelete ajax.data;\n\t}\n\n\tvar baseAjax = {\n\t\t\"data\": data,\n\t\t\"success\": callback,\n\t\t\"dataType\": \"json\",\n\t\t\"cache\": false,\n\t\t\"type\": oSettings.sServerMethod,\n\t\t\"error\": function (xhr, error, thrown) {\n\t\t\tvar ret = _fnCallbackFire( oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR] );\n\n\t\t\tif ( $.inArray( true, ret ) === -1 ) {\n\t\t\t\tif ( error == \"parsererror\" ) {\n\t\t\t\t\t_fnLog( oSettings, 0, 'Invalid JSON response', 1 );\n\t\t\t\t}\n\t\t\t\telse if ( xhr.readyState === 4 ) {\n\t\t\t\t\t_fnLog( oSettings, 0, 'Ajax error', 7 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t}\n\t};\n\n\t// Store the data submitted for the API\n\toSettings.oAjaxData = data;\n\n\t// Allow plug-ins and external processes to modify the data\n\t_fnCallbackFire( oSettings, null, 'preXhr', [oSettings, data] );\n\n\tif ( oSettings.fnServerData )\n\t{\n\t\t// DataTables 1.9- compatibility\n\t\toSettings.fnServerData.call( instance,\n\t\t\toSettings.sAjaxSource,\n\t\t\t$.map( data, function (val, key) { // Need to convert back to 1.9 trad format\n\t\t\t\treturn { name: key, value: val };\n\t\t\t} ),\n\t\t\tcallback,\n\t\t\toSettings\n\t\t);\n\t}\n\telse if ( oSettings.sAjaxSource || typeof ajax === 'string' )\n\t{\n\t\t// DataTables 1.9- compatibility\n\t\toSettings.jqXHR = $.ajax( $.extend( baseAjax, {\n\t\t\turl: ajax || oSettings.sAjaxSource\n\t\t} ) );\n\t}\n\telse if ( typeof ajax === 'function' )\n\t{\n\t\t// Is a function - let the caller define what needs to be done\n\t\toSettings.jqXHR = ajax.call( instance, data, callback, oSettings );\n\t}\n\telse\n\t{\n\t\t// Object to extend the base settings\n\t\toSettings.jqXHR = $.ajax( $.extend( baseAjax, ajax ) );\n\n\t\t// Restore for next time around\n\t\tajax.data = ajaxData;\n\t}\n}\n\n\n/**\n * Update the table using an Ajax call\n *  @param {object} settings dataTables settings object\n *  @returns {boolean} Block the table drawing or not\n *  @memberof DataTable#oApi\n */\nfunction _fnAjaxUpdate( settings )\n{\n\tsettings.iDraw++;\n\t_fnProcessingDisplay( settings, true );\n\n\t_fnBuildAjax(\n\t\tsettings,\n\t\t_fnAjaxParameters( settings ),\n\t\tfunction(json) {\n\t\t\t_fnAjaxUpdateDraw( settings, json );\n\t\t}\n\t);\n}\n\n\n/**\n * Build up the parameters in an object needed for a server-side processing\n * request. Note that this is basically done twice, is different ways - a modern\n * method which is used by default in DataTables 1.10 which uses objects and\n * arrays, or the 1.9- method with is name / value pairs. 1.9 method is used if\n * the sAjaxSource option is used in the initialisation, or the legacyAjax\n * option is set.\n *  @param {object} oSettings dataTables settings object\n *  @returns {bool} block the table drawing or not\n *  @memberof DataTable#oApi\n */\nfunction _fnAjaxParameters( settings )\n{\n\tvar\n\t\tcolumns = settings.aoColumns,\n\t\tcolumnCount = columns.length,\n\t\tfeatures = settings.oFeatures,\n\t\tpreSearch = settings.oPreviousSearch,\n\t\tpreColSearch = settings.aoPreSearchCols,\n\t\ti, data = [], dataProp, column, columnSearch,\n\t\tsort = _fnSortFlatten( settings ),\n\t\tdisplayStart = settings._iDisplayStart,\n\t\tdisplayLength = features.bPaginate !== false ?\n\t\t\tsettings._iDisplayLength :\n\t\t\t-1;\n\n\tvar param = function ( name, value ) {\n\t\tdata.push( { 'name': name, 'value': value } );\n\t};\n\n\t// DataTables 1.9- compatible method\n\tparam( 'sEcho',          settings.iDraw );\n\tparam( 'iColumns',       columnCount );\n\tparam( 'sColumns',       _pluck( columns, 'sName' ).join(',') );\n\tparam( 'iDisplayStart',  displayStart );\n\tparam( 'iDisplayLength', displayLength );\n\n\t// DataTables 1.10+ method\n\tvar d = {\n\t\tdraw:    settings.iDraw,\n\t\tcolumns: [],\n\t\torder:   [],\n\t\tstart:   displayStart,\n\t\tlength:  displayLength,\n\t\tsearch:  {\n\t\t\tvalue: preSearch.sSearch,\n\t\t\tregex: preSearch.bRegex\n\t\t}\n\t};\n\n\tfor ( i=0 ; i<columnCount ; i++ ) {\n\t\tcolumn = columns[i];\n\t\tcolumnSearch = preColSearch[i];\n\t\tdataProp = typeof column.mData==\"function\" ? 'function' : column.mData ;\n\n\t\td.columns.push( {\n\t\t\tdata:       dataProp,\n\t\t\tname:       column.sName,\n\t\t\tsearchable: column.bSearchable,\n\t\t\torderable:  column.bSortable,\n\t\t\tsearch:     {\n\t\t\t\tvalue: columnSearch.sSearch,\n\t\t\t\tregex: columnSearch.bRegex\n\t\t\t}\n\t\t} );\n\n\t\tparam( \"mDataProp_\"+i, dataProp );\n\n\t\tif ( features.bFilter ) {\n\t\t\tparam( 'sSearch_'+i,     columnSearch.sSearch );\n\t\t\tparam( 'bRegex_'+i,      columnSearch.bRegex );\n\t\t\tparam( 'bSearchable_'+i, column.bSearchable );\n\t\t}\n\n\t\tif ( features.bSort ) {\n\t\t\tparam( 'bSortable_'+i, column.bSortable );\n\t\t}\n\t}\n\n\tif ( features.bFilter ) {\n\t\tparam( 'sSearch', preSearch.sSearch );\n\t\tparam( 'bRegex', preSearch.bRegex );\n\t}\n\n\tif ( features.bSort ) {\n\t\t$.each( sort, function ( i, val ) {\n\t\t\td.order.push( { column: val.col, dir: val.dir } );\n\n\t\t\tparam( 'iSortCol_'+i, val.col );\n\t\t\tparam( 'sSortDir_'+i, val.dir );\n\t\t} );\n\n\t\tparam( 'iSortingCols', sort.length );\n\t}\n\n\t// If the legacy.ajax parameter is null, then we automatically decide which\n\t// form to use, based on sAjaxSource\n\tvar legacy = DataTable.ext.legacy.ajax;\n\tif ( legacy === null ) {\n\t\treturn settings.sAjaxSource ? data : d;\n\t}\n\n\t// Otherwise, if legacy has been specified then we use that to decide on the\n\t// form\n\treturn legacy ? data : d;\n}\n\n\n/**\n * Data the data from the server (nuking the old) and redraw the table\n *  @param {object} oSettings dataTables settings object\n *  @param {object} json json data return from the server.\n *  @param {string} json.sEcho Tracking flag for DataTables to match requests\n *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\n *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\n *  @param {array} json.aaData The data to display on this page\n *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\n *  @memberof DataTable#oApi\n */\nfunction _fnAjaxUpdateDraw ( settings, json )\n{\n\t// v1.10 uses camelCase variables, while 1.9 uses Hungarian notation.\n\t// Support both\n\tvar compat = function ( old, modern ) {\n\t\treturn json[old] !== undefined ? json[old] : json[modern];\n\t};\n\n\tvar data = _fnAjaxDataSrc( settings, json );\n\tvar draw            = compat( 'sEcho',                'draw' );\n\tvar recordsTotal    = compat( 'iTotalRecords',        'recordsTotal' );\n\tvar recordsFiltered = compat( 'iTotalDisplayRecords', 'recordsFiltered' );\n\n\tif ( draw !== undefined ) {\n\t\t// Protect against out of sequence returns\n\t\tif ( draw*1 < settings.iDraw ) {\n\t\t\treturn;\n\t\t}\n\t\tsettings.iDraw = draw * 1;\n\t}\n\n\t// No data in returned object, so rather than an array, we show an empty table\n\tif ( ! data ) {\n\t\tdata = [];\n\t}\n\n\t_fnClearTable( settings );\n\tsettings._iRecordsTotal   = parseInt(recordsTotal, 10);\n\tsettings._iRecordsDisplay = parseInt(recordsFiltered, 10);\n\n\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t_fnAddData( settings, data[i] );\n\t}\n\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\n\t_fnDraw( settings, true );\n\n\tif ( ! settings._bInitComplete ) {\n\t\t_fnInitComplete( settings, json );\n\t}\n\n\t_fnProcessingDisplay( settings, false );\n}\n\n\n/**\n * Get the data from the JSON data source to use for drawing a table. Using\n * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\n * source object, or from a processing function.\n *  @param {object} oSettings dataTables settings object\n *  @param  {object} json Data source object / array from the server\n *  @return {array} Array of data to use\n */\n function _fnAjaxDataSrc ( oSettings, json, write )\n {\n\tvar dataSrc = $.isPlainObject( oSettings.ajax ) && oSettings.ajax.dataSrc !== undefined ?\n\t\toSettings.ajax.dataSrc :\n\t\toSettings.sAjaxDataProp; // Compatibility with 1.9-.\n\n\tif ( ! write ) {\n\t\tif ( dataSrc === 'data' ) {\n\t\t\t// If the default, then we still want to support the old style, and safely ignore\n\t\t\t// it if possible\n\t\t\treturn json.aaData || json[dataSrc];\n\t\t}\n\n\t\treturn dataSrc !== \"\" ?\n\t\t\t_fnGetObjectDataFn( dataSrc )( json ) :\n\t\t\tjson;\n\t}\n\n\t// set\n\t_fnSetObjectDataFn( dataSrc )( json, write );\n}\n\n/**\n * Generate the node required for filtering text\n *  @returns {node} Filter control element\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnFeatureHtmlFilter ( settings )\n{\n\tvar classes = settings.oClasses;\n\tvar tableId = settings.sTableId;\n\tvar language = settings.oLanguage;\n\tvar previousSearch = settings.oPreviousSearch;\n\tvar features = settings.aanFeatures;\n\tvar input = '<input type=\"search\" class=\"'+classes.sFilterInput+'\"/>';\n\n\tvar str = language.sSearch;\n\tstr = str.match(/_INPUT_/) ?\n\t\tstr.replace('_INPUT_', input) :\n\t\tstr+input;\n\n\tvar filter = $('<div/>', {\n\t\t\t'id': ! features.f ? tableId+'_filter' : null,\n\t\t\t'class': classes.sFilter\n\t\t} )\n\t\t.append( $('<label/>' ).append( str ) );\n\n\tvar searchFn = function(event) {\n\t\t/* Update all other filter input elements for the new display */\n\t\tvar n = features.f;\n\t\tvar val = !this.value ? \"\" : this.value; // mental IE8 fix :-(\n\t\tif(previousSearch.return && event.key !== \"Enter\") {\n\t\t\treturn;\n\t\t}\n\t\t/* Now do the filter */\n\t\tif ( val != previousSearch.sSearch ) {\n\t\t\t_fnFilterComplete( settings, {\n\t\t\t\t\"sSearch\": val,\n\t\t\t\t\"bRegex\": previousSearch.bRegex,\n\t\t\t\t\"bSmart\": previousSearch.bSmart ,\n\t\t\t\t\"bCaseInsensitive\": previousSearch.bCaseInsensitive,\n\t\t\t\t\"return\": previousSearch.return\n\t\t\t} );\n\n\t\t\t// Need to redraw, without resorting\n\t\t\tsettings._iDisplayStart = 0;\n\t\t\t_fnDraw( settings );\n\t\t}\n\t};\n\n\tvar searchDelay = settings.searchDelay !== null ?\n\t\tsettings.searchDelay :\n\t\t_fnDataSource( settings ) === 'ssp' ?\n\t\t\t400 :\n\t\t\t0;\n\n\tvar jqFilter = $('input', filter)\n\t\t.val( previousSearch.sSearch )\n\t\t.attr( 'placeholder', language.sSearchPlaceholder )\n\t\t.on(\n\t\t\t'keyup.DT search.DT input.DT paste.DT cut.DT',\n\t\t\tsearchDelay ?\n\t\t\t\t_fnThrottle( searchFn, searchDelay ) :\n\t\t\t\tsearchFn\n\t\t)\n\t\t.on( 'mouseup', function(e) {\n\t\t\t// Edge fix! Edge 17 does not trigger anything other than mouse events when clicking\n\t\t\t// on the clear icon (Edge bug 17584515). This is safe in other browsers as `searchFn`\n\t\t\t// checks the value to see if it has changed. In other browsers it won't have.\n\t\t\tsetTimeout( function () {\n\t\t\t\tsearchFn.call(jqFilter[0], e);\n\t\t\t}, 10);\n\t\t} )\n\t\t.on( 'keypress.DT', function(e) {\n\t\t\t/* Prevent form submission */\n\t\t\tif ( e.keyCode == 13 ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} )\n\t\t.attr('aria-controls', tableId);\n\n\t// Update the input elements whenever the table is filtered\n\t$(settings.nTable).on( 'search.dt.DT', function ( ev, s ) {\n\t\tif ( settings === s ) {\n\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t\t\t// inside an iframe or frame...\n\t\t\ttry {\n\t\t\t\tif ( jqFilter[0] !== document.activeElement ) {\n\t\t\t\t\tjqFilter.val( previousSearch.sSearch );\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch ( e ) {}\n\t\t}\n\t} );\n\n\treturn filter[0];\n}\n\n\n/**\n * Filter the table using both the global filter and column based filtering\n *  @param {object} oSettings dataTables settings object\n *  @param {object} oSearch search information\n *  @param {int} [iForce] force a research of the master array (1) or not (undefined or 0)\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterComplete ( oSettings, oInput, iForce )\n{\n\tvar oPrevSearch = oSettings.oPreviousSearch;\n\tvar aoPrevSearch = oSettings.aoPreSearchCols;\n\tvar fnSaveFilter = function ( oFilter ) {\n\t\t/* Save the filtering values */\n\t\toPrevSearch.sSearch = oFilter.sSearch;\n\t\toPrevSearch.bRegex = oFilter.bRegex;\n\t\toPrevSearch.bSmart = oFilter.bSmart;\n\t\toPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive;\n\t\toPrevSearch.return = oFilter.return;\n\t};\n\tvar fnRegex = function ( o ) {\n\t\t// Backwards compatibility with the bEscapeRegex option\n\t\treturn o.bEscapeRegex !== undefined ? !o.bEscapeRegex : o.bRegex;\n\t};\n\n\t// Resolve any column types that are unknown due to addition or invalidation\n\t// @todo As per sort - can this be moved into an event handler?\n\t_fnColumnTypes( oSettings );\n\n\t/* In server-side processing all filtering is done by the server, so no point hanging around here */\n\tif ( _fnDataSource( oSettings ) != 'ssp' )\n\t{\n\t\t/* Global filter */\n\t\t_fnFilter( oSettings, oInput.sSearch, iForce, fnRegex(oInput), oInput.bSmart, oInput.bCaseInsensitive, oInput.return );\n\t\tfnSaveFilter( oInput );\n\n\t\t/* Now do the individual column filter */\n\t\tfor ( var i=0 ; i<aoPrevSearch.length ; i++ )\n\t\t{\n\t\t\t_fnFilterColumn( oSettings, aoPrevSearch[i].sSearch, i, fnRegex(aoPrevSearch[i]),\n\t\t\t\taoPrevSearch[i].bSmart, aoPrevSearch[i].bCaseInsensitive );\n\t\t}\n\n\t\t/* Custom filtering */\n\t\t_fnFilterCustom( oSettings );\n\t}\n\telse\n\t{\n\t\tfnSaveFilter( oInput );\n\t}\n\n\t/* Tell the draw function we have been filtering */\n\toSettings.bFiltered = true;\n\t_fnCallbackFire( oSettings, null, 'search', [oSettings] );\n}\n\n\n/**\n * Apply custom filtering functions\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterCustom( settings )\n{\n\tvar filters = DataTable.ext.search;\n\tvar displayRows = settings.aiDisplay;\n\tvar row, rowIdx;\n\n\tfor ( var i=0, ien=filters.length ; i<ien ; i++ ) {\n\t\tvar rows = [];\n\n\t\t// Loop over each row and see if it should be included\n\t\tfor ( var j=0, jen=displayRows.length ; j<jen ; j++ ) {\n\t\t\trowIdx = displayRows[ j ];\n\t\t\trow = settings.aoData[ rowIdx ];\n\n\t\t\tif ( filters[i]( settings, row._aFilterData, rowIdx, row._aData, j ) ) {\n\t\t\t\trows.push( rowIdx );\n\t\t\t}\n\t\t}\n\n\t\t// So the array reference doesn't break set the results into the\n\t\t// existing array\n\t\tdisplayRows.length = 0;\n\t\t$.merge( displayRows, rows );\n\t}\n}\n\n\n/**\n * Filter the table on a per-column basis\n *  @param {object} oSettings dataTables settings object\n *  @param {string} sInput string to filter on\n *  @param {int} iColumn column to filter\n *  @param {bool} bRegex treat search string as a regular expression or not\n *  @param {bool} bSmart use smart filtering or not\n *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterColumn ( settings, searchStr, colIdx, regex, smart, caseInsensitive )\n{\n\tif ( searchStr === '' ) {\n\t\treturn;\n\t}\n\n\tvar data;\n\tvar out = [];\n\tvar display = settings.aiDisplay;\n\tvar rpSearch = _fnFilterCreateSearch( searchStr, regex, smart, caseInsensitive );\n\n\tfor ( var i=0 ; i<display.length ; i++ ) {\n\t\tdata = settings.aoData[ display[i] ]._aFilterData[ colIdx ];\n\n\t\tif ( rpSearch.test( data ) ) {\n\t\t\tout.push( display[i] );\n\t\t}\n\t}\n\n\tsettings.aiDisplay = out;\n}\n\n\n/**\n * Filter the data table based on user input and draw the table\n *  @param {object} settings dataTables settings object\n *  @param {string} input string to filter on\n *  @param {int} force optional - force a research of the master array (1) or not (undefined or 0)\n *  @param {bool} regex treat as a regular expression or not\n *  @param {bool} smart perform smart filtering or not\n *  @param {bool} caseInsensitive Do case insensitive matching or not\n *  @memberof DataTable#oApi\n */\nfunction _fnFilter( settings, input, force, regex, smart, caseInsensitive )\n{\n\tvar rpSearch = _fnFilterCreateSearch( input, regex, smart, caseInsensitive );\n\tvar prevSearch = settings.oPreviousSearch.sSearch;\n\tvar displayMaster = settings.aiDisplayMaster;\n\tvar display, invalidated, i;\n\tvar filtered = [];\n\n\t// Need to take account of custom filtering functions - always filter\n\tif ( DataTable.ext.search.length !== 0 ) {\n\t\tforce = true;\n\t}\n\n\t// Check if any of the rows were invalidated\n\tinvalidated = _fnFilterData( settings );\n\n\t// If the input is blank - we just want the full data set\n\tif ( input.length <= 0 ) {\n\t\tsettings.aiDisplay = displayMaster.slice();\n\t}\n\telse {\n\t\t// New search - start from the master array\n\t\tif ( invalidated ||\n\t\t\t force ||\n\t\t\t regex ||\n\t\t\t prevSearch.length > input.length ||\n\t\t\t input.indexOf(prevSearch) !== 0 ||\n\t\t\t settings.bSorted // On resort, the display master needs to be\n\t\t\t                  // re-filtered since indexes will have changed\n\t\t) {\n\t\t\tsettings.aiDisplay = displayMaster.slice();\n\t\t}\n\n\t\t// Search the display array\n\t\tdisplay = settings.aiDisplay;\n\n\t\tfor ( i=0 ; i<display.length ; i++ ) {\n\t\t\tif ( rpSearch.test( settings.aoData[ display[i] ]._sFilterRow ) ) {\n\t\t\t\tfiltered.push( display[i] );\n\t\t\t}\n\t\t}\n\n\t\tsettings.aiDisplay = filtered;\n\t}\n}\n\n\n/**\n * Build a regular expression object suitable for searching a table\n *  @param {string} sSearch string to search for\n *  @param {bool} bRegex treat as a regular expression or not\n *  @param {bool} bSmart perform smart filtering or not\n *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n *  @returns {RegExp} constructed object\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterCreateSearch( search, regex, smart, caseInsensitive )\n{\n\tsearch = regex ?\n\t\tsearch :\n\t\t_fnEscapeRegex( search );\n\t\n\tif ( smart ) {\n\t\t/* For smart filtering we want to allow the search to work regardless of\n\t\t * word order. We also want double quoted text to be preserved, so word\n\t\t * order is important - a la google. So this is what we want to\n\t\t * generate:\n\t\t * \n\t\t * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\n\t\t */\n\t\tvar a = $.map( search.match( /\"[^\"]+\"|[^ ]+/g ) || [''], function ( word ) {\n\t\t\tif ( word.charAt(0) === '\"' ) {\n\t\t\t\tvar m = word.match( /^\"(.*)\"$/ );\n\t\t\t\tword = m ? m[1] : word;\n\t\t\t}\n\n\t\t\treturn word.replace('\"', '');\n\t\t} );\n\n\t\tsearch = '^(?=.*?'+a.join( ')(?=.*?' )+').*$';\n\t}\n\n\treturn new RegExp( search, caseInsensitive ? 'i' : '' );\n}\n\n\n/**\n * Escape a string such that it can be used in a regular expression\n *  @param {string} sVal string to escape\n *  @returns {string} escaped string\n *  @memberof DataTable#oApi\n */\nvar _fnEscapeRegex = DataTable.util.escapeRegex;\n\nvar __filter_div = $('<div>')[0];\nvar __filter_div_textContent = __filter_div.textContent !== undefined;\n\n// Update the filtering data for each row if needed (by invalidation or first run)\nfunction _fnFilterData ( settings )\n{\n\tvar columns = settings.aoColumns;\n\tvar column;\n\tvar i, j, ien, jen, filterData, cellData, row;\n\tvar wasInvalidated = false;\n\n\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\trow = settings.aoData[i];\n\n\t\tif ( ! row._aFilterData ) {\n\t\t\tfilterData = [];\n\n\t\t\tfor ( j=0, jen=columns.length ; j<jen ; j++ ) {\n\t\t\t\tcolumn = columns[j];\n\n\t\t\t\tif ( column.bSearchable ) {\n\t\t\t\t\tcellData = _fnGetCellData( settings, i, j, 'filter' );\n\n\t\t\t\t\t// Search in DataTables 1.10 is string based. In 1.11 this\n\t\t\t\t\t// should be altered to also allow strict type checking.\n\t\t\t\t\tif ( cellData === null ) {\n\t\t\t\t\t\tcellData = '';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( typeof cellData !== 'string' && cellData.toString ) {\n\t\t\t\t\t\tcellData = cellData.toString();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcellData = '';\n\t\t\t\t}\n\n\t\t\t\t// If it looks like there is an HTML entity in the string,\n\t\t\t\t// attempt to decode it so sorting works as expected. Note that\n\t\t\t\t// we could use a single line of jQuery to do this, but the DOM\n\t\t\t\t// method used here is much faster http://jsperf.com/html-decode\n\t\t\t\tif ( cellData.indexOf && cellData.indexOf('&') !== -1 ) {\n\t\t\t\t\t__filter_div.innerHTML = cellData;\n\t\t\t\t\tcellData = __filter_div_textContent ?\n\t\t\t\t\t\t__filter_div.textContent :\n\t\t\t\t\t\t__filter_div.innerText;\n\t\t\t\t}\n\n\t\t\t\tif ( cellData.replace ) {\n\t\t\t\t\tcellData = cellData.replace(/[\\r\\n\\u2028]/g, '');\n\t\t\t\t}\n\n\t\t\t\tfilterData.push( cellData );\n\t\t\t}\n\n\t\t\trow._aFilterData = filterData;\n\t\t\trow._sFilterRow = filterData.join('  ');\n\t\t\twasInvalidated = true;\n\t\t}\n\t}\n\n\treturn wasInvalidated;\n}\n\n\n/**\n * Convert from the internal Hungarian notation to camelCase for external\n * interaction\n *  @param {object} obj Object to convert\n *  @returns {object} Inverted object\n *  @memberof DataTable#oApi\n */\nfunction _fnSearchToCamel ( obj )\n{\n\treturn {\n\t\tsearch:          obj.sSearch,\n\t\tsmart:           obj.bSmart,\n\t\tregex:           obj.bRegex,\n\t\tcaseInsensitive: obj.bCaseInsensitive\n\t};\n}\n\n\n\n/**\n * Convert from camelCase notation to the internal Hungarian. We could use the\n * Hungarian convert function here, but this is cleaner\n *  @param {object} obj Object to convert\n *  @returns {object} Inverted object\n *  @memberof DataTable#oApi\n */\nfunction _fnSearchToHung ( obj )\n{\n\treturn {\n\t\tsSearch:          obj.search,\n\t\tbSmart:           obj.smart,\n\t\tbRegex:           obj.regex,\n\t\tbCaseInsensitive: obj.caseInsensitive\n\t};\n}\n\n/**\n * Generate the node required for the info display\n *  @param {object} oSettings dataTables settings object\n *  @returns {node} Information element\n *  @memberof DataTable#oApi\n */\nfunction _fnFeatureHtmlInfo ( settings )\n{\n\tvar\n\t\ttid = settings.sTableId,\n\t\tnodes = settings.aanFeatures.i,\n\t\tn = $('<div/>', {\n\t\t\t'class': settings.oClasses.sInfo,\n\t\t\t'id': ! nodes ? tid+'_info' : null\n\t\t} );\n\n\tif ( ! nodes ) {\n\t\t// Update display on each draw\n\t\tsettings.aoDrawCallback.push( {\n\t\t\t\"fn\": _fnUpdateInfo,\n\t\t\t\"sName\": \"information\"\n\t\t} );\n\n\t\tn\n\t\t\t.attr( 'role', 'status' )\n\t\t\t.attr( 'aria-live', 'polite' );\n\n\t\t// Table is described by our info div\n\t\t$(settings.nTable).attr( 'aria-describedby', tid+'_info' );\n\t}\n\n\treturn n[0];\n}\n\n\n/**\n * Update the information elements in the display\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnUpdateInfo ( settings )\n{\n\t/* Show information about the table */\n\tvar nodes = settings.aanFeatures.i;\n\tif ( nodes.length === 0 ) {\n\t\treturn;\n\t}\n\n\tvar\n\t\tlang  = settings.oLanguage,\n\t\tstart = settings._iDisplayStart+1,\n\t\tend   = settings.fnDisplayEnd(),\n\t\tmax   = settings.fnRecordsTotal(),\n\t\ttotal = settings.fnRecordsDisplay(),\n\t\tout   = total ?\n\t\t\tlang.sInfo :\n\t\t\tlang.sInfoEmpty;\n\n\tif ( total !== max ) {\n\t\t/* Record set after filtering */\n\t\tout += ' ' + lang.sInfoFiltered;\n\t}\n\n\t// Convert the macros\n\tout += lang.sInfoPostFix;\n\tout = _fnInfoMacros( settings, out );\n\n\tvar callback = lang.fnInfoCallback;\n\tif ( callback !== null ) {\n\t\tout = callback.call( settings.oInstance,\n\t\t\tsettings, start, end, max, total, out\n\t\t);\n\t}\n\n\t$(nodes).html( out );\n}\n\n\nfunction _fnInfoMacros ( settings, str )\n{\n\t// When infinite scrolling, we are always starting at 1. _iDisplayStart is used only\n\t// internally\n\tvar\n\t\tformatter  = settings.fnFormatNumber,\n\t\tstart      = settings._iDisplayStart+1,\n\t\tlen        = settings._iDisplayLength,\n\t\tvis        = settings.fnRecordsDisplay(),\n\t\tall        = len === -1;\n\n\treturn str.\n\t\treplace(/_START_/g, formatter.call( settings, start ) ).\n\t\treplace(/_END_/g,   formatter.call( settings, settings.fnDisplayEnd() ) ).\n\t\treplace(/_MAX_/g,   formatter.call( settings, settings.fnRecordsTotal() ) ).\n\t\treplace(/_TOTAL_/g, formatter.call( settings, vis ) ).\n\t\treplace(/_PAGE_/g,  formatter.call( settings, all ? 1 : Math.ceil( start / len ) ) ).\n\t\treplace(/_PAGES_/g, formatter.call( settings, all ? 1 : Math.ceil( vis / len ) ) );\n}\n\n\n\n/**\n * Draw the table for the first time, adding all required features\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnInitialise ( settings )\n{\n\tvar i, iLen, iAjaxStart=settings.iInitDisplayStart;\n\tvar columns = settings.aoColumns, column;\n\tvar features = settings.oFeatures;\n\tvar deferLoading = settings.bDeferLoading; // value modified by the draw\n\n\t/* Ensure that the table data is fully initialised */\n\tif ( ! settings.bInitialised ) {\n\t\tsetTimeout( function(){ _fnInitialise( settings ); }, 200 );\n\t\treturn;\n\t}\n\n\t/* Show the display HTML options */\n\t_fnAddOptionsHtml( settings );\n\n\t/* Build and draw the header / footer for the table */\n\t_fnBuildHead( settings );\n\t_fnDrawHead( settings, settings.aoHeader );\n\t_fnDrawHead( settings, settings.aoFooter );\n\n\t/* Okay to show that something is going on now */\n\t_fnProcessingDisplay( settings, true );\n\n\t/* Calculate sizes for columns */\n\tif ( features.bAutoWidth ) {\n\t\t_fnCalculateColumnWidths( settings );\n\t}\n\n\tfor ( i=0, iLen=columns.length ; i<iLen ; i++ ) {\n\t\tcolumn = columns[i];\n\n\t\tif ( column.sWidth ) {\n\t\t\tcolumn.nTh.style.width = _fnStringToCss( column.sWidth );\n\t\t}\n\t}\n\n\t_fnCallbackFire( settings, null, 'preInit', [settings] );\n\n\t// If there is default sorting required - let's do it. The sort function\n\t// will do the drawing for us. Otherwise we draw the table regardless of the\n\t// Ajax source - this allows the table to look initialised for Ajax sourcing\n\t// data (show 'loading' message possibly)\n\t_fnReDraw( settings );\n\n\t// Server-side processing init complete is done by _fnAjaxUpdateDraw\n\tvar dataSrc = _fnDataSource( settings );\n\tif ( dataSrc != 'ssp' || deferLoading ) {\n\t\t// if there is an ajax source load the data\n\t\tif ( dataSrc == 'ajax' ) {\n\t\t\t_fnBuildAjax( settings, [], function(json) {\n\t\t\t\tvar aData = _fnAjaxDataSrc( settings, json );\n\n\t\t\t\t// Got the data - add it to the table\n\t\t\t\tfor ( i=0 ; i<aData.length ; i++ ) {\n\t\t\t\t\t_fnAddData( settings, aData[i] );\n\t\t\t\t}\n\n\t\t\t\t// Reset the init display for cookie saving. We've already done\n\t\t\t\t// a filter, and therefore cleared it before. So we need to make\n\t\t\t\t// it appear 'fresh'\n\t\t\t\tsettings.iInitDisplayStart = iAjaxStart;\n\n\t\t\t\t_fnReDraw( settings );\n\n\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t_fnInitComplete( settings, json );\n\t\t\t}, settings );\n\t\t}\n\t\telse {\n\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t_fnInitComplete( settings );\n\t\t}\n\t}\n}\n\n\n/**\n * Draw the table for the first time, adding all required features\n *  @param {object} oSettings dataTables settings object\n *  @param {object} [json] JSON from the server that completed the table, if using Ajax source\n *    with client-side processing (optional)\n *  @memberof DataTable#oApi\n */\nfunction _fnInitComplete ( settings, json )\n{\n\tsettings._bInitComplete = true;\n\n\t// When data was added after the initialisation (data or Ajax) we need to\n\t// calculate the column sizing\n\tif ( json || settings.oInit.aaData ) {\n\t\t_fnAdjustColumnSizing( settings );\n\t}\n\n\t_fnCallbackFire( settings, null, 'plugin-init', [settings, json] );\n\t_fnCallbackFire( settings, 'aoInitComplete', 'init', [settings, json] );\n}\n\n\nfunction _fnLengthChange ( settings, val )\n{\n\tvar len = parseInt( val, 10 );\n\tsettings._iDisplayLength = len;\n\n\t_fnLengthOverflow( settings );\n\n\t// Fire length change event\n\t_fnCallbackFire( settings, null, 'length', [settings, len] );\n}\n\n\n/**\n * Generate the node required for user display length changing\n *  @param {object} settings dataTables settings object\n *  @returns {node} Display length feature node\n *  @memberof DataTable#oApi\n */\nfunction _fnFeatureHtmlLength ( settings )\n{\n\tvar\n\t\tclasses  = settings.oClasses,\n\t\ttableId  = settings.sTableId,\n\t\tmenu     = settings.aLengthMenu,\n\t\td2       = Array.isArray( menu[0] ),\n\t\tlengths  = d2 ? menu[0] : menu,\n\t\tlanguage = d2 ? menu[1] : menu;\n\n\tvar select = $('<select/>', {\n\t\t'name':          tableId+'_length',\n\t\t'aria-controls': tableId,\n\t\t'class':         classes.sLengthSelect\n\t} );\n\n\tfor ( var i=0, ien=lengths.length ; i<ien ; i++ ) {\n\t\tselect[0][ i ] = new Option(\n\t\t\ttypeof language[i] === 'number' ?\n\t\t\t\tsettings.fnFormatNumber( language[i] ) :\n\t\t\t\tlanguage[i],\n\t\t\tlengths[i]\n\t\t);\n\t}\n\n\tvar div = $('<div><label/></div>').addClass( classes.sLength );\n\tif ( ! settings.aanFeatures.l ) {\n\t\tdiv[0].id = tableId+'_length';\n\t}\n\n\tdiv.children().append(\n\t\tsettings.oLanguage.sLengthMenu.replace( '_MENU_', select[0].outerHTML )\n\t);\n\n\t// Can't use `select` variable as user might provide their own and the\n\t// reference is broken by the use of outerHTML\n\t$('select', div)\n\t\t.val( settings._iDisplayLength )\n\t\t.on( 'change.DT', function(e) {\n\t\t\t_fnLengthChange( settings, $(this).val() );\n\t\t\t_fnDraw( settings );\n\t\t} );\n\n\t// Update node value whenever anything changes the table's length\n\t$(settings.nTable).on( 'length.dt.DT', function (e, s, len) {\n\t\tif ( settings === s ) {\n\t\t\t$('select', div).val( len );\n\t\t}\n\t} );\n\n\treturn div[0];\n}\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Note that most of the paging logic is done in\n * DataTable.ext.pager\n */\n\n/**\n * Generate the node required for default pagination\n *  @param {object} oSettings dataTables settings object\n *  @returns {node} Pagination feature node\n *  @memberof DataTable#oApi\n */\nfunction _fnFeatureHtmlPaginate ( settings )\n{\n\tvar\n\t\ttype   = settings.sPaginationType,\n\t\tplugin = DataTable.ext.pager[ type ],\n\t\tmodern = typeof plugin === 'function',\n\t\tredraw = function( settings ) {\n\t\t\t_fnDraw( settings );\n\t\t},\n\t\tnode = $('<div/>').addClass( settings.oClasses.sPaging + type )[0],\n\t\tfeatures = settings.aanFeatures;\n\n\tif ( ! modern ) {\n\t\tplugin.fnInit( settings, node, redraw );\n\t}\n\n\t/* Add a draw callback for the pagination on first instance, to update the paging display */\n\tif ( ! features.p )\n\t{\n\t\tnode.id = settings.sTableId+'_paginate';\n\n\t\tsettings.aoDrawCallback.push( {\n\t\t\t\"fn\": function( settings ) {\n\t\t\t\tif ( modern ) {\n\t\t\t\t\tvar\n\t\t\t\t\t\tstart      = settings._iDisplayStart,\n\t\t\t\t\t\tlen        = settings._iDisplayLength,\n\t\t\t\t\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\t\t\t\t\tall        = len === -1,\n\t\t\t\t\t\tpage = all ? 0 : Math.ceil( start / len ),\n\t\t\t\t\t\tpages = all ? 1 : Math.ceil( visRecords / len ),\n\t\t\t\t\t\tbuttons = plugin(page, pages),\n\t\t\t\t\t\ti, ien;\n\n\t\t\t\t\tfor ( i=0, ien=features.p.length ; i<ien ; i++ ) {\n\t\t\t\t\t\t_fnRenderer( settings, 'pageButton' )(\n\t\t\t\t\t\t\tsettings, features.p[i], i, buttons, page, pages\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tplugin.fnUpdate( settings, redraw );\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"sName\": \"pagination\"\n\t\t} );\n\t}\n\n\treturn node;\n}\n\n\n/**\n * Alter the display settings to change the page\n *  @param {object} settings DataTables settings object\n *  @param {string|int} action Paging action to take: \"first\", \"previous\",\n *    \"next\" or \"last\" or page number to jump to (integer)\n *  @param [bool] redraw Automatically draw the update or not\n *  @returns {bool} true page has changed, false - no change\n *  @memberof DataTable#oApi\n */\nfunction _fnPageChange ( settings, action, redraw )\n{\n\tvar\n\t\tstart     = settings._iDisplayStart,\n\t\tlen       = settings._iDisplayLength,\n\t\trecords   = settings.fnRecordsDisplay();\n\n\tif ( records === 0 || len === -1 )\n\t{\n\t\tstart = 0;\n\t}\n\telse if ( typeof action === \"number\" )\n\t{\n\t\tstart = action * len;\n\n\t\tif ( start > records )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t}\n\telse if ( action == \"first\" )\n\t{\n\t\tstart = 0;\n\t}\n\telse if ( action == \"previous\" )\n\t{\n\t\tstart = len >= 0 ?\n\t\t\tstart - len :\n\t\t\t0;\n\n\t\tif ( start < 0 )\n\t\t{\n\t\t  start = 0;\n\t\t}\n\t}\n\telse if ( action == \"next\" )\n\t{\n\t\tif ( start + len < records )\n\t\t{\n\t\t\tstart += len;\n\t\t}\n\t}\n\telse if ( action == \"last\" )\n\t{\n\t\tstart = Math.floor( (records-1) / len) * len;\n\t}\n\telse\n\t{\n\t\t_fnLog( settings, 0, \"Unknown paging action: \"+action, 5 );\n\t}\n\n\tvar changed = settings._iDisplayStart !== start;\n\tsettings._iDisplayStart = start;\n\n\tif ( changed ) {\n\t\t_fnCallbackFire( settings, null, 'page', [settings] );\n\n\t\tif ( redraw ) {\n\t\t\t_fnDraw( settings );\n\t\t}\n\t}\n\telse {\n\t\t// No change event - paging was called, but no change\n\t\t_fnCallbackFire( settings, null, 'page-nc', [settings] );\n\t}\n\n\treturn changed;\n}\n\n\n\n/**\n * Generate the node required for the processing node\n *  @param {object} settings dataTables settings object\n *  @returns {node} Processing element\n *  @memberof DataTable#oApi\n */\nfunction _fnFeatureHtmlProcessing ( settings )\n{\n\treturn $('<div/>', {\n\t\t\t'id': ! settings.aanFeatures.r ? settings.sTableId+'_processing' : null,\n\t\t\t'class': settings.oClasses.sProcessing\n\t\t} )\n\t\t.html( settings.oLanguage.sProcessing )\n\t\t.append('<div><div></div><div></div><div></div><div></div></div>')\n\t\t.insertBefore( settings.nTable )[0];\n}\n\n\n/**\n * Display or hide the processing indicator\n *  @param {object} settings dataTables settings object\n *  @param {bool} show Show the processing indicator (true) or not (false)\n *  @memberof DataTable#oApi\n */\nfunction _fnProcessingDisplay ( settings, show )\n{\n\tif ( settings.oFeatures.bProcessing ) {\n\t\t$(settings.aanFeatures.r).css( 'display', show ? 'block' : 'none' );\n\t}\n\n\t_fnCallbackFire( settings, null, 'processing', [settings, show] );\n}\n\n/**\n * Add any control elements for the table - specifically scrolling\n *  @param {object} settings dataTables settings object\n *  @returns {node} Node to add to the DOM\n *  @memberof DataTable#oApi\n */\nfunction _fnFeatureHtmlTable ( settings )\n{\n\tvar table = $(settings.nTable);\n\n\t// Scrolling from here on in\n\tvar scroll = settings.oScroll;\n\n\tif ( scroll.sX === '' && scroll.sY === '' ) {\n\t\treturn settings.nTable;\n\t}\n\n\tvar scrollX = scroll.sX;\n\tvar scrollY = scroll.sY;\n\tvar classes = settings.oClasses;\n\tvar caption = table.children('caption');\n\tvar captionSide = caption.length ? caption[0]._captionSide : null;\n\tvar headerClone = $( table[0].cloneNode(false) );\n\tvar footerClone = $( table[0].cloneNode(false) );\n\tvar footer = table.children('tfoot');\n\tvar _div = '<div/>';\n\tvar size = function ( s ) {\n\t\treturn !s ? null : _fnStringToCss( s );\n\t};\n\n\tif ( ! footer.length ) {\n\t\tfooter = null;\n\t}\n\n\t/*\n\t * The HTML structure that we want to generate in this function is:\n\t *  div - scroller\n\t *    div - scroll head\n\t *      div - scroll head inner\n\t *        table - scroll head table\n\t *          thead - thead\n\t *    div - scroll body\n\t *      table - table (master table)\n\t *        thead - thead clone for sizing\n\t *        tbody - tbody\n\t *    div - scroll foot\n\t *      div - scroll foot inner\n\t *        table - scroll foot table\n\t *          tfoot - tfoot\n\t */\n\tvar scroller = $( _div, { 'class': classes.sScrollWrapper } )\n\t\t.append(\n\t\t\t$(_div, { 'class': classes.sScrollHead } )\n\t\t\t\t.css( {\n\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\tposition: 'relative',\n\t\t\t\t\tborder: 0,\n\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t} )\n\t\t\t\t.append(\n\t\t\t\t\t$(_div, { 'class': classes.sScrollHeadInner } )\n\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t'box-sizing': 'content-box',\n\t\t\t\t\t\t\twidth: scroll.sXInner || '100%'\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\theaderClone\n\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t.append( captionSide === 'top' ? caption : null )\n\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\ttable.children('thead')\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t)\n\t\t)\n\t\t.append(\n\t\t\t$(_div, { 'class': classes.sScrollBody } )\n\t\t\t\t.css( {\n\t\t\t\t\tposition: 'relative',\n\t\t\t\t\toverflow: 'auto',\n\t\t\t\t\twidth: size( scrollX )\n\t\t\t\t} )\n\t\t\t\t.append( table )\n\t\t);\n\n\tif ( footer ) {\n\t\tscroller.append(\n\t\t\t$(_div, { 'class': classes.sScrollFoot } )\n\t\t\t\t.css( {\n\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\tborder: 0,\n\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t} )\n\t\t\t\t.append(\n\t\t\t\t\t$(_div, { 'class': classes.sScrollFootInner } )\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\tfooterClone\n\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t.append( captionSide === 'bottom' ? caption : null )\n\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\ttable.children('tfoot')\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t)\n\t\t);\n\t}\n\n\tvar children = scroller.children();\n\tvar scrollHead = children[0];\n\tvar scrollBody = children[1];\n\tvar scrollFoot = footer ? children[2] : null;\n\n\t// When the body is scrolled, then we also want to scroll the headers\n\tif ( scrollX ) {\n\t\t$(scrollBody).on( 'scroll.DT', function (e) {\n\t\t\tvar scrollLeft = this.scrollLeft;\n\n\t\t\tscrollHead.scrollLeft = scrollLeft;\n\n\t\t\tif ( footer ) {\n\t\t\t\tscrollFoot.scrollLeft = scrollLeft;\n\t\t\t}\n\t\t} );\n\t}\n\n\t$(scrollBody).css('max-height', scrollY);\n\tif (! scroll.bCollapse) {\n\t\t$(scrollBody).css('height', scrollY);\n\t}\n\n\tsettings.nScrollHead = scrollHead;\n\tsettings.nScrollBody = scrollBody;\n\tsettings.nScrollFoot = scrollFoot;\n\n\t// On redraw - align columns\n\tsettings.aoDrawCallback.push( {\n\t\t\"fn\": _fnScrollDraw,\n\t\t\"sName\": \"scrolling\"\n\t} );\n\n\treturn scroller[0];\n}\n\n\n\n/**\n * Update the header, footer and body tables for resizing - i.e. column\n * alignment.\n *\n * Welcome to the most horrible function DataTables. The process that this\n * function follows is basically:\n *   1. Re-create the table inside the scrolling div\n *   2. Take live measurements from the DOM\n *   3. Apply the measurements to align the columns\n *   4. Clean up\n *\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnScrollDraw ( settings )\n{\n\t// Given that this is such a monster function, a lot of variables are use\n\t// to try and keep the minimised size as small as possible\n\tvar\n\t\tscroll         = settings.oScroll,\n\t\tscrollX        = scroll.sX,\n\t\tscrollXInner   = scroll.sXInner,\n\t\tscrollY        = scroll.sY,\n\t\tbarWidth       = scroll.iBarWidth,\n\t\tdivHeader      = $(settings.nScrollHead),\n\t\tdivHeaderStyle = divHeader[0].style,\n\t\tdivHeaderInner = divHeader.children('div'),\n\t\tdivHeaderInnerStyle = divHeaderInner[0].style,\n\t\tdivHeaderTable = divHeaderInner.children('table'),\n\t\tdivBodyEl      = settings.nScrollBody,\n\t\tdivBody        = $(divBodyEl),\n\t\tdivBodyStyle   = divBodyEl.style,\n\t\tdivFooter      = $(settings.nScrollFoot),\n\t\tdivFooterInner = divFooter.children('div'),\n\t\tdivFooterTable = divFooterInner.children('table'),\n\t\theader         = $(settings.nTHead),\n\t\ttable          = $(settings.nTable),\n\t\ttableEl        = table[0],\n\t\ttableStyle     = tableEl.style,\n\t\tfooter         = settings.nTFoot ? $(settings.nTFoot) : null,\n\t\tbrowser        = settings.oBrowser,\n\t\tie67           = browser.bScrollOversize,\n\t\tdtHeaderCells  = _pluck( settings.aoColumns, 'nTh' ),\n\t\theaderTrgEls, footerTrgEls,\n\t\theaderSrcEls, footerSrcEls,\n\t\theaderCopy, footerCopy,\n\t\theaderWidths=[], footerWidths=[],\n\t\theaderContent=[], footerContent=[],\n\t\tidx, correction, sanityWidth,\n\t\tzeroOut = function(nSizer) {\n\t\t\tvar style = nSizer.style;\n\t\t\tstyle.paddingTop = \"0\";\n\t\t\tstyle.paddingBottom = \"0\";\n\t\t\tstyle.borderTopWidth = \"0\";\n\t\t\tstyle.borderBottomWidth = \"0\";\n\t\t\tstyle.height = 0;\n\t\t};\n\n\t// If the scrollbar visibility has changed from the last draw, we need to\n\t// adjust the column sizes as the table width will have changed to account\n\t// for the scrollbar\n\tvar scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;\n\t\n\tif ( settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined ) {\n\t\tsettings.scrollBarVis = scrollBarVis;\n\t\t_fnAdjustColumnSizing( settings );\n\t\treturn; // adjust column sizing will call this function again\n\t}\n\telse {\n\t\tsettings.scrollBarVis = scrollBarVis;\n\t}\n\n\t/*\n\t * 1. Re-create the table inside the scrolling div\n\t */\n\n\t// Remove the old minimised thead and tfoot elements in the inner table\n\ttable.children('thead, tfoot').remove();\n\n\tif ( footer ) {\n\t\tfooterCopy = footer.clone().prependTo( table );\n\t\tfooterTrgEls = footer.find('tr'); // the original tfoot is in its own table and must be sized\n\t\tfooterSrcEls = footerCopy.find('tr');\n\t\tfooterCopy.find('[id]').removeAttr('id');\n\t}\n\n\t// Clone the current header and footer elements and then place it into the inner table\n\theaderCopy = header.clone().prependTo( table );\n\theaderTrgEls = header.find('tr'); // original header is in its own table\n\theaderSrcEls = headerCopy.find('tr');\n\theaderCopy.find('th, td').removeAttr('tabindex');\n\theaderCopy.find('[id]').removeAttr('id');\n\n\n\t/*\n\t * 2. Take live measurements from the DOM - do not alter the DOM itself!\n\t */\n\n\t// Remove old sizing and apply the calculated column widths\n\t// Get the unique column headers in the newly created (cloned) header. We want to apply the\n\t// calculated sizes to this header\n\tif ( ! scrollX )\n\t{\n\t\tdivBodyStyle.width = '100%';\n\t\tdivHeader[0].style.width = '100%';\n\t}\n\n\t$.each( _fnGetUniqueThs( settings, headerCopy ), function ( i, el ) {\n\t\tidx = _fnVisibleToColumnIndex( settings, i );\n\t\tel.style.width = settings.aoColumns[idx].sWidth;\n\t} );\n\n\tif ( footer ) {\n\t\t_fnApplyToChildren( function(n) {\n\t\t\tn.style.width = \"\";\n\t\t}, footerSrcEls );\n\t}\n\n\t// Size the table as a whole\n\tsanityWidth = table.outerWidth();\n\tif ( scrollX === \"\" ) {\n\t\t// No x scrolling\n\t\ttableStyle.width = \"100%\";\n\n\t\t// IE7 will make the width of the table when 100% include the scrollbar\n\t\t// - which is shouldn't. When there is a scrollbar we need to take this\n\t\t// into account.\n\t\tif ( ie67 && (table.find('tbody').height() > divBodyEl.offsetHeight ||\n\t\t\tdivBody.css('overflow-y') == \"scroll\")\n\t\t) {\n\t\t\ttableStyle.width = _fnStringToCss( table.outerWidth() - barWidth);\n\t\t}\n\n\t\t// Recalculate the sanity width\n\t\tsanityWidth = table.outerWidth();\n\t}\n\telse if ( scrollXInner !== \"\" ) {\n\t\t// legacy x scroll inner has been given - use it\n\t\ttableStyle.width = _fnStringToCss(scrollXInner);\n\n\t\t// Recalculate the sanity width\n\t\tsanityWidth = table.outerWidth();\n\t}\n\n\t// Hidden header should have zero height, so remove padding and borders. Then\n\t// set the width based on the real headers\n\n\t// Apply all styles in one pass\n\t_fnApplyToChildren( zeroOut, headerSrcEls );\n\n\t// Read all widths in next pass\n\t_fnApplyToChildren( function(nSizer) {\n\t\tvar style = window.getComputedStyle ?\n\t\t\twindow.getComputedStyle(nSizer).width :\n\t\t\t_fnStringToCss( $(nSizer).width() );\n\n\t\theaderContent.push( nSizer.innerHTML );\n\t\theaderWidths.push( style );\n\t}, headerSrcEls );\n\n\t// Apply all widths in final pass\n\t_fnApplyToChildren( function(nToSize, i) {\n\t\tnToSize.style.width = headerWidths[i];\n\t}, headerTrgEls );\n\n\t$(headerSrcEls).css('height', 0);\n\n\t/* Same again with the footer if we have one */\n\tif ( footer )\n\t{\n\t\t_fnApplyToChildren( zeroOut, footerSrcEls );\n\n\t\t_fnApplyToChildren( function(nSizer) {\n\t\t\tfooterContent.push( nSizer.innerHTML );\n\t\t\tfooterWidths.push( _fnStringToCss( $(nSizer).css('width') ) );\n\t\t}, footerSrcEls );\n\n\t\t_fnApplyToChildren( function(nToSize, i) {\n\t\t\tnToSize.style.width = footerWidths[i];\n\t\t}, footerTrgEls );\n\n\t\t$(footerSrcEls).height(0);\n\t}\n\n\n\t/*\n\t * 3. Apply the measurements\n\t */\n\n\t// \"Hide\" the header and footer that we used for the sizing. We need to keep\n\t// the content of the cell so that the width applied to the header and body\n\t// both match, but we want to hide it completely. We want to also fix their\n\t// width to what they currently are\n\t_fnApplyToChildren( function(nSizer, i) {\n\t\tnSizer.innerHTML = '<div class=\"dataTables_sizing\">'+headerContent[i]+'</div>';\n\t\tnSizer.childNodes[0].style.height = \"0\";\n\t\tnSizer.childNodes[0].style.overflow = \"hidden\";\n\t\tnSizer.style.width = headerWidths[i];\n\t}, headerSrcEls );\n\n\tif ( footer )\n\t{\n\t\t_fnApplyToChildren( function(nSizer, i) {\n\t\t\tnSizer.innerHTML = '<div class=\"dataTables_sizing\">'+footerContent[i]+'</div>';\n\t\t\tnSizer.childNodes[0].style.height = \"0\";\n\t\t\tnSizer.childNodes[0].style.overflow = \"hidden\";\n\t\t\tnSizer.style.width = footerWidths[i];\n\t\t}, footerSrcEls );\n\t}\n\n\t// Sanity check that the table is of a sensible width. If not then we are going to get\n\t// misalignment - try to prevent this by not allowing the table to shrink below its min width\n\tif ( Math.round(table.outerWidth()) < Math.round(sanityWidth) )\n\t{\n\t\t// The min width depends upon if we have a vertical scrollbar visible or not */\n\t\tcorrection = ((divBodyEl.scrollHeight > divBodyEl.offsetHeight ||\n\t\t\tdivBody.css('overflow-y') == \"scroll\")) ?\n\t\t\t\tsanityWidth+barWidth :\n\t\t\t\tsanityWidth;\n\n\t\t// IE6/7 are a law unto themselves...\n\t\tif ( ie67 && (divBodyEl.scrollHeight >\n\t\t\tdivBodyEl.offsetHeight || divBody.css('overflow-y') == \"scroll\")\n\t\t) {\n\t\t\ttableStyle.width = _fnStringToCss( correction-barWidth );\n\t\t}\n\n\t\t// And give the user a warning that we've stopped the table getting too small\n\t\tif ( scrollX === \"\" || scrollXInner !== \"\" ) {\n\t\t\t_fnLog( settings, 1, 'Possible column misalignment', 6 );\n\t\t}\n\t}\n\telse\n\t{\n\t\tcorrection = '100%';\n\t}\n\n\t// Apply to the container elements\n\tdivBodyStyle.width = _fnStringToCss( correction );\n\tdivHeaderStyle.width = _fnStringToCss( correction );\n\n\tif ( footer ) {\n\t\tsettings.nScrollFoot.style.width = _fnStringToCss( correction );\n\t}\n\n\n\t/*\n\t * 4. Clean up\n\t */\n\tif ( ! scrollY ) {\n\t\t/* IE7< puts a vertical scrollbar in place (when it shouldn't be) due to subtracting\n\t\t * the scrollbar height from the visible display, rather than adding it on. We need to\n\t\t * set the height in order to sort this. Don't want to do it in any other browsers.\n\t\t */\n\t\tif ( ie67 ) {\n\t\t\tdivBodyStyle.height = _fnStringToCss( tableEl.offsetHeight+barWidth );\n\t\t}\n\t}\n\n\t/* Finally set the width's of the header and footer tables */\n\tvar iOuterWidth = table.outerWidth();\n\tdivHeaderTable[0].style.width = _fnStringToCss( iOuterWidth );\n\tdivHeaderInnerStyle.width = _fnStringToCss( iOuterWidth );\n\n\t// Figure out if there are scrollbar present - if so then we need a the header and footer to\n\t// provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\n\tvar bScrolling = table.height() > divBodyEl.clientHeight || divBody.css('overflow-y') == \"scroll\";\n\tvar padding = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right' );\n\tdivHeaderInnerStyle[ padding ] = bScrolling ? barWidth+\"px\" : \"0px\";\n\n\tif ( footer ) {\n\t\tdivFooterTable[0].style.width = _fnStringToCss( iOuterWidth );\n\t\tdivFooterInner[0].style.width = _fnStringToCss( iOuterWidth );\n\t\tdivFooterInner[0].style[padding] = bScrolling ? barWidth+\"px\" : \"0px\";\n\t}\n\n\t// Correct DOM ordering for colgroup - comes before the thead\n\ttable.children('colgroup').insertBefore( table.children('thead') );\n\n\t/* Adjust the position of the header in case we loose the y-scrollbar */\n\tdivBody.trigger('scroll');\n\n\t// If sorting or filtering has occurred, jump the scrolling back to the top\n\t// only if we aren't holding the position\n\tif ( (settings.bSorted || settings.bFiltered) && ! settings._drawHold ) {\n\t\tdivBodyEl.scrollTop = 0;\n\t}\n}\n\n\n\n/**\n * Apply a given function to the display child nodes of an element array (typically\n * TD children of TR rows\n *  @param {function} fn Method to apply to the objects\n *  @param array {nodes} an1 List of elements to look through for display children\n *  @param array {nodes} an2 Another list (identical structure to the first) - optional\n *  @memberof DataTable#oApi\n */\nfunction _fnApplyToChildren( fn, an1, an2 )\n{\n\tvar index=0, i=0, iLen=an1.length;\n\tvar nNode1, nNode2;\n\n\twhile ( i < iLen ) {\n\t\tnNode1 = an1[i].firstChild;\n\t\tnNode2 = an2 ? an2[i].firstChild : null;\n\n\t\twhile ( nNode1 ) {\n\t\t\tif ( nNode1.nodeType === 1 ) {\n\t\t\t\tif ( an2 ) {\n\t\t\t\t\tfn( nNode1, nNode2, index );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfn( nNode1, index );\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tnNode1 = nNode1.nextSibling;\n\t\t\tnNode2 = an2 ? nNode2.nextSibling : null;\n\t\t}\n\n\t\ti++;\n\t}\n}\n\n\n\nvar __re_html_remove = /<.*?>/g;\n\n\n/**\n * Calculate the width of columns for the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnCalculateColumnWidths ( oSettings )\n{\n\tvar\n\t\ttable = oSettings.nTable,\n\t\tcolumns = oSettings.aoColumns,\n\t\tscroll = oSettings.oScroll,\n\t\tscrollY = scroll.sY,\n\t\tscrollX = scroll.sX,\n\t\tscrollXInner = scroll.sXInner,\n\t\tcolumnCount = columns.length,\n\t\tvisibleColumns = _fnGetColumns( oSettings, 'bVisible' ),\n\t\theaderCells = $('th', oSettings.nTHead),\n\t\ttableWidthAttr = table.getAttribute('width'), // from DOM element\n\t\ttableContainer = table.parentNode,\n\t\tuserInputs = false,\n\t\ti, column, columnIdx, width, outerWidth,\n\t\tbrowser = oSettings.oBrowser,\n\t\tie67 = browser.bScrollOversize;\n\n\tvar styleWidth = table.style.width;\n\tif ( styleWidth && styleWidth.indexOf('%') !== -1 ) {\n\t\ttableWidthAttr = styleWidth;\n\t}\n\n\t/* Convert any user input sizes into pixel sizes */\n\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\tcolumn = columns[ visibleColumns[i] ];\n\n\t\tif ( column.sWidth !== null ) {\n\t\t\tcolumn.sWidth = _fnConvertToWidth( column.sWidthOrig, tableContainer );\n\n\t\t\tuserInputs = true;\n\t\t}\n\t}\n\n\t/* If the number of columns in the DOM equals the number that we have to\n\t * process in DataTables, then we can use the offsets that are created by\n\t * the web- browser. No custom sizes can be set in order for this to happen,\n\t * nor scrolling used\n\t */\n\tif ( ie67 || ! userInputs && ! scrollX && ! scrollY &&\n\t     columnCount == _fnVisbleColumns( oSettings ) &&\n\t     columnCount == headerCells.length\n\t) {\n\t\tfor ( i=0 ; i<columnCount ; i++ ) {\n\t\t\tvar colIdx = _fnVisibleToColumnIndex( oSettings, i );\n\n\t\t\tif ( colIdx !== null ) {\n\t\t\t\tcolumns[ colIdx ].sWidth = _fnStringToCss( headerCells.eq(i).width() );\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\t// Otherwise construct a single row, worst case, table with the widest\n\t\t// node in the data, assign any user defined widths, then insert it into\n\t\t// the DOM and allow the browser to do all the hard work of calculating\n\t\t// table widths\n\t\tvar tmpTable = $(table).clone() // don't use cloneNode - IE8 will remove events on the main table\n\t\t\t.css( 'visibility', 'hidden' )\n\t\t\t.removeAttr( 'id' );\n\n\t\t// Clean up the table body\n\t\ttmpTable.find('tbody tr').remove();\n\t\tvar tr = $('<tr/>').appendTo( tmpTable.find('tbody') );\n\n\t\t// Clone the table header and footer - we can't use the header / footer\n\t\t// from the cloned table, since if scrolling is active, the table's\n\t\t// real header and footer are contained in different table tags\n\t\ttmpTable.find('thead, tfoot').remove();\n\t\ttmpTable\n\t\t\t.append( $(oSettings.nTHead).clone() )\n\t\t\t.append( $(oSettings.nTFoot).clone() );\n\n\t\t// Remove any assigned widths from the footer (from scrolling)\n\t\ttmpTable.find('tfoot th, tfoot td').css('width', '');\n\n\t\t// Apply custom sizing to the cloned header\n\t\theaderCells = _fnGetUniqueThs( oSettings, tmpTable.find('thead')[0] );\n\n\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\tcolumn = columns[ visibleColumns[i] ];\n\n\t\t\theaderCells[i].style.width = column.sWidthOrig !== null && column.sWidthOrig !== '' ?\n\t\t\t\t_fnStringToCss( column.sWidthOrig ) :\n\t\t\t\t'';\n\n\t\t\t// For scrollX we need to force the column width otherwise the\n\t\t\t// browser will collapse it. If this width is smaller than the\n\t\t\t// width the column requires, then it will have no effect\n\t\t\tif ( column.sWidthOrig && scrollX ) {\n\t\t\t\t$( headerCells[i] ).append( $('<div/>').css( {\n\t\t\t\t\twidth: column.sWidthOrig,\n\t\t\t\t\tmargin: 0,\n\t\t\t\t\tpadding: 0,\n\t\t\t\t\tborder: 0,\n\t\t\t\t\theight: 1\n\t\t\t\t} ) );\n\t\t\t}\n\t\t}\n\n\t\t// Find the widest cell for each column and put it into the table\n\t\tif ( oSettings.aoData.length ) {\n\t\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\t\tcolumnIdx = visibleColumns[i];\n\t\t\t\tcolumn = columns[ columnIdx ];\n\n\t\t\t\t$( _fnGetWidestNode( oSettings, columnIdx ) )\n\t\t\t\t\t.clone( false )\n\t\t\t\t\t.append( column.sContentPadding )\n\t\t\t\t\t.appendTo( tr );\n\t\t\t}\n\t\t}\n\n\t\t// Tidy the temporary table - remove name attributes so there aren't\n\t\t// duplicated in the dom (radio elements for example)\n\t\t$('[name]', tmpTable).removeAttr('name');\n\n\t\t// Table has been built, attach to the document so we can work with it.\n\t\t// A holding element is used, positioned at the top of the container\n\t\t// with minimal height, so it has no effect on if the container scrolls\n\t\t// or not. Otherwise it might trigger scrolling when it actually isn't\n\t\t// needed\n\t\tvar holder = $('<div/>').css( scrollX || scrollY ?\n\t\t\t\t{\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tleft: 0,\n\t\t\t\t\theight: 1,\n\t\t\t\t\tright: 0,\n\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t} :\n\t\t\t\t{}\n\t\t\t)\n\t\t\t.append( tmpTable )\n\t\t\t.appendTo( tableContainer );\n\n\t\t// When scrolling (X or Y) we want to set the width of the table as \n\t\t// appropriate. However, when not scrolling leave the table width as it\n\t\t// is. This results in slightly different, but I think correct behaviour\n\t\tif ( scrollX && scrollXInner ) {\n\t\t\ttmpTable.width( scrollXInner );\n\t\t}\n\t\telse if ( scrollX ) {\n\t\t\ttmpTable.css( 'width', 'auto' );\n\t\t\ttmpTable.removeAttr('width');\n\n\t\t\t// If there is no width attribute or style, then allow the table to\n\t\t\t// collapse\n\t\t\tif ( tmpTable.width() < tableContainer.clientWidth && tableWidthAttr ) {\n\t\t\t\ttmpTable.width( tableContainer.clientWidth );\n\t\t\t}\n\t\t}\n\t\telse if ( scrollY ) {\n\t\t\ttmpTable.width( tableContainer.clientWidth );\n\t\t}\n\t\telse if ( tableWidthAttr ) {\n\t\t\ttmpTable.width( tableWidthAttr );\n\t\t}\n\n\t\t// Get the width of each column in the constructed table - we need to\n\t\t// know the inner width (so it can be assigned to the other table's\n\t\t// cells) and the outer width so we can calculate the full width of the\n\t\t// table. This is safe since DataTables requires a unique cell for each\n\t\t// column, but if ever a header can span multiple columns, this will\n\t\t// need to be modified.\n\t\tvar total = 0;\n\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\tvar cell = $(headerCells[i]);\n\t\t\tvar border = cell.outerWidth() - cell.width();\n\n\t\t\t// Use getBounding... where possible (not IE8-) because it can give\n\t\t\t// sub-pixel accuracy, which we then want to round up!\n\t\t\tvar bounding = browser.bBounding ?\n\t\t\t\tMath.ceil( headerCells[i].getBoundingClientRect().width ) :\n\t\t\t\tcell.outerWidth();\n\n\t\t\t// Total is tracked to remove any sub-pixel errors as the outerWidth\n\t\t\t// of the table might not equal the total given here (IE!).\n\t\t\ttotal += bounding;\n\n\t\t\t// Width for each column to use\n\t\t\tcolumns[ visibleColumns[i] ].sWidth = _fnStringToCss( bounding - border );\n\t\t}\n\n\t\ttable.style.width = _fnStringToCss( total );\n\n\t\t// Finished with the table - ditch it\n\t\tholder.remove();\n\t}\n\n\t// If there is a width attr, we want to attach an event listener which\n\t// allows the table sizing to automatically adjust when the window is\n\t// resized. Use the width attr rather than CSS, since we can't know if the\n\t// CSS is a relative value or absolute - DOM read is always px.\n\tif ( tableWidthAttr ) {\n\t\ttable.style.width = _fnStringToCss( tableWidthAttr );\n\t}\n\n\tif ( (tableWidthAttr || scrollX) && ! oSettings._reszEvt ) {\n\t\tvar bindResize = function () {\n\t\t\t$(window).on('resize.DT-'+oSettings.sInstance, _fnThrottle( function () {\n\t\t\t\t_fnAdjustColumnSizing( oSettings );\n\t\t\t} ) );\n\t\t};\n\n\t\t// IE6/7 will crash if we bind a resize event handler on page load.\n\t\t// To be removed in 1.11 which drops IE6/7 support\n\t\tif ( ie67 ) {\n\t\t\tsetTimeout( bindResize, 1000 );\n\t\t}\n\t\telse {\n\t\t\tbindResize();\n\t\t}\n\n\t\toSettings._reszEvt = true;\n\t}\n}\n\n\n/**\n * Throttle the calls to a function. Arguments and context are maintained for\n * the throttled function\n *  @param {function} fn Function to be called\n *  @param {int} [freq=200] call frequency in mS\n *  @returns {function} wrapped function\n *  @memberof DataTable#oApi\n */\nvar _fnThrottle = DataTable.util.throttle;\n\n\n/**\n * Convert a CSS unit width to pixels (e.g. 2em)\n *  @param {string} width width to be converted\n *  @param {node} parent parent to get the with for (required for relative widths) - optional\n *  @returns {int} width in pixels\n *  @memberof DataTable#oApi\n */\nfunction _fnConvertToWidth ( width, parent )\n{\n\tif ( ! width ) {\n\t\treturn 0;\n\t}\n\n\tvar n = $('<div/>')\n\t\t.css( 'width', _fnStringToCss( width ) )\n\t\t.appendTo( parent || document.body );\n\n\tvar val = n[0].offsetWidth;\n\tn.remove();\n\n\treturn val;\n}\n\n\n/**\n * Get the widest node\n *  @param {object} settings dataTables settings object\n *  @param {int} colIdx column of interest\n *  @returns {node} widest table node\n *  @memberof DataTable#oApi\n */\nfunction _fnGetWidestNode( settings, colIdx )\n{\n\tvar idx = _fnGetMaxLenString( settings, colIdx );\n\tif ( idx < 0 ) {\n\t\treturn null;\n\t}\n\n\tvar data = settings.aoData[ idx ];\n\treturn ! data.nTr ? // Might not have been created when deferred rendering\n\t\t$('<td/>').html( _fnGetCellData( settings, idx, colIdx, 'display' ) )[0] :\n\t\tdata.anCells[ colIdx ];\n}\n\n\n/**\n * Get the maximum strlen for each data column\n *  @param {object} settings dataTables settings object\n *  @param {int} colIdx column of interest\n *  @returns {string} max string length for each column\n *  @memberof DataTable#oApi\n */\nfunction _fnGetMaxLenString( settings, colIdx )\n{\n\tvar s, max=-1, maxIdx = -1;\n\n\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\ts = _fnGetCellData( settings, i, colIdx, 'display' )+'';\n\t\ts = s.replace( __re_html_remove, '' );\n\t\ts = s.replace( /&nbsp;/g, ' ' );\n\n\t\tif ( s.length > max ) {\n\t\t\tmax = s.length;\n\t\t\tmaxIdx = i;\n\t\t}\n\t}\n\n\treturn maxIdx;\n}\n\n\n/**\n * Append a CSS unit (only if required) to a string\n *  @param {string} value to css-ify\n *  @returns {string} value with css unit\n *  @memberof DataTable#oApi\n */\nfunction _fnStringToCss( s )\n{\n\tif ( s === null ) {\n\t\treturn '0px';\n\t}\n\n\tif ( typeof s == 'number' ) {\n\t\treturn s < 0 ?\n\t\t\t'0px' :\n\t\t\ts+'px';\n\t}\n\n\t// Check it has a unit character already\n\treturn s.match(/\\d$/) ?\n\t\ts+'px' :\n\t\ts;\n}\n\n\n\nfunction _fnSortFlatten ( settings )\n{\n\tvar\n\t\ti, iLen, k, kLen,\n\t\taSort = [],\n\t\taiOrig = [],\n\t\taoColumns = settings.aoColumns,\n\t\taDataSort, iCol, sType, srcCol,\n\t\tfixed = settings.aaSortingFixed,\n\t\tfixedObj = $.isPlainObject( fixed ),\n\t\tnestedSort = [],\n\t\tadd = function ( a ) {\n\t\t\tif ( a.length && ! Array.isArray( a[0] ) ) {\n\t\t\t\t// 1D array\n\t\t\t\tnestedSort.push( a );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// 2D array\n\t\t\t\t$.merge( nestedSort, a );\n\t\t\t}\n\t\t};\n\n\t// Build the sort array, with pre-fix and post-fix options if they have been\n\t// specified\n\tif ( Array.isArray( fixed ) ) {\n\t\tadd( fixed );\n\t}\n\n\tif ( fixedObj && fixed.pre ) {\n\t\tadd( fixed.pre );\n\t}\n\n\tadd( settings.aaSorting );\n\n\tif (fixedObj && fixed.post ) {\n\t\tadd( fixed.post );\n\t}\n\n\tfor ( i=0 ; i<nestedSort.length ; i++ )\n\t{\n\t\tsrcCol = nestedSort[i][0];\n\t\taDataSort = aoColumns[ srcCol ].aDataSort;\n\n\t\tfor ( k=0, kLen=aDataSort.length ; k<kLen ; k++ )\n\t\t{\n\t\t\tiCol = aDataSort[k];\n\t\t\tsType = aoColumns[ iCol ].sType || 'string';\n\n\t\t\tif ( nestedSort[i]._idx === undefined ) {\n\t\t\t\tnestedSort[i]._idx = $.inArray( nestedSort[i][1], aoColumns[iCol].asSorting );\n\t\t\t}\n\n\t\t\taSort.push( {\n\t\t\t\tsrc:       srcCol,\n\t\t\t\tcol:       iCol,\n\t\t\t\tdir:       nestedSort[i][1],\n\t\t\t\tindex:     nestedSort[i]._idx,\n\t\t\t\ttype:      sType,\n\t\t\t\tformatter: DataTable.ext.type.order[ sType+\"-pre\" ]\n\t\t\t} );\n\t\t}\n\t}\n\n\treturn aSort;\n}\n\n/**\n * Change the order of the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n *  @todo This really needs split up!\n */\nfunction _fnSort ( oSettings )\n{\n\tvar\n\t\ti, ien, iLen, j, jLen, k, kLen,\n\t\tsDataType, nTh,\n\t\taiOrig = [],\n\t\toExtSort = DataTable.ext.type.order,\n\t\taoData = oSettings.aoData,\n\t\taoColumns = oSettings.aoColumns,\n\t\taDataSort, data, iCol, sType, oSort,\n\t\tformatters = 0,\n\t\tsortCol,\n\t\tdisplayMaster = oSettings.aiDisplayMaster,\n\t\taSort;\n\n\t// Resolve any column types that are unknown due to addition or invalidation\n\t// @todo Can this be moved into a 'data-ready' handler which is called when\n\t//   data is going to be used in the table?\n\t_fnColumnTypes( oSettings );\n\n\taSort = _fnSortFlatten( oSettings );\n\n\tfor ( i=0, ien=aSort.length ; i<ien ; i++ ) {\n\t\tsortCol = aSort[i];\n\n\t\t// Track if we can use the fast sort algorithm\n\t\tif ( sortCol.formatter ) {\n\t\t\tformatters++;\n\t\t}\n\n\t\t// Load the data needed for the sort, for each cell\n\t\t_fnSortData( oSettings, sortCol.col );\n\t}\n\n\t/* No sorting required if server-side or no sorting array */\n\tif ( _fnDataSource( oSettings ) != 'ssp' && aSort.length !== 0 )\n\t{\n\t\t// Create a value - key array of the current row positions such that we can use their\n\t\t// current position during the sort, if values match, in order to perform stable sorting\n\t\tfor ( i=0, iLen=displayMaster.length ; i<iLen ; i++ ) {\n\t\t\taiOrig[ displayMaster[i] ] = i;\n\t\t}\n\n\t\t/* Do the sort - here we want multi-column sorting based on a given data source (column)\n\t\t * and sorting function (from oSort) in a certain direction. It's reasonably complex to\n\t\t * follow on it's own, but this is what we want (example two column sorting):\n\t\t *  fnLocalSorting = function(a,b){\n\t\t *    var iTest;\n\t\t *    iTest = oSort['string-asc']('data11', 'data12');\n\t\t *      if (iTest !== 0)\n\t\t *        return iTest;\n\t\t *    iTest = oSort['numeric-desc']('data21', 'data22');\n\t\t *    if (iTest !== 0)\n\t\t *      return iTest;\n\t\t *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\n\t\t *  }\n\t\t * Basically we have a test for each sorting column, if the data in that column is equal,\n\t\t * test the next column. If all columns match, then we use a numeric sort on the row\n\t\t * positions in the original data array to provide a stable sort.\n\t\t *\n\t\t * Note - I know it seems excessive to have two sorting methods, but the first is around\n\t\t * 15% faster, so the second is only maintained for backwards compatibility with sorting\n\t\t * methods which do not have a pre-sort formatting function.\n\t\t */\n\t\tif ( formatters === aSort.length ) {\n\t\t\t// All sort types have formatting functions\n\t\t\tdisplayMaster.sort( function ( a, b ) {\n\t\t\t\tvar\n\t\t\t\t\tx, y, k, test, sort,\n\t\t\t\t\tlen=aSort.length,\n\t\t\t\t\tdataA = aoData[a]._aSortData,\n\t\t\t\t\tdataB = aoData[b]._aSortData;\n\n\t\t\t\tfor ( k=0 ; k<len ; k++ ) {\n\t\t\t\t\tsort = aSort[k];\n\n\t\t\t\t\tx = dataA[ sort.col ];\n\t\t\t\t\ty = dataB[ sort.col ];\n\n\t\t\t\t\ttest = x<y ? -1 : x>y ? 1 : 0;\n\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\treturn sort.dir === 'asc' ? test : -test;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tx = aiOrig[a];\n\t\t\t\ty = aiOrig[b];\n\t\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t\t} );\n\t\t}\n\t\telse {\n\t\t\t// Depreciated - remove in 1.11 (providing a plug-in option)\n\t\t\t// Not all sort types have formatting methods, so we have to call their sorting\n\t\t\t// methods.\n\t\t\tdisplayMaster.sort( function ( a, b ) {\n\t\t\t\tvar\n\t\t\t\t\tx, y, k, l, test, sort, fn,\n\t\t\t\t\tlen=aSort.length,\n\t\t\t\t\tdataA = aoData[a]._aSortData,\n\t\t\t\t\tdataB = aoData[b]._aSortData;\n\n\t\t\t\tfor ( k=0 ; k<len ; k++ ) {\n\t\t\t\t\tsort = aSort[k];\n\n\t\t\t\t\tx = dataA[ sort.col ];\n\t\t\t\t\ty = dataB[ sort.col ];\n\n\t\t\t\t\tfn = oExtSort[ sort.type+\"-\"+sort.dir ] || oExtSort[ \"string-\"+sort.dir ];\n\t\t\t\t\ttest = fn( x, y );\n\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\treturn test;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tx = aiOrig[a];\n\t\t\t\ty = aiOrig[b];\n\t\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t\t} );\n\t\t}\n\t}\n\n\t/* Tell the draw function that we have sorted the data */\n\toSettings.bSorted = true;\n}\n\n\nfunction _fnSortAria ( settings )\n{\n\tvar label;\n\tvar nextSort;\n\tvar columns = settings.aoColumns;\n\tvar aSort = _fnSortFlatten( settings );\n\tvar oAria = settings.oLanguage.oAria;\n\n\t// ARIA attributes - need to loop all columns, to update all (removing old\n\t// attributes as needed)\n\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\n\t{\n\t\tvar col = columns[i];\n\t\tvar asSorting = col.asSorting;\n\t\tvar sTitle = col.ariaTitle || col.sTitle.replace( /<.*?>/g, \"\" );\n\t\tvar th = col.nTh;\n\n\t\t// IE7 is throwing an error when setting these properties with jQuery's\n\t\t// attr() and removeAttr() methods...\n\t\tth.removeAttribute('aria-sort');\n\n\t\t/* In ARIA only the first sorting column can be marked as sorting - no multi-sort option */\n\t\tif ( col.bSortable ) {\n\t\t\tif ( aSort.length > 0 && aSort[0].col == i ) {\n\t\t\t\tth.setAttribute('aria-sort', aSort[0].dir==\"asc\" ? \"ascending\" : \"descending\" );\n\t\t\t\tnextSort = asSorting[ aSort[0].index+1 ] || asSorting[0];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnextSort = asSorting[0];\n\t\t\t}\n\n\t\t\tlabel = sTitle + ( nextSort === \"asc\" ?\n\t\t\t\toAria.sSortAscending :\n\t\t\t\toAria.sSortDescending\n\t\t\t);\n\t\t}\n\t\telse {\n\t\t\tlabel = sTitle;\n\t\t}\n\n\t\tth.setAttribute('aria-label', label);\n\t}\n}\n\n\n/**\n * Function to run on user sort request\n *  @param {object} settings dataTables settings object\n *  @param {node} attachTo node to attach the handler to\n *  @param {int} colIdx column sorting index\n *  @param {boolean} [append=false] Append the requested sort to the existing\n *    sort if true (i.e. multi-column sort)\n *  @param {function} [callback] callback function\n *  @memberof DataTable#oApi\n */\nfunction _fnSortListener ( settings, colIdx, append, callback )\n{\n\tvar col = settings.aoColumns[ colIdx ];\n\tvar sorting = settings.aaSorting;\n\tvar asSorting = col.asSorting;\n\tvar nextSortIdx;\n\tvar next = function ( a, overflow ) {\n\t\tvar idx = a._idx;\n\t\tif ( idx === undefined ) {\n\t\t\tidx = $.inArray( a[1], asSorting );\n\t\t}\n\n\t\treturn idx+1 < asSorting.length ?\n\t\t\tidx+1 :\n\t\t\toverflow ?\n\t\t\t\tnull :\n\t\t\t\t0;\n\t};\n\n\t// Convert to 2D array if needed\n\tif ( typeof sorting[0] === 'number' ) {\n\t\tsorting = settings.aaSorting = [ sorting ];\n\t}\n\n\t// If appending the sort then we are multi-column sorting\n\tif ( append && settings.oFeatures.bSortMulti ) {\n\t\t// Are we already doing some kind of sort on this column?\n\t\tvar sortIdx = $.inArray( colIdx, _pluck(sorting, '0') );\n\n\t\tif ( sortIdx !== -1 ) {\n\t\t\t// Yes, modify the sort\n\t\t\tnextSortIdx = next( sorting[sortIdx], true );\n\n\t\t\tif ( nextSortIdx === null && sorting.length === 1 ) {\n\t\t\t\tnextSortIdx = 0; // can't remove sorting completely\n\t\t\t}\n\n\t\t\tif ( nextSortIdx === null ) {\n\t\t\t\tsorting.splice( sortIdx, 1 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsorting[sortIdx][1] = asSorting[ nextSortIdx ];\n\t\t\t\tsorting[sortIdx]._idx = nextSortIdx;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// No sort on this column yet\n\t\t\tsorting.push( [ colIdx, asSorting[0], 0 ] );\n\t\t\tsorting[sorting.length-1]._idx = 0;\n\t\t}\n\t}\n\telse if ( sorting.length && sorting[0][0] == colIdx ) {\n\t\t// Single column - already sorting on this column, modify the sort\n\t\tnextSortIdx = next( sorting[0] );\n\n\t\tsorting.length = 1;\n\t\tsorting[0][1] = asSorting[ nextSortIdx ];\n\t\tsorting[0]._idx = nextSortIdx;\n\t}\n\telse {\n\t\t// Single column - sort only on this column\n\t\tsorting.length = 0;\n\t\tsorting.push( [ colIdx, asSorting[0] ] );\n\t\tsorting[0]._idx = 0;\n\t}\n\n\t// Run the sort by calling a full redraw\n\t_fnReDraw( settings );\n\n\t// callback used for async user interaction\n\tif ( typeof callback == 'function' ) {\n\t\tcallback( settings );\n\t}\n}\n\n\n/**\n * Attach a sort handler (click) to a node\n *  @param {object} settings dataTables settings object\n *  @param {node} attachTo node to attach the handler to\n *  @param {int} colIdx column sorting index\n *  @param {function} [callback] callback function\n *  @memberof DataTable#oApi\n */\nfunction _fnSortAttachListener ( settings, attachTo, colIdx, callback )\n{\n\tvar col = settings.aoColumns[ colIdx ];\n\n\t_fnBindAction( attachTo, {}, function (e) {\n\t\t/* If the column is not sortable - don't to anything */\n\t\tif ( col.bSortable === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If processing is enabled use a timeout to allow the processing\n\t\t// display to be shown - otherwise to it synchronously\n\t\tif ( settings.oFeatures.bProcessing ) {\n\t\t\t_fnProcessingDisplay( settings, true );\n\n\t\t\tsetTimeout( function() {\n\t\t\t\t_fnSortListener( settings, colIdx, e.shiftKey, callback );\n\n\t\t\t\t// In server-side processing, the draw callback will remove the\n\t\t\t\t// processing display\n\t\t\t\tif ( _fnDataSource( settings ) !== 'ssp' ) {\n\t\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t}\n\t\t\t}, 0 );\n\t\t}\n\t\telse {\n\t\t\t_fnSortListener( settings, colIdx, e.shiftKey, callback );\n\t\t}\n\t} );\n}\n\n\n/**\n * Set the sorting classes on table's body, Note: it is safe to call this function\n * when bSort and bSortClasses are false\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnSortingClasses( settings )\n{\n\tvar oldSort = settings.aLastSort;\n\tvar sortClass = settings.oClasses.sSortColumn;\n\tvar sort = _fnSortFlatten( settings );\n\tvar features = settings.oFeatures;\n\tvar i, ien, colIdx;\n\n\tif ( features.bSort && features.bSortClasses ) {\n\t\t// Remove old sorting classes\n\t\tfor ( i=0, ien=oldSort.length ; i<ien ; i++ ) {\n\t\t\tcolIdx = oldSort[i].src;\n\n\t\t\t// Remove column sorting\n\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t.removeClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t}\n\n\t\t// Add new column sorting\n\t\tfor ( i=0, ien=sort.length ; i<ien ; i++ ) {\n\t\t\tcolIdx = sort[i].src;\n\n\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t.addClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t}\n\t}\n\n\tsettings.aLastSort = sort;\n}\n\n\n// Get the data to sort a column, be it from cache, fresh (populating the\n// cache), or from a sort formatter\nfunction _fnSortData( settings, idx )\n{\n\t// Custom sorting function - provided by the sort data type\n\tvar column = settings.aoColumns[ idx ];\n\tvar customSort = DataTable.ext.order[ column.sSortDataType ];\n\tvar customData;\n\n\tif ( customSort ) {\n\t\tcustomData = customSort.call( settings.oInstance, settings, idx,\n\t\t\t_fnColumnIndexToVisible( settings, idx )\n\t\t);\n\t}\n\n\t// Use / populate cache\n\tvar row, cellData;\n\tvar formatter = DataTable.ext.type.order[ column.sType+\"-pre\" ];\n\n\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\trow = settings.aoData[i];\n\n\t\tif ( ! row._aSortData ) {\n\t\t\trow._aSortData = [];\n\t\t}\n\n\t\tif ( ! row._aSortData[idx] || customSort ) {\n\t\t\tcellData = customSort ?\n\t\t\t\tcustomData[i] : // If there was a custom sort function, use data from there\n\t\t\t\t_fnGetCellData( settings, i, idx, 'sort' );\n\n\t\t\trow._aSortData[ idx ] = formatter ?\n\t\t\t\tformatter( cellData ) :\n\t\t\t\tcellData;\n\t\t}\n\t}\n}\n\n\n\n/**\n * Save the state of a table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnSaveState ( settings )\n{\n\tif (settings._bLoadingState) {\n\t\treturn;\n\t}\n\n\t/* Store the interesting variables */\n\tvar state = {\n\t\ttime:    +new Date(),\n\t\tstart:   settings._iDisplayStart,\n\t\tlength:  settings._iDisplayLength,\n\t\torder:   $.extend( true, [], settings.aaSorting ),\n\t\tsearch:  _fnSearchToCamel( settings.oPreviousSearch ),\n\t\tcolumns: $.map( settings.aoColumns, function ( col, i ) {\n\t\t\treturn {\n\t\t\t\tvisible: col.bVisible,\n\t\t\t\tsearch: _fnSearchToCamel( settings.aoPreSearchCols[i] )\n\t\t\t};\n\t\t} )\n\t};\n\n\tsettings.oSavedState = state;\n\t_fnCallbackFire( settings, \"aoStateSaveParams\", 'stateSaveParams', [settings, state] );\n\t\n\tif ( settings.oFeatures.bStateSave && !settings.bDestroying )\n\t{\n\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, state );\n\t}\t\n}\n\n\n/**\n * Attempt to load a saved table state\n *  @param {object} oSettings dataTables settings object\n *  @param {object} oInit DataTables init object so we can override settings\n *  @param {function} callback Callback to execute when the state has been loaded\n *  @memberof DataTable#oApi\n */\nfunction _fnLoadState ( settings, oInit, callback )\n{\n\tif ( ! settings.oFeatures.bStateSave ) {\n\t\tcallback();\n\t\treturn;\n\t}\n\n\tvar loaded = function(state) {\n\t\t_fnImplementState(settings, state, callback);\n\t}\n\n\tvar state = settings.fnStateLoadCallback.call( settings.oInstance, settings, loaded );\n\n\tif ( state !== undefined ) {\n\t\t_fnImplementState( settings, state, callback );\n\t}\n\t// otherwise, wait for the loaded callback to be executed\n\n\treturn true;\n}\n\nfunction _fnImplementState ( settings, s, callback) {\n\tvar i, ien;\n\tvar columns = settings.aoColumns;\n\tsettings._bLoadingState = true;\n\n\t// When StateRestore was introduced the state could now be implemented at any time\n\t// Not just initialisation. To do this an api instance is required in some places\n\tvar api = settings._bInitComplete ? new DataTable.Api(settings) : null;\n\n\tif ( ! s || ! s.time ) {\n\t\tsettings._bLoadingState = false;\n\t\tcallback();\n\t\treturn;\n\t}\n\n\t// Allow custom and plug-in manipulation functions to alter the saved data set and\n\t// cancelling of loading by returning false\n\tvar abStateLoad = _fnCallbackFire( settings, 'aoStateLoadParams', 'stateLoadParams', [settings, s] );\n\tif ( $.inArray( false, abStateLoad ) !== -1 ) {\n\t\tsettings._bLoadingState = false;\n\t\tcallback();\n\t\treturn;\n\t}\n\n\t// Reject old data\n\tvar duration = settings.iStateDuration;\n\tif ( duration > 0 && s.time < +new Date() - (duration*1000) ) {\n\t\tsettings._bLoadingState = false;\n\t\tcallback();\n\t\treturn;\n\t}\n\n\t// Number of columns have changed - all bets are off, no restore of settings\n\tif ( s.columns && columns.length !== s.columns.length ) {\n\t\tsettings._bLoadingState = false;\n\t\tcallback();\n\t\treturn;\n\t}\n\n\t// Store the saved state so it might be accessed at any time\n\tsettings.oLoadedState = $.extend( true, {}, s );\n\n\t// Page Length\n\tif ( s.length !== undefined ) {\n\t\t// If already initialised just set the value directly so that the select element is also updated\n\t\tif (api) {\n\t\t\tapi.page.len(s.length)\n\t\t}\n\t\telse {\n\t\t\tsettings._iDisplayLength   = s.length;\n\t\t}\n\t}\n\n\t// Restore key features - todo - for 1.11 this needs to be done by\n\t// subscribed events\n\tif ( s.start !== undefined ) {\n\t\tif(api === null) {\n\t\t\tsettings._iDisplayStart    = s.start;\n\t\t\tsettings.iInitDisplayStart = s.start;\n\t\t}\n\t\telse {\n\t\t\t_fnPageChange(settings, s.start/settings._iDisplayLength);\n\t\t}\n\t}\n\n\t// Order\n\tif ( s.order !== undefined ) {\n\t\tsettings.aaSorting = [];\n\t\t$.each( s.order, function ( i, col ) {\n\t\t\tsettings.aaSorting.push( col[0] >= columns.length ?\n\t\t\t\t[ 0, col[1] ] :\n\t\t\t\tcol\n\t\t\t);\n\t\t} );\n\t}\n\n\t// Search\n\tif ( s.search !== undefined ) {\n\t\t$.extend( settings.oPreviousSearch, _fnSearchToHung( s.search ) );\n\t}\n\n\t// Columns\n\tif ( s.columns ) {\n\t\tfor ( i=0, ien=s.columns.length ; i<ien ; i++ ) {\n\t\t\tvar col = s.columns[i];\n\n\t\t\t// Visibility\n\t\t\tif ( col.visible !== undefined ) {\n\t\t\t\t// If the api is defined, the table has been initialised so we need to use it rather than internal settings\n\t\t\t\tif (api) {\n\t\t\t\t\t// Don't redraw the columns on every iteration of this loop, we will do this at the end instead\n\t\t\t\t\tapi.column(i).visible(col.visible, false);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcolumns[i].bVisible = col.visible;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Search\n\t\t\tif ( col.search !== undefined ) {\n\t\t\t\t$.extend( settings.aoPreSearchCols[i], _fnSearchToHung( col.search ) );\n\t\t\t}\n\t\t}\n\t\t\n\t\t// If the api is defined then we need to adjust the columns once the visibility has been changed\n\t\tif (api) {\n\t\t\tapi.columns.adjust();\n\t\t}\n\t}\n\n\tsettings._bLoadingState = false;\n\t_fnCallbackFire( settings, 'aoStateLoaded', 'stateLoaded', [settings, s] );\n\tcallback();\n};\n\n\n/**\n * Return the settings object for a particular table\n *  @param {node} table table we are using as a dataTable\n *  @returns {object} Settings object - or null if not found\n *  @memberof DataTable#oApi\n */\nfunction _fnSettingsFromNode ( table )\n{\n\tvar settings = DataTable.settings;\n\tvar idx = $.inArray( table, _pluck( settings, 'nTable' ) );\n\n\treturn idx !== -1 ?\n\t\tsettings[ idx ] :\n\t\tnull;\n}\n\n\n/**\n * Log an error message\n *  @param {object} settings dataTables settings object\n *  @param {int} level log error messages, or display them to the user\n *  @param {string} msg error message\n *  @param {int} tn Technical note id to get more information about the error.\n *  @memberof DataTable#oApi\n */\nfunction _fnLog( settings, level, msg, tn )\n{\n\tmsg = 'DataTables warning: '+\n\t\t(settings ? 'table id='+settings.sTableId+' - ' : '')+msg;\n\n\tif ( tn ) {\n\t\tmsg += '. For more information about this error, please see '+\n\t\t'http://datatables.net/tn/'+tn;\n\t}\n\n\tif ( ! level  ) {\n\t\t// Backwards compatibility pre 1.10\n\t\tvar ext = DataTable.ext;\n\t\tvar type = ext.sErrMode || ext.errMode;\n\n\t\tif ( settings ) {\n\t\t\t_fnCallbackFire( settings, null, 'error', [ settings, tn, msg ] );\n\t\t}\n\n\t\tif ( type == 'alert' ) {\n\t\t\talert( msg );\n\t\t}\n\t\telse if ( type == 'throw' ) {\n\t\t\tthrow new Error(msg);\n\t\t}\n\t\telse if ( typeof type == 'function' ) {\n\t\t\ttype( settings, tn, msg );\n\t\t}\n\t}\n\telse if ( window.console && console.log ) {\n\t\tconsole.log( msg );\n\t}\n}\n\n\n/**\n * See if a property is defined on one object, if so assign it to the other object\n *  @param {object} ret target object\n *  @param {object} src source object\n *  @param {string} name property\n *  @param {string} [mappedName] name to map too - optional, name used if not given\n *  @memberof DataTable#oApi\n */\nfunction _fnMap( ret, src, name, mappedName )\n{\n\tif ( Array.isArray( name ) ) {\n\t\t$.each( name, function (i, val) {\n\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\t_fnMap( ret, src, val[0], val[1] );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnMap( ret, src, val );\n\t\t\t}\n\t\t} );\n\n\t\treturn;\n\t}\n\n\tif ( mappedName === undefined ) {\n\t\tmappedName = name;\n\t}\n\n\tif ( src[name] !== undefined ) {\n\t\tret[mappedName] = src[name];\n\t}\n}\n\n\n/**\n * Extend objects - very similar to jQuery.extend, but deep copy objects, and\n * shallow copy arrays. The reason we need to do this, is that we don't want to\n * deep copy array init values (such as aaSorting) since the dev wouldn't be\n * able to override them, but we do want to deep copy arrays.\n *  @param {object} out Object to extend\n *  @param {object} extender Object from which the properties will be applied to\n *      out\n *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\n *      independent copy with the exception of the `data` or `aaData` parameters\n *      if they are present. This is so you can pass in a collection to\n *      DataTables and have that used as your data source without breaking the\n *      references\n *  @returns {object} out Reference, just for convenience - out === the return.\n *  @memberof DataTable#oApi\n *  @todo This doesn't take account of arrays inside the deep copied objects.\n */\nfunction _fnExtend( out, extender, breakRefs )\n{\n\tvar val;\n\n\tfor ( var prop in extender ) {\n\t\tif ( extender.hasOwnProperty(prop) ) {\n\t\t\tval = extender[prop];\n\n\t\t\tif ( $.isPlainObject( val ) ) {\n\t\t\t\tif ( ! $.isPlainObject( out[prop] ) ) {\n\t\t\t\t\tout[prop] = {};\n\t\t\t\t}\n\t\t\t\t$.extend( true, out[prop], val );\n\t\t\t}\n\t\t\telse if ( breakRefs && prop !== 'data' && prop !== 'aaData' && Array.isArray(val) ) {\n\t\t\t\tout[prop] = val.slice();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tout[prop] = val;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn out;\n}\n\n\n/**\n * Bind an event handers to allow a click or return key to activate the callback.\n * This is good for accessibility since a return on the keyboard will have the\n * same effect as a click, if the element has focus.\n *  @param {element} n Element to bind the action to\n *  @param {object} oData Data object to pass to the triggered function\n *  @param {function} fn Callback function for when the event is triggered\n *  @memberof DataTable#oApi\n */\nfunction _fnBindAction( n, oData, fn )\n{\n\t$(n)\n\t\t.on( 'click.DT', oData, function (e) {\n\t\t\t\t$(n).trigger('blur'); // Remove focus outline for mouse users\n\t\t\t\tfn(e);\n\t\t\t} )\n\t\t.on( 'keypress.DT', oData, function (e){\n\t\t\t\tif ( e.which === 13 ) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tfn(e);\n\t\t\t\t}\n\t\t\t} )\n\t\t.on( 'selectstart.DT', function () {\n\t\t\t\t/* Take the brutal approach to cancelling text selection */\n\t\t\t\treturn false;\n\t\t\t} );\n}\n\n\n/**\n * Register a callback function. Easily allows a callback function to be added to\n * an array store of callback functions that can then all be called together.\n *  @param {object} oSettings dataTables settings object\n *  @param {string} sStore Name of the array storage for the callbacks in oSettings\n *  @param {function} fn Function to be called back\n *  @param {string} sName Identifying name for the callback (i.e. a label)\n *  @memberof DataTable#oApi\n */\nfunction _fnCallbackReg( oSettings, sStore, fn, sName )\n{\n\tif ( fn )\n\t{\n\t\toSettings[sStore].push( {\n\t\t\t\"fn\": fn,\n\t\t\t\"sName\": sName\n\t\t} );\n\t}\n}\n\n\n/**\n * Fire callback functions and trigger events. Note that the loop over the\n * callback array store is done backwards! Further note that you do not want to\n * fire off triggers in time sensitive applications (for example cell creation)\n * as its slow.\n *  @param {object} settings dataTables settings object\n *  @param {string} callbackArr Name of the array storage for the callbacks in\n *      oSettings\n *  @param {string} eventName Name of the jQuery custom event to trigger. If\n *      null no trigger is fired\n *  @param {array} args Array of arguments to pass to the callback function /\n *      trigger\n *  @memberof DataTable#oApi\n */\nfunction _fnCallbackFire( settings, callbackArr, eventName, args )\n{\n\tvar ret = [];\n\n\tif ( callbackArr ) {\n\t\tret = $.map( settings[callbackArr].slice().reverse(), function (val, i) {\n\t\t\treturn val.fn.apply( settings.oInstance, args );\n\t\t} );\n\t}\n\n\tif ( eventName !== null ) {\n\t\tvar e = $.Event( eventName+'.dt' );\n\n\t\t$(settings.nTable).trigger( e, args );\n\n\t\tret.push( e.result );\n\t}\n\n\treturn ret;\n}\n\n\nfunction _fnLengthOverflow ( settings )\n{\n\tvar\n\t\tstart = settings._iDisplayStart,\n\t\tend = settings.fnDisplayEnd(),\n\t\tlen = settings._iDisplayLength;\n\n\t/* If we have space to show extra rows (backing up from the end point - then do so */\n\tif ( start >= end )\n\t{\n\t\tstart = end - len;\n\t}\n\n\t// Keep the start record on the current page\n\tstart -= (start % len);\n\n\tif ( len === -1 || start < 0 )\n\t{\n\t\tstart = 0;\n\t}\n\n\tsettings._iDisplayStart = start;\n}\n\n\nfunction _fnRenderer( settings, type )\n{\n\tvar renderer = settings.renderer;\n\tvar host = DataTable.ext.renderer[type];\n\n\tif ( $.isPlainObject( renderer ) && renderer[type] ) {\n\t\t// Specific renderer for this type. If available use it, otherwise use\n\t\t// the default.\n\t\treturn host[renderer[type]] || host._;\n\t}\n\telse if ( typeof renderer === 'string' ) {\n\t\t// Common renderer - if there is one available for this type use it,\n\t\t// otherwise use the default\n\t\treturn host[renderer] || host._;\n\t}\n\n\t// Use the default\n\treturn host._;\n}\n\n\n/**\n * Detect the data source being used for the table. Used to simplify the code\n * a little (ajax) and to make it compress a little smaller.\n *\n *  @param {object} settings dataTables settings object\n *  @returns {string} Data source\n *  @memberof DataTable#oApi\n */\nfunction _fnDataSource ( settings )\n{\n\tif ( settings.oFeatures.bServerSide ) {\n\t\treturn 'ssp';\n\t}\n\telse if ( settings.ajax || settings.sAjaxSource ) {\n\t\treturn 'ajax';\n\t}\n\treturn 'dom';\n}\n\n\n\n\n/**\n * Computed structure of the DataTables API, defined by the options passed to\n * `DataTable.Api.register()` when building the API.\n *\n * The structure is built in order to speed creation and extension of the Api\n * objects since the extensions are effectively pre-parsed.\n *\n * The array is an array of objects with the following structure, where this\n * base array represents the Api prototype base:\n *\n *     [\n *       {\n *         name:      'data'                -- string   - Property name\n *         val:       function () {},       -- function - Api method (or undefined if just an object\n *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n *       },\n *       {\n *         name:     'row'\n *         val:       {},\n *         methodExt: [ ... ],\n *         propExt:   [\n *           {\n *             name:      'data'\n *             val:       function () {},\n *             methodExt: [ ... ],\n *             propExt:   [ ... ]\n *           },\n *           ...\n *         ]\n *       }\n *     ]\n *\n * @type {Array}\n * @ignore\n */\nvar __apiStruct = [];\n\n\n/**\n * `Array.prototype` reference.\n *\n * @type object\n * @ignore\n */\nvar __arrayProto = Array.prototype;\n\n\n/**\n * Abstraction for `context` parameter of the `Api` constructor to allow it to\n * take several different forms for ease of use.\n *\n * Each of the input parameter types will be converted to a DataTables settings\n * object where possible.\n *\n * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\n *   of:\n *\n *   * `string` - jQuery selector. Any DataTables' matching the given selector\n *     with be found and used.\n *   * `node` - `TABLE` node which has already been formed into a DataTable.\n *   * `jQuery` - A jQuery object of `TABLE` nodes.\n *   * `object` - DataTables settings object\n *   * `DataTables.Api` - API instance\n * @return {array|null} Matching DataTables settings objects. `null` or\n *   `undefined` is returned if no matching DataTable is found.\n * @ignore\n */\nvar _toSettings = function ( mixed )\n{\n\tvar idx, jq;\n\tvar settings = DataTable.settings;\n\tvar tables = $.map( settings, function (el, i) {\n\t\treturn el.nTable;\n\t} );\n\n\tif ( ! mixed ) {\n\t\treturn [];\n\t}\n\telse if ( mixed.nTable && mixed.oApi ) {\n\t\t// DataTables settings object\n\t\treturn [ mixed ];\n\t}\n\telse if ( mixed.nodeName && mixed.nodeName.toLowerCase() === 'table' ) {\n\t\t// Table node\n\t\tidx = $.inArray( mixed, tables );\n\t\treturn idx !== -1 ? [ settings[idx] ] : null;\n\t}\n\telse if ( mixed && typeof mixed.settings === 'function' ) {\n\t\treturn mixed.settings().toArray();\n\t}\n\telse if ( typeof mixed === 'string' ) {\n\t\t// jQuery selector\n\t\tjq = $(mixed);\n\t}\n\telse if ( mixed instanceof $ ) {\n\t\t// jQuery object (also DataTables instance)\n\t\tjq = mixed;\n\t}\n\n\tif ( jq ) {\n\t\treturn jq.map( function(i) {\n\t\t\tidx = $.inArray( this, tables );\n\t\t\treturn idx !== -1 ? settings[idx] : null;\n\t\t} ).toArray();\n\t}\n};\n\n\n/**\n * DataTables API class - used to control and interface with  one or more\n * DataTables enhanced tables.\n *\n * The API class is heavily based on jQuery, presenting a chainable interface\n * that you can use to interact with tables. Each instance of the API class has\n * a \"context\" - i.e. the tables that it will operate on. This could be a single\n * table, all tables on a page or a sub-set thereof.\n *\n * Additionally the API is designed to allow you to easily work with the data in\n * the tables, retrieving and manipulating it as required. This is done by\n * presenting the API class as an array like interface. The contents of the\n * array depend upon the actions requested by each method (for example\n * `rows().nodes()` will return an array of nodes, while `rows().data()` will\n * return an array of objects or arrays depending upon your table's\n * configuration). The API object has a number of array like methods (`push`,\n * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\n * `unique` etc) to assist your working with the data held in a table.\n *\n * Most methods (those which return an Api instance) are chainable, which means\n * the return from a method call also has all of the methods available that the\n * top level object had. For example, these two calls are equivalent:\n *\n *     // Not chained\n *     api.row.add( {...} );\n *     api.draw();\n *\n *     // Chained\n *     api.row.add( {...} ).draw();\n *\n * @class DataTable.Api\n * @param {array|object|string|jQuery} context DataTable identifier. This is\n *   used to define which DataTables enhanced tables this API will operate on.\n *   Can be one of:\n *\n *   * `string` - jQuery selector. Any DataTables' matching the given selector\n *     with be found and used.\n *   * `node` - `TABLE` node which has already been formed into a DataTable.\n *   * `jQuery` - A jQuery object of `TABLE` nodes.\n *   * `object` - DataTables settings object\n * @param {array} [data] Data to initialise the Api instance with.\n *\n * @example\n *   // Direct initialisation during DataTables construction\n *   var api = $('#example').DataTable();\n *\n * @example\n *   // Initialisation using a DataTables jQuery object\n *   var api = $('#example').dataTable().api();\n *\n * @example\n *   // Initialisation as a constructor\n *   var api = new $.fn.DataTable.Api( 'table.dataTable' );\n */\n_Api = function ( context, data )\n{\n\tif ( ! (this instanceof _Api) ) {\n\t\treturn new _Api( context, data );\n\t}\n\n\tvar settings = [];\n\tvar ctxSettings = function ( o ) {\n\t\tvar a = _toSettings( o );\n\t\tif ( a ) {\n\t\t\tsettings.push.apply( settings, a );\n\t\t}\n\t};\n\n\tif ( Array.isArray( context ) ) {\n\t\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\tctxSettings( context[i] );\n\t\t}\n\t}\n\telse {\n\t\tctxSettings( context );\n\t}\n\n\t// Remove duplicates\n\tthis.context = _unique( settings );\n\n\t// Initial data\n\tif ( data ) {\n\t\t$.merge( this, data );\n\t}\n\n\t// selector\n\tthis.selector = {\n\t\trows: null,\n\t\tcols: null,\n\t\topts: null\n\t};\n\n\t_Api.extend( this, this, __apiStruct );\n};\n\nDataTable.Api = _Api;\n\n// Don't destroy the existing prototype, just extend it. Required for jQuery 2's\n// isPlainObject.\n$.extend( _Api.prototype, {\n\tany: function ()\n\t{\n\t\treturn this.count() !== 0;\n\t},\n\n\n\tconcat:  __arrayProto.concat,\n\n\n\tcontext: [], // array of table settings objects\n\n\n\tcount: function ()\n\t{\n\t\treturn this.flatten().length;\n\t},\n\n\n\teach: function ( fn )\n\t{\n\t\tfor ( var i=0, ien=this.length ; i<ien; i++ ) {\n\t\t\tfn.call( this, this[i], i, this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\n\teq: function ( idx )\n\t{\n\t\tvar ctx = this.context;\n\n\t\treturn ctx.length > idx ?\n\t\t\tnew _Api( ctx[idx], this[idx] ) :\n\t\t\tnull;\n\t},\n\n\n\tfilter: function ( fn )\n\t{\n\t\tvar a = [];\n\n\t\tif ( __arrayProto.filter ) {\n\t\t\ta = __arrayProto.filter.call( this, fn, this );\n\t\t}\n\t\telse {\n\t\t\t// Compatibility for browsers without EMCA-252-5 (JS 1.6)\n\t\t\tfor ( var i=0, ien=this.length ; i<ien ; i++ ) {\n\t\t\t\tif ( fn.call( this, this[i], i, this ) ) {\n\t\t\t\t\ta.push( this[i] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn new _Api( this.context, a );\n\t},\n\n\n\tflatten: function ()\n\t{\n\t\tvar a = [];\n\t\treturn new _Api( this.context, a.concat.apply( a, this.toArray() ) );\n\t},\n\n\n\tjoin:    __arrayProto.join,\n\n\n\tindexOf: __arrayProto.indexOf || function (obj, start)\n\t{\n\t\tfor ( var i=(start || 0), ien=this.length ; i<ien ; i++ ) {\n\t\t\tif ( this[i] === obj ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\titerator: function ( flatten, type, fn, alwaysNew ) {\n\t\tvar\n\t\t\ta = [], ret,\n\t\t\ti, ien, j, jen,\n\t\t\tcontext = this.context,\n\t\t\trows, items, item,\n\t\t\tselector = this.selector;\n\n\t\t// Argument shifting\n\t\tif ( typeof flatten === 'string' ) {\n\t\t\talwaysNew = fn;\n\t\t\tfn = type;\n\t\t\ttype = flatten;\n\t\t\tflatten = false;\n\t\t}\n\n\t\tfor ( i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\tvar apiInst = new _Api( context[i] );\n\n\t\t\tif ( type === 'table' ) {\n\t\t\t\tret = fn.call( apiInst, context[i], i );\n\n\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\ta.push( ret );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( type === 'columns' || type === 'rows' ) {\n\t\t\t\t// this has same length as context - one entry for each table\n\t\t\t\tret = fn.call( apiInst, context[i], this[i], i );\n\n\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\ta.push( ret );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell' ) {\n\t\t\t\t// columns and rows share the same structure.\n\t\t\t\t// 'this' is an array of column indexes for each context\n\t\t\t\titems = this[i];\n\n\t\t\t\tif ( type === 'column-rows' ) {\n\t\t\t\t\trows = _selector_row_indexes( context[i], selector.opts );\n\t\t\t\t}\n\n\t\t\t\tfor ( j=0, jen=items.length ; j<jen ; j++ ) {\n\t\t\t\t\titem = items[j];\n\n\t\t\t\t\tif ( type === 'cell' ) {\n\t\t\t\t\t\tret = fn.call( apiInst, context[i], item.row, item.column, i, j );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tret = fn.call( apiInst, context[i], item, i, j, rows );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( a.length || alwaysNew ) {\n\t\t\tvar api = new _Api( context, flatten ? a.concat.apply( [], a ) : a );\n\t\t\tvar apiSelector = api.selector;\n\t\t\tapiSelector.rows = selector.rows;\n\t\t\tapiSelector.cols = selector.cols;\n\t\t\tapiSelector.opts = selector.opts;\n\t\t\treturn api;\n\t\t}\n\t\treturn this;\n\t},\n\n\n\tlastIndexOf: __arrayProto.lastIndexOf || function (obj, start)\n\t{\n\t\t// Bit cheeky...\n\t\treturn this.indexOf.apply( this.toArray.reverse(), arguments );\n\t},\n\n\n\tlength:  0,\n\n\n\tmap: function ( fn )\n\t{\n\t\tvar a = [];\n\n\t\tif ( __arrayProto.map ) {\n\t\t\ta = __arrayProto.map.call( this, fn, this );\n\t\t}\n\t\telse {\n\t\t\t// Compatibility for browsers without EMCA-252-5 (JS 1.6)\n\t\t\tfor ( var i=0, ien=this.length ; i<ien ; i++ ) {\n\t\t\t\ta.push( fn.call( this, this[i], i ) );\n\t\t\t}\n\t\t}\n\n\t\treturn new _Api( this.context, a );\n\t},\n\n\n\tpluck: function ( prop )\n\t{\n\t\tlet fn = DataTable.util.get(prop);\n\n\t\treturn this.map( function ( el ) {\n\t\t\treturn fn(el);\n\t\t} );\n\t},\n\n\tpop:     __arrayProto.pop,\n\n\n\tpush:    __arrayProto.push,\n\n\n\t// Does not return an API instance\n\treduce: __arrayProto.reduce || function ( fn, init )\n\t{\n\t\treturn _fnReduce( this, fn, init, 0, this.length, 1 );\n\t},\n\n\n\treduceRight: __arrayProto.reduceRight || function ( fn, init )\n\t{\n\t\treturn _fnReduce( this, fn, init, this.length-1, -1, -1 );\n\t},\n\n\n\treverse: __arrayProto.reverse,\n\n\n\t// Object with rows, columns and opts\n\tselector: null,\n\n\n\tshift:   __arrayProto.shift,\n\n\n\tslice: function () {\n\t\treturn new _Api( this.context, this );\n\t},\n\n\n\tsort:    __arrayProto.sort, // ? name - order?\n\n\n\tsplice:  __arrayProto.splice,\n\n\n\ttoArray: function ()\n\t{\n\t\treturn __arrayProto.slice.call( this );\n\t},\n\n\n\tto$: function ()\n\t{\n\t\treturn $( this );\n\t},\n\n\n\ttoJQuery: function ()\n\t{\n\t\treturn $( this );\n\t},\n\n\n\tunique: function ()\n\t{\n\t\treturn new _Api( this.context, _unique(this) );\n\t},\n\n\n\tunshift: __arrayProto.unshift\n} );\n\n\n_Api.extend = function ( scope, obj, ext )\n{\n\t// Only extend API instances and static properties of the API\n\tif ( ! ext.length || ! obj || ( ! (obj instanceof _Api) && ! obj.__dt_wrapper ) ) {\n\t\treturn;\n\t}\n\n\tvar\n\t\ti, ien,\n\t\tstruct,\n\t\tmethodScoping = function ( scope, fn, struc ) {\n\t\t\treturn function () {\n\t\t\t\tvar ret = fn.apply( scope, arguments );\n\n\t\t\t\t// Method extension\n\t\t\t\t_Api.extend( ret, ret, struc.methodExt );\n\t\t\t\treturn ret;\n\t\t\t};\n\t\t};\n\n\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\tstruct = ext[i];\n\n\t\t// Value\n\t\tobj[ struct.name ] = struct.type === 'function' ?\n\t\t\tmethodScoping( scope, struct.val, struct ) :\n\t\t\tstruct.type === 'object' ?\n\t\t\t\t{} :\n\t\t\t\tstruct.val;\n\n\t\tobj[ struct.name ].__dt_wrapper = true;\n\n\t\t// Property extension\n\t\t_Api.extend( scope, obj[ struct.name ], struct.propExt );\n\t}\n};\n\n\n// @todo - Is there need for an augment function?\n// _Api.augment = function ( inst, name )\n// {\n// \t// Find src object in the structure from the name\n// \tvar parts = name.split('.');\n\n// \t_Api.extend( inst, obj );\n// };\n\n\n//     [\n//       {\n//         name:      'data'                -- string   - Property name\n//         val:       function () {},       -- function - Api method (or undefined if just an object\n//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n//       },\n//       {\n//         name:     'row'\n//         val:       {},\n//         methodExt: [ ... ],\n//         propExt:   [\n//           {\n//             name:      'data'\n//             val:       function () {},\n//             methodExt: [ ... ],\n//             propExt:   [ ... ]\n//           },\n//           ...\n//         ]\n//       }\n//     ]\n\n_Api.register = _api_register = function ( name, val )\n{\n\tif ( Array.isArray( name ) ) {\n\t\tfor ( var j=0, jen=name.length ; j<jen ; j++ ) {\n\t\t\t_Api.register( name[j], val );\n\t\t}\n\t\treturn;\n\t}\n\n\tvar\n\t\ti, ien,\n\t\their = name.split('.'),\n\t\tstruct = __apiStruct,\n\t\tkey, method;\n\n\tvar find = function ( src, name ) {\n\t\tfor ( var i=0, ien=src.length ; i<ien ; i++ ) {\n\t\t\tif ( src[i].name === name ) {\n\t\t\t\treturn src[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\n\tfor ( i=0, ien=heir.length ; i<ien ; i++ ) {\n\t\tmethod = heir[i].indexOf('()') !== -1;\n\t\tkey = method ?\n\t\t\their[i].replace('()', '') :\n\t\t\their[i];\n\n\t\tvar src = find( struct, key );\n\t\tif ( ! src ) {\n\t\t\tsrc = {\n\t\t\t\tname:      key,\n\t\t\t\tval:       {},\n\t\t\t\tmethodExt: [],\n\t\t\t\tpropExt:   [],\n\t\t\t\ttype:      'object'\n\t\t\t};\n\t\t\tstruct.push( src );\n\t\t}\n\n\t\tif ( i === ien-1 ) {\n\t\t\tsrc.val = val;\n\t\t\tsrc.type = typeof val === 'function' ?\n\t\t\t\t'function' :\n\t\t\t\t$.isPlainObject( val ) ?\n\t\t\t\t\t'object' :\n\t\t\t\t\t'other';\n\t\t}\n\t\telse {\n\t\t\tstruct = method ?\n\t\t\t\tsrc.methodExt :\n\t\t\t\tsrc.propExt;\n\t\t}\n\t}\n};\n\n_Api.registerPlural = _api_registerPlural = function ( pluralName, singularName, val ) {\n\t_Api.register( pluralName, val );\n\n\t_Api.register( singularName, function () {\n\t\tvar ret = val.apply( this, arguments );\n\n\t\tif ( ret === this ) {\n\t\t\t// Returned item is the API instance that was passed in, return it\n\t\t\treturn this;\n\t\t}\n\t\telse if ( ret instanceof _Api ) {\n\t\t\t// New API instance returned, want the value from the first item\n\t\t\t// in the returned array for the singular result.\n\t\t\treturn ret.length ?\n\t\t\t\tArray.isArray( ret[0] ) ?\n\t\t\t\t\tnew _Api( ret.context, ret[0] ) : // Array results are 'enhanced'\n\t\t\t\t\tret[0] :\n\t\t\t\tundefined;\n\t\t}\n\n\t\t// Non-API return - just fire it back\n\t\treturn ret;\n\t} );\n};\n\n\n/**\n * Selector for HTML tables. Apply the given selector to the give array of\n * DataTables settings objects.\n *\n * @param {string|integer} [selector] jQuery selector string or integer\n * @param  {array} Array of DataTables settings objects to be filtered\n * @return {array}\n * @ignore\n */\nvar __table_selector = function ( selector, a )\n{\n\tif ( Array.isArray(selector) ) {\n\t\treturn $.map( selector, function (item) {\n\t\t\treturn __table_selector(item, a);\n\t\t} );\n\t}\n\n\t// Integer is used to pick out a table by index\n\tif ( typeof selector === 'number' ) {\n\t\treturn [ a[ selector ] ];\n\t}\n\n\t// Perform a jQuery selector on the table nodes\n\tvar nodes = $.map( a, function (el, i) {\n\t\treturn el.nTable;\n\t} );\n\n\treturn $(nodes)\n\t\t.filter( selector )\n\t\t.map( function (i) {\n\t\t\t// Need to translate back from the table node to the settings\n\t\t\tvar idx = $.inArray( this, nodes );\n\t\t\treturn a[ idx ];\n\t\t} )\n\t\t.toArray();\n};\n\n\n\n/**\n * Context selector for the API's context (i.e. the tables the API instance\n * refers to.\n *\n * @name    DataTable.Api#tables\n * @param {string|integer} [selector] Selector to pick which tables the iterator\n *   should operate on. If not given, all tables in the current context are\n *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\n *   select multiple tables or as an integer to select a single table.\n * @returns {DataTable.Api} Returns a new API instance if a selector is given.\n */\n_api_register( 'tables()', function ( selector ) {\n\t// A new instance is created if there was a selector specified\n\treturn selector !== undefined && selector !== null ?\n\t\tnew _Api( __table_selector( selector, this.context ) ) :\n\t\tthis;\n} );\n\n\n_api_register( 'table()', function ( selector ) {\n\tvar tables = this.tables( selector );\n\tvar ctx = tables.context;\n\n\t// Truncate to the first matched table\n\treturn ctx.length ?\n\t\tnew _Api( ctx[0] ) :\n\t\ttables;\n} );\n\n\n_api_registerPlural( 'tables().nodes()', 'table().node()' , function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\treturn ctx.nTable;\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'tables().body()', 'table().body()' , function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\treturn ctx.nTBody;\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'tables().header()', 'table().header()' , function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\treturn ctx.nTHead;\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'tables().footer()', 'table().footer()' , function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\treturn ctx.nTFoot;\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'tables().containers()', 'table().container()' , function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\treturn ctx.nTableWrapper;\n\t}, 1 );\n} );\n\n\n\n/**\n * Redraw the tables in the current context.\n */\n_api_register( 'draw()', function ( paging ) {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tif ( paging === 'page' ) {\n\t\t\t_fnDraw( settings );\n\t\t}\n\t\telse {\n\t\t\tif ( typeof paging === 'string' ) {\n\t\t\t\tpaging = paging === 'full-hold' ?\n\t\t\t\t\tfalse :\n\t\t\t\t\ttrue;\n\t\t\t}\n\n\t\t\t_fnReDraw( settings, paging===false );\n\t\t}\n\t} );\n} );\n\n\n\n/**\n * Get the current page index.\n *\n * @return {integer} Current page index (zero based)\n *//**\n * Set the current page.\n *\n * Note that if you attempt to show a page which does not exist, DataTables will\n * not throw an error, but rather reset the paging.\n *\n * @param {integer|string} action The paging action to take. This can be one of:\n *  * `integer` - The page index to jump to\n *  * `string` - An action to take:\n *    * `first` - Jump to first page.\n *    * `next` - Jump to the next page\n *    * `previous` - Jump to previous page\n *    * `last` - Jump to the last page.\n * @returns {DataTables.Api} this\n */\n_api_register( 'page()', function ( action ) {\n\tif ( action === undefined ) {\n\t\treturn this.page.info().page; // not an expensive call\n\t}\n\n\t// else, have an action to take on all tables\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnPageChange( settings, action );\n\t} );\n} );\n\n\n/**\n * Paging information for the first table in the current context.\n *\n * If you require paging information for another table, use the `table()` method\n * with a suitable selector.\n *\n * @return {object} Object with the following properties set:\n *  * `page` - Current page index (zero based - i.e. the first page is `0`)\n *  * `pages` - Total number of pages\n *  * `start` - Display index for the first record shown on the current page\n *  * `end` - Display index for the last record shown on the current page\n *  * `length` - Display length (number of records). Note that generally `start\n *    + length = end`, but this is not always true, for example if there are\n *    only 2 records to show on the final page, with a length of 10.\n *  * `recordsTotal` - Full data set length\n *  * `recordsDisplay` - Data set length once the current filtering criterion\n *    are applied.\n */\n_api_register( 'page.info()', function ( action ) {\n\tif ( this.context.length === 0 ) {\n\t\treturn undefined;\n\t}\n\n\tvar\n\t\tsettings   = this.context[0],\n\t\tstart      = settings._iDisplayStart,\n\t\tlen        = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,\n\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\tall        = len === -1;\n\n\treturn {\n\t\t\"page\":           all ? 0 : Math.floor( start / len ),\n\t\t\"pages\":          all ? 1 : Math.ceil( visRecords / len ),\n\t\t\"start\":          start,\n\t\t\"end\":            settings.fnDisplayEnd(),\n\t\t\"length\":         len,\n\t\t\"recordsTotal\":   settings.fnRecordsTotal(),\n\t\t\"recordsDisplay\": visRecords,\n\t\t\"serverSide\":     _fnDataSource( settings ) === 'ssp'\n\t};\n} );\n\n\n/**\n * Get the current page length.\n *\n * @return {integer} Current page length. Note `-1` indicates that all records\n *   are to be shown.\n *//**\n * Set the current page length.\n *\n * @param {integer} Page length to set. Use `-1` to show all records.\n * @returns {DataTables.Api} this\n */\n_api_register( 'page.len()', function ( len ) {\n\t// Note that we can't call this function 'length()' because `length`\n\t// is a Javascript property of functions which defines how many arguments\n\t// the function expects.\n\tif ( len === undefined ) {\n\t\treturn this.context.length !== 0 ?\n\t\t\tthis.context[0]._iDisplayLength :\n\t\t\tundefined;\n\t}\n\n\t// else, set the page length\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnLengthChange( settings, len );\n\t} );\n} );\n\n\n\nvar __reload = function ( settings, holdPosition, callback ) {\n\t// Use the draw event to trigger a callback\n\tif ( callback ) {\n\t\tvar api = new _Api( settings );\n\n\t\tapi.one( 'draw', function () {\n\t\t\tcallback( api.ajax.json() );\n\t\t} );\n\t}\n\n\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t_fnReDraw( settings, holdPosition );\n\t}\n\telse {\n\t\t_fnProcessingDisplay( settings, true );\n\n\t\t// Cancel an existing request\n\t\tvar xhr = settings.jqXHR;\n\t\tif ( xhr && xhr.readyState !== 4 ) {\n\t\t\txhr.abort();\n\t\t}\n\n\t\t// Trigger xhr\n\t\t_fnBuildAjax( settings, [], function( json ) {\n\t\t\t_fnClearTable( settings );\n\n\t\t\tvar data = _fnAjaxDataSrc( settings, json );\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t_fnAddData( settings, data[i] );\n\t\t\t}\n\n\t\t\t_fnReDraw( settings, holdPosition );\n\t\t\t_fnProcessingDisplay( settings, false );\n\t\t} );\n\t}\n};\n\n\n/**\n * Get the JSON response from the last Ajax request that DataTables made to the\n * server. Note that this returns the JSON from the first table in the current\n * context.\n *\n * @return {object} JSON received from the server.\n */\n_api_register( 'ajax.json()', function () {\n\tvar ctx = this.context;\n\n\tif ( ctx.length > 0 ) {\n\t\treturn ctx[0].json;\n\t}\n\n\t// else return undefined;\n} );\n\n\n/**\n * Get the data submitted in the last Ajax request\n */\n_api_register( 'ajax.params()', function () {\n\tvar ctx = this.context;\n\n\tif ( ctx.length > 0 ) {\n\t\treturn ctx[0].oAjaxData;\n\t}\n\n\t// else return undefined;\n} );\n\n\n/**\n * Reload tables from the Ajax data source. Note that this function will\n * automatically re-draw the table when the remote data has been loaded.\n *\n * @param {boolean} [reset=true] Reset (default) or hold the current paging\n *   position. A full re-sort and re-filter is performed when this method is\n *   called, which is why the pagination reset is the default action.\n * @returns {DataTables.Api} this\n */\n_api_register( 'ajax.reload()', function ( callback, resetPaging ) {\n\treturn this.iterator( 'table', function (settings) {\n\t\t__reload( settings, resetPaging===false, callback );\n\t} );\n} );\n\n\n/**\n * Get the current Ajax URL. Note that this returns the URL from the first\n * table in the current context.\n *\n * @return {string} Current Ajax source URL\n *//**\n * Set the Ajax URL. Note that this will set the URL for all tables in the\n * current context.\n *\n * @param {string} url URL to set.\n * @returns {DataTables.Api} this\n */\n_api_register( 'ajax.url()', function ( url ) {\n\tvar ctx = this.context;\n\n\tif ( url === undefined ) {\n\t\t// get\n\t\tif ( ctx.length === 0 ) {\n\t\t\treturn undefined;\n\t\t}\n\t\tctx = ctx[0];\n\n\t\treturn ctx.ajax ?\n\t\t\t$.isPlainObject( ctx.ajax ) ?\n\t\t\t\tctx.ajax.url :\n\t\t\t\tctx.ajax :\n\t\t\tctx.sAjaxSource;\n\t}\n\n\t// set\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tif ( $.isPlainObject( settings.ajax ) ) {\n\t\t\tsettings.ajax.url = url;\n\t\t}\n\t\telse {\n\t\t\tsettings.ajax = url;\n\t\t}\n\t\t// No need to consider sAjaxSource here since DataTables gives priority\n\t\t// to `ajax` over `sAjaxSource`. So setting `ajax` here, renders any\n\t\t// value of `sAjaxSource` redundant.\n\t} );\n} );\n\n\n/**\n * Load data from the newly set Ajax URL. Note that this method is only\n * available when `ajax.url()` is used to set a URL. Additionally, this method\n * has the same effect as calling `ajax.reload()` but is provided for\n * convenience when setting a new URL. Like `ajax.reload()` it will\n * automatically redraw the table once the remote data has been loaded.\n *\n * @returns {DataTables.Api} this\n */\n_api_register( 'ajax.url().load()', function ( callback, resetPaging ) {\n\t// Same as a reload, but makes sense to present it for easy access after a\n\t// url change\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\t__reload( ctx, resetPaging===false, callback );\n\t} );\n} );\n\n\n\n\nvar _selector_run = function ( type, selector, selectFn, settings, opts )\n{\n\tvar\n\t\tout = [], res,\n\t\ta, i, ien, j, jen,\n\t\tselectorType = typeof selector;\n\n\t// Can't just check for isArray here, as an API or jQuery instance might be\n\t// given with their array like look\n\tif ( ! selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined ) {\n\t\tselector = [ selector ];\n\t}\n\n\tfor ( i=0, ien=selector.length ; i<ien ; i++ ) {\n\t\t// Only split on simple strings - complex expressions will be jQuery selectors\n\t\ta = selector[i] && selector[i].split && ! selector[i].match(/[\\[\\(:]/) ?\n\t\t\tselector[i].split(',') :\n\t\t\t[ selector[i] ];\n\n\t\tfor ( j=0, jen=a.length ; j<jen ; j++ ) {\n\t\t\tres = selectFn( typeof a[j] === 'string' ? (a[j]).trim() : a[j] );\n\n\t\t\tif ( res && res.length ) {\n\t\t\t\tout = out.concat( res );\n\t\t\t}\n\t\t}\n\t}\n\n\t// selector extensions\n\tvar ext = _ext.selector[ type ];\n\tif ( ext.length ) {\n\t\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\t\tout = ext[i]( settings, opts, out );\n\t\t}\n\t}\n\n\treturn _unique( out );\n};\n\n\nvar _selector_opts = function ( opts )\n{\n\tif ( ! opts ) {\n\t\topts = {};\n\t}\n\n\t// Backwards compatibility for 1.9- which used the terminology filter rather\n\t// than search\n\tif ( opts.filter && opts.search === undefined ) {\n\t\topts.search = opts.filter;\n\t}\n\n\treturn $.extend( {\n\t\tsearch: 'none',\n\t\torder: 'current',\n\t\tpage: 'all'\n\t}, opts );\n};\n\n\nvar _selector_first = function ( inst )\n{\n\t// Reduce the API instance to the first item found\n\tfor ( var i=0, ien=inst.length ; i<ien ; i++ ) {\n\t\tif ( inst[i].length > 0 ) {\n\t\t\t// Assign the first element to the first item in the instance\n\t\t\t// and truncate the instance and context\n\t\t\tinst[0] = inst[i];\n\t\t\tinst[0].length = 1;\n\t\t\tinst.length = 1;\n\t\t\tinst.context = [ inst.context[i] ];\n\n\t\t\treturn inst;\n\t\t}\n\t}\n\n\t// Not found - return an empty instance\n\tinst.length = 0;\n\treturn inst;\n};\n\n\nvar _selector_row_indexes = function ( settings, opts )\n{\n\tvar\n\t\ti, ien, tmp, a=[],\n\t\tdisplayFiltered = settings.aiDisplay,\n\t\tdisplayMaster = settings.aiDisplayMaster;\n\n\tvar\n\t\tsearch = opts.search,  // none, applied, removed\n\t\torder  = opts.order,   // applied, current, index (original - compatibility with 1.9)\n\t\tpage   = opts.page;    // all, current\n\n\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t// In server-side processing mode, most options are irrelevant since\n\t\t// rows not shown don't exist and the index order is the applied order\n\t\t// Removed is a special case - for consistency just return an empty\n\t\t// array\n\t\treturn search === 'removed' ?\n\t\t\t[] :\n\t\t\t_range( 0, displayMaster.length );\n\t}\n\telse if ( page == 'current' ) {\n\t\t// Current page implies that order=current and filter=applied, since it is\n\t\t// fairly senseless otherwise, regardless of what order and search actually\n\t\t// are\n\t\tfor ( i=settings._iDisplayStart, ien=settings.fnDisplayEnd() ; i<ien ; i++ ) {\n\t\t\ta.push( displayFiltered[i] );\n\t\t}\n\t}\n\telse if ( order == 'current' || order == 'applied' ) {\n\t\tif ( search == 'none') {\n\t\t\ta = displayMaster.slice();\n\t\t}\n\t\telse if ( search == 'applied' ) {\n\t\t\ta = displayFiltered.slice();\n\t\t}\n\t\telse if ( search == 'removed' ) {\n\t\t\t// O(n+m) solution by creating a hash map\n\t\t\tvar displayFilteredMap = {};\n\n\t\t\tfor ( var i=0, ien=displayFiltered.length ; i<ien ; i++ ) {\n\t\t\t\tdisplayFilteredMap[displayFiltered[i]] = null;\n\t\t\t}\n\n\t\t\ta = $.map( displayMaster, function (el) {\n\t\t\t\treturn ! displayFilteredMap.hasOwnProperty(el) ?\n\t\t\t\t\tel :\n\t\t\t\t\tnull;\n\t\t\t} );\n\t\t}\n\t}\n\telse if ( order == 'index' || order == 'original' ) {\n\t\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\tif ( search == 'none' ) {\n\t\t\t\ta.push( i );\n\t\t\t}\n\t\t\telse { // applied | removed\n\t\t\t\ttmp = $.inArray( i, displayFiltered );\n\n\t\t\t\tif ((tmp === -1 && search == 'removed') ||\n\t\t\t\t\t(tmp >= 0   && search == 'applied') )\n\t\t\t\t{\n\t\t\t\t\ta.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a;\n};\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Rows\n *\n * {}          - no selector - use all available rows\n * {integer}   - row aoData index\n * {node}      - TR node\n * {string}    - jQuery selector to apply to the TR elements\n * {array}     - jQuery array of nodes, or simply an array of TR nodes\n *\n */\nvar __row_selector = function ( settings, selector, opts )\n{\n\tvar rows;\n\tvar run = function ( sel ) {\n\t\tvar selInt = _intVal( sel );\n\t\tvar i, ien;\n\t\tvar aoData = settings.aoData;\n\n\t\t// Short cut - selector is a number and no options provided (default is\n\t\t// all records, so no need to check if the index is in there, since it\n\t\t// must be - dev error if the index doesn't exist).\n\t\tif ( selInt !== null && ! opts ) {\n\t\t\treturn [ selInt ];\n\t\t}\n\n\t\tif ( ! rows ) {\n\t\t\trows = _selector_row_indexes( settings, opts );\n\t\t}\n\n\t\tif ( selInt !== null && $.inArray( selInt, rows ) !== -1 ) {\n\t\t\t// Selector - integer\n\t\t\treturn [ selInt ];\n\t\t}\n\t\telse if ( sel === null || sel === undefined || sel === '' ) {\n\t\t\t// Selector - none\n\t\t\treturn rows;\n\t\t}\n\n\t\t// Selector - function\n\t\tif ( typeof sel === 'function' ) {\n\t\t\treturn $.map( rows, function (idx) {\n\t\t\t\tvar row = aoData[ idx ];\n\t\t\t\treturn sel( idx, row._aData, row.nTr ) ? idx : null;\n\t\t\t} );\n\t\t}\n\n\t\t// Selector - node\n\t\tif ( sel.nodeName ) {\n\t\t\tvar rowIdx = sel._DT_RowIndex;  // Property added by DT for fast lookup\n\t\t\tvar cellIdx = sel._DT_CellIndex;\n\n\t\t\tif ( rowIdx !== undefined ) {\n\t\t\t\t// Make sure that the row is actually still present in the table\n\t\t\t\treturn aoData[ rowIdx ] && aoData[ rowIdx ].nTr === sel ?\n\t\t\t\t\t[ rowIdx ] :\n\t\t\t\t\t[];\n\t\t\t}\n\t\t\telse if ( cellIdx ) {\n\t\t\t\treturn aoData[ cellIdx.row ] && aoData[ cellIdx.row ].nTr === sel.parentNode ?\n\t\t\t\t\t[ cellIdx.row ] :\n\t\t\t\t\t[];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar host = $(sel).closest('*[data-dt-row]');\n\t\t\t\treturn host.length ?\n\t\t\t\t\t[ host.data('dt-row') ] :\n\t\t\t\t\t[];\n\t\t\t}\n\t\t}\n\n\t\t// ID selector. Want to always be able to select rows by id, regardless\n\t\t// of if the tr element has been created or not, so can't rely upon\n\t\t// jQuery here - hence a custom implementation. This does not match\n\t\t// Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,\n\t\t// but to select it using a CSS selector engine (like Sizzle or\n\t\t// querySelect) it would need to need to be escaped for some characters.\n\t\t// DataTables simplifies this for row selectors since you can select\n\t\t// only a row. A # indicates an id any anything that follows is the id -\n\t\t// unescaped.\n\t\tif ( typeof sel === 'string' && sel.charAt(0) === '#' ) {\n\t\t\t// get row index from id\n\t\t\tvar rowObj = settings.aIds[ sel.replace( /^#/, '' ) ];\n\t\t\tif ( rowObj !== undefined ) {\n\t\t\t\treturn [ rowObj.idx ];\n\t\t\t}\n\n\t\t\t// need to fall through to jQuery in case there is DOM id that\n\t\t\t// matches\n\t\t}\n\t\t\n\t\t// Get nodes in the order from the `rows` array with null values removed\n\t\tvar nodes = _removeEmpty(\n\t\t\t_pluck_order( settings.aoData, rows, 'nTr' )\n\t\t);\n\n\t\t// Selector - jQuery selector string, array of nodes or jQuery object/\n\t\t// As jQuery's .filter() allows jQuery objects to be passed in filter,\n\t\t// it also allows arrays, so this will cope with all three options\n\t\treturn $(nodes)\n\t\t\t.filter( sel )\n\t\t\t.map( function () {\n\t\t\t\treturn this._DT_RowIndex;\n\t\t\t} )\n\t\t\t.toArray();\n\t};\n\n\treturn _selector_run( 'row', selector, run, settings, opts );\n};\n\n\n_api_register( 'rows()', function ( selector, opts ) {\n\t// argument shifting\n\tif ( selector === undefined ) {\n\t\tselector = '';\n\t}\n\telse if ( $.isPlainObject( selector ) ) {\n\t\topts = selector;\n\t\tselector = '';\n\t}\n\n\topts = _selector_opts( opts );\n\n\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\treturn __row_selector( settings, selector, opts );\n\t}, 1 );\n\n\t// Want argument shifting here and in __row_selector?\n\tinst.selector.rows = selector;\n\tinst.selector.opts = opts;\n\n\treturn inst;\n} );\n\n_api_register( 'rows().nodes()', function () {\n\treturn this.iterator( 'row', function ( settings, row ) {\n\t\treturn settings.aoData[ row ].nTr || undefined;\n\t}, 1 );\n} );\n\n_api_register( 'rows().data()', function () {\n\treturn this.iterator( true, 'rows', function ( settings, rows ) {\n\t\treturn _pluck_order( settings.aoData, rows, '_aData' );\n\t}, 1 );\n} );\n\n_api_registerPlural( 'rows().cache()', 'row().cache()', function ( type ) {\n\treturn this.iterator( 'row', function ( settings, row ) {\n\t\tvar r = settings.aoData[ row ];\n\t\treturn type === 'search' ? r._aFilterData : r._aSortData;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'rows().invalidate()', 'row().invalidate()', function ( src ) {\n\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t_fnInvalidate( settings, row, src );\n\t} );\n} );\n\n_api_registerPlural( 'rows().indexes()', 'row().index()', function () {\n\treturn this.iterator( 'row', function ( settings, row ) {\n\t\treturn row;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'rows().ids()', 'row().id()', function ( hash ) {\n\tvar a = [];\n\tvar context = this.context;\n\n\t// `iterator` will drop undefined values, but in this case we want them\n\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\n\t\tfor ( var j=0, jen=this[i].length ; j<jen ; j++ ) {\n\t\t\tvar id = context[i].rowIdFn( context[i].aoData[ this[i][j] ]._aData );\n\t\t\ta.push( (hash === true ? '#' : '' )+ id );\n\t\t}\n\t}\n\n\treturn new _Api( context, a );\n} );\n\n_api_registerPlural( 'rows().remove()', 'row().remove()', function () {\n\tvar that = this;\n\n\tthis.iterator( 'row', function ( settings, row, thatIdx ) {\n\t\tvar data = settings.aoData;\n\t\tvar rowData = data[ row ];\n\t\tvar i, ien, j, jen;\n\t\tvar loopRow, loopCells;\n\n\t\tdata.splice( row, 1 );\n\n\t\t// Update the cached indexes\n\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\tloopRow = data[i];\n\t\t\tloopCells = loopRow.anCells;\n\n\t\t\t// Rows\n\t\t\tif ( loopRow.nTr !== null ) {\n\t\t\t\tloopRow.nTr._DT_RowIndex = i;\n\t\t\t}\n\n\t\t\t// Cells\n\t\t\tif ( loopCells !== null ) {\n\t\t\t\tfor ( j=0, jen=loopCells.length ; j<jen ; j++ ) {\n\t\t\t\t\tloopCells[j]._DT_CellIndex.row = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Delete from the display arrays\n\t\t_fnDeleteIndex( settings.aiDisplayMaster, row );\n\t\t_fnDeleteIndex( settings.aiDisplay, row );\n\t\t_fnDeleteIndex( that[ thatIdx ], row, false ); // maintain local indexes\n\n\t\t// For server-side processing tables - subtract the deleted row from the count\n\t\tif ( settings._iRecordsDisplay > 0 ) {\n\t\t\tsettings._iRecordsDisplay--;\n\t\t}\n\n\t\t// Check for an 'overflow' they case for displaying the table\n\t\t_fnLengthOverflow( settings );\n\n\t\t// Remove the row's ID reference if there is one\n\t\tvar id = settings.rowIdFn( rowData._aData );\n\t\tif ( id !== undefined ) {\n\t\t\tdelete settings.aIds[ id ];\n\t\t}\n\t} );\n\n\tthis.iterator( 'table', function ( settings ) {\n\t\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\tsettings.aoData[i].idx = i;\n\t\t}\n\t} );\n\n\treturn this;\n} );\n\n\n_api_register( 'rows.add()', function ( rows ) {\n\tvar newRows = this.iterator( 'table', function ( settings ) {\n\t\t\tvar row, i, ien;\n\t\t\tvar out = [];\n\n\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\trow = rows[i];\n\n\t\t\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\t\t\tout.push( _fnAddTr( settings, row )[0] );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tout.push( _fnAddData( settings, row ) );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn out;\n\t\t}, 1 );\n\n\t// Return an Api.rows() extended instance, so rows().nodes() etc can be used\n\tvar modRows = this.rows( -1 );\n\tmodRows.pop();\n\t$.merge( modRows, newRows );\n\n\treturn modRows;\n} );\n\n\n\n\n\n/**\n *\n */\n_api_register( 'row()', function ( selector, opts ) {\n\treturn _selector_first( this.rows( selector, opts ) );\n} );\n\n\n_api_register( 'row().data()', function ( data ) {\n\tvar ctx = this.context;\n\n\tif ( data === undefined ) {\n\t\t// Get\n\t\treturn ctx.length && this.length ?\n\t\t\tctx[0].aoData[ this[0] ]._aData :\n\t\t\tundefined;\n\t}\n\n\t// Set\n\tvar row = ctx[0].aoData[ this[0] ];\n\trow._aData = data;\n\n\t// If the DOM has an id, and the data source is an array\n\tif ( Array.isArray( data ) && row.nTr && row.nTr.id ) {\n\t\t_fnSetObjectDataFn( ctx[0].rowId )( data, row.nTr.id );\n\t}\n\n\t// Automatically invalidate\n\t_fnInvalidate( ctx[0], this[0], 'data' );\n\n\treturn this;\n} );\n\n\n_api_register( 'row().node()', function () {\n\tvar ctx = this.context;\n\n\treturn ctx.length && this.length ?\n\t\tctx[0].aoData[ this[0] ].nTr || null :\n\t\tnull;\n} );\n\n\n_api_register( 'row.add()', function ( row ) {\n\t// Allow a jQuery object to be passed in - only a single row is added from\n\t// it though - the first element in the set\n\tif ( row instanceof $ && row.length ) {\n\t\trow = row[0];\n\t}\n\n\tvar rows = this.iterator( 'table', function ( settings ) {\n\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\treturn _fnAddTr( settings, row )[0];\n\t\t}\n\t\treturn _fnAddData( settings, row );\n\t} );\n\n\t// Return an Api.rows() extended instance, with the newly added row selected\n\treturn this.row( rows[0] );\n} );\n\n\n$(document).on('plugin-init.dt', function (e, context) {\n\tvar api = new _Api( context );\n\t\n\tconst namespace = 'on-plugin-init';\n\tconst stateSaveParamsEvent = `stateSaveParams.${namespace}`;\n\tconst destroyEvent = `destroy.${namespace}`;\n\n\tapi.on( stateSaveParamsEvent, function ( e, settings, d ) {\n\t\t// This could be more compact with the API, but it is a lot faster as a simple\n\t\t// internal loop\n\t\tvar idFn = settings.rowIdFn;\n\t\tvar data = settings.aoData;\n\t\tvar ids = [];\n\n\t\tfor (var i=0 ; i<data.length ; i++) {\n\t\t\tif (data[i]._detailsShow) {\n\t\t\t\tids.push( '#' + idFn(data[i]._aData) );\n\t\t\t}\n\t\t}\n\n\t\td.childRows = ids;\n\t});\n\n\tapi.on( destroyEvent, function () {\n\t\tapi.off(`${stateSaveParamsEvent} ${destroyEvent}`);\n\t});\n\n\tvar loaded = api.state.loaded();\n\n\tif ( loaded && loaded.childRows ) {\n\t\tapi\n\t\t\t.rows( $.map(loaded.childRows, function (id){\n\t\t\t\treturn id.replace(/:/g, '\\\\:')\n\t\t\t}) )\n\t\t\t.every( function () {\n\t\t\t\t_fnCallbackFire( context, null, 'requestChild', [ this ] )\n\t\t\t});\n\t}\n});\n\nvar __details_add = function ( ctx, row, data, klass )\n{\n\t// Convert to array of TR elements\n\tvar rows = [];\n\tvar addRow = function ( r, k ) {\n\t\t// Recursion to allow for arrays of jQuery objects\n\t\tif ( Array.isArray( r ) || r instanceof $ ) {\n\t\t\tfor ( var i=0, ien=r.length ; i<ien ; i++ ) {\n\t\t\t\taddRow( r[i], k );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// If we get a TR element, then just add it directly - up to the dev\n\t\t// to add the correct number of columns etc\n\t\tif ( r.nodeName && r.nodeName.toLowerCase() === 'tr' ) {\n\t\t\trows.push( r );\n\t\t}\n\t\telse {\n\t\t\t// Otherwise create a row with a wrapper\n\t\t\tvar created = $('<tr><td></td></tr>').addClass( k );\n\t\t\t$('td', created)\n\t\t\t\t.addClass( k )\n\t\t\t\t.html( r )\n\t\t\t\t[0].colSpan = _fnVisbleColumns( ctx );\n\n\t\t\trows.push( created[0] );\n\t\t}\n\t};\n\n\taddRow( data, klass );\n\n\tif ( row._details ) {\n\t\trow._details.detach();\n\t}\n\n\trow._details = $(rows);\n\n\t// If the children were already shown, that state should be retained\n\tif ( row._detailsShow ) {\n\t\trow._details.insertAfter( row.nTr );\n\t}\n};\n\n\n// Make state saving of child row details async to allow them to be batch processed\nvar __details_state = DataTable.util.throttle(\n\tfunction (ctx) {\n\t\t_fnSaveState( ctx[0] )\n\t},\n\t500\n);\n\n\nvar __details_remove = function ( api, idx )\n{\n\tvar ctx = api.context;\n\n\tif ( ctx.length ) {\n\t\tvar row = ctx[0].aoData[ idx !== undefined ? idx : api[0] ];\n\n\t\tif ( row && row._details ) {\n\t\t\trow._details.remove();\n\n\t\t\trow._detailsShow = undefined;\n\t\t\trow._details = undefined;\n\t\t\t$( row.nTr ).removeClass( 'dt-hasChild' );\n\t\t\t__details_state( ctx );\n\t\t}\n\t}\n};\n\n\nvar __details_display = function ( api, show ) {\n\tvar ctx = api.context;\n\n\tif ( ctx.length && api.length ) {\n\t\tvar row = ctx[0].aoData[ api[0] ];\n\n\t\tif ( row._details ) {\n\t\t\trow._detailsShow = show;\n\n\t\t\tif ( show ) {\n\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t$( row.nTr ).addClass( 'dt-hasChild' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\trow._details.detach();\n\t\t\t\t$( row.nTr ).removeClass( 'dt-hasChild' );\n\t\t\t}\n\n\t\t\t_fnCallbackFire( ctx[0], null, 'childRow', [ show, api.row( api[0] ) ] )\n\n\t\t\t__details_events( ctx[0] );\n\t\t\t__details_state( ctx );\n\t\t}\n\t}\n};\n\n\nvar __details_events = function ( settings )\n{\n\tvar api = new _Api( settings );\n\tvar namespace = '.dt.DT_details';\n\tvar drawEvent = 'draw'+namespace;\n\tvar colvisEvent = 'column-sizing'+namespace;\n\tvar destroyEvent = 'destroy'+namespace;\n\tvar data = settings.aoData;\n\n\tapi.off( drawEvent +' '+ colvisEvent +' '+ destroyEvent );\n\n\tif ( _pluck( data, '_details' ).length > 0 ) {\n\t\t// On each draw, insert the required elements into the document\n\t\tapi.on( drawEvent, function ( e, ctx ) {\n\t\t\tif ( settings !== ctx ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tapi.rows( {page:'current'} ).eq(0).each( function (idx) {\n\t\t\t\t// Internal data grab\n\t\t\t\tvar row = data[ idx ];\n\n\t\t\t\tif ( row._detailsShow ) {\n\t\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\n\t\t// Column visibility change - update the colspan\n\t\tapi.on( colvisEvent, function ( e, ctx, idx, vis ) {\n\t\t\tif ( settings !== ctx ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Update the colspan for the details rows (note, only if it already has\n\t\t\t// a colspan)\n\t\t\tvar row, visible = _fnVisbleColumns( ctx );\n\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\trow = data[i];\n\n\t\t\t\tif ( row._details ) {\n\t\t\t\t\trow._details.children('td[colspan]').attr('colspan', visible );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\t// Table destroyed - nuke any child rows\n\t\tapi.on( destroyEvent, function ( e, ctx ) {\n\t\t\tif ( settings !== ctx ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\tif ( data[i]._details ) {\n\t\t\t\t\t__details_remove( api, i );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n};\n\n// Strings for the method names to help minification\nvar _emp = '';\nvar _child_obj = _emp+'row().child';\nvar _child_mth = _child_obj+'()';\n\n// data can be:\n//  tr\n//  string\n//  jQuery or array of any of the above\n_api_register( _child_mth, function ( data, klass ) {\n\tvar ctx = this.context;\n\n\tif ( data === undefined ) {\n\t\t// get\n\t\treturn ctx.length && this.length ?\n\t\t\tctx[0].aoData[ this[0] ]._details :\n\t\t\tundefined;\n\t}\n\telse if ( data === true ) {\n\t\t// show\n\t\tthis.child.show();\n\t}\n\telse if ( data === false ) {\n\t\t// remove\n\t\t__details_remove( this );\n\t}\n\telse if ( ctx.length && this.length ) {\n\t\t// set\n\t\t__details_add( ctx[0], ctx[0].aoData[ this[0] ], data, klass );\n\t}\n\n\treturn this;\n} );\n\n\n_api_register( [\n\t_child_obj+'.show()',\n\t_child_mth+'.show()' // only when `child()` was called with parameters (without\n], function ( show ) {   // it returns an object and this method is not executed)\n\t__details_display( this, true );\n\treturn this;\n} );\n\n\n_api_register( [\n\t_child_obj+'.hide()',\n\t_child_mth+'.hide()' // only when `child()` was called with parameters (without\n], function () {         // it returns an object and this method is not executed)\n\t__details_display( this, false );\n\treturn this;\n} );\n\n\n_api_register( [\n\t_child_obj+'.remove()',\n\t_child_mth+'.remove()' // only when `child()` was called with parameters (without\n], function () {           // it returns an object and this method is not executed)\n\t__details_remove( this );\n\treturn this;\n} );\n\n\n_api_register( _child_obj+'.isShown()', function () {\n\tvar ctx = this.context;\n\n\tif ( ctx.length && this.length ) {\n\t\t// _detailsShown as false or undefined will fall through to return false\n\t\treturn ctx[0].aoData[ this[0] ]._detailsShow || false;\n\t}\n\treturn false;\n} );\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Columns\n *\n * {integer}           - column index (>=0 count from left, <0 count from right)\n * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\n * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\n * \"{string}:name\"     - column name\n * \"{string}\"          - jQuery selector on column header nodes\n *\n */\n\n// can be an array of these items, comma separated list, or an array of comma\n// separated lists\n\nvar __re_column_selector = /^([^:]+):(name|visIdx|visible)$/;\n\n\n// r1 and r2 are redundant - but it means that the parameters match for the\n// iterator callback in columns().data()\nvar __columnData = function ( settings, column, r1, r2, rows ) {\n\tvar a = [];\n\tfor ( var row=0, ien=rows.length ; row<ien ; row++ ) {\n\t\ta.push( _fnGetCellData( settings, rows[row], column ) );\n\t}\n\treturn a;\n};\n\n\nvar __column_selector = function ( settings, selector, opts )\n{\n\tvar\n\t\tcolumns = settings.aoColumns,\n\t\tnames = _pluck( columns, 'sName' ),\n\t\tnodes = _pluck( columns, 'nTh' );\n\n\tvar run = function ( s ) {\n\t\tvar selInt = _intVal( s );\n\n\t\t// Selector - all\n\t\tif ( s === '' ) {\n\t\t\treturn _range( columns.length );\n\t\t}\n\n\t\t// Selector - index\n\t\tif ( selInt !== null ) {\n\t\t\treturn [ selInt >= 0 ?\n\t\t\t\tselInt : // Count from left\n\t\t\t\tcolumns.length + selInt // Count from right (+ because its a negative value)\n\t\t\t];\n\t\t}\n\n\t\t// Selector = function\n\t\tif ( typeof s === 'function' ) {\n\t\t\tvar rows = _selector_row_indexes( settings, opts );\n\n\t\t\treturn $.map( columns, function (col, idx) {\n\t\t\t\treturn s(\n\t\t\t\t\t\tidx,\n\t\t\t\t\t\t__columnData( settings, idx, 0, 0, rows ),\n\t\t\t\t\t\tnodes[ idx ]\n\t\t\t\t\t) ? idx : null;\n\t\t\t} );\n\t\t}\n\n\t\t// jQuery or string selector\n\t\tvar match = typeof s === 'string' ?\n\t\t\ts.match( __re_column_selector ) :\n\t\t\t'';\n\n\t\tif ( match ) {\n\t\t\tswitch( match[2] ) {\n\t\t\t\tcase 'visIdx':\n\t\t\t\tcase 'visible':\n\t\t\t\t\tvar idx = parseInt( match[1], 10 );\n\t\t\t\t\t// Visible index given, convert to column index\n\t\t\t\t\tif ( idx < 0 ) {\n\t\t\t\t\t\t// Counting from the right\n\t\t\t\t\t\tvar visColumns = $.map( columns, function (col,i) {\n\t\t\t\t\t\t\treturn col.bVisible ? i : null;\n\t\t\t\t\t\t} );\n\t\t\t\t\t\treturn [ visColumns[ visColumns.length + idx ] ];\n\t\t\t\t\t}\n\t\t\t\t\t// Counting from the left\n\t\t\t\t\treturn [ _fnVisibleToColumnIndex( settings, idx ) ];\n\n\t\t\t\tcase 'name':\n\t\t\t\t\t// match by name. `names` is column index complete and in order\n\t\t\t\t\treturn $.map( names, function (name, i) {\n\t\t\t\t\t\treturn name === match[1] ? i : null;\n\t\t\t\t\t} );\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn [];\n\t\t\t}\n\t\t}\n\n\t\t// Cell in the table body\n\t\tif ( s.nodeName && s._DT_CellIndex ) {\n\t\t\treturn [ s._DT_CellIndex.column ];\n\t\t}\n\n\t\t// jQuery selector on the TH elements for the columns\n\t\tvar jqResult = $( nodes )\n\t\t\t.filter( s )\n\t\t\t.map( function () {\n\t\t\t\treturn $.inArray( this, nodes ); // `nodes` is column index complete and in order\n\t\t\t} )\n\t\t\t.toArray();\n\n\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\treturn jqResult;\n\t\t}\n\n\t\t// Otherwise a node which might have a `dt-column` data attribute, or be\n\t\t// a child or such an element\n\t\tvar host = $(s).closest('*[data-dt-column]');\n\t\treturn host.length ?\n\t\t\t[ host.data('dt-column') ] :\n\t\t\t[];\n\t};\n\n\treturn _selector_run( 'column', selector, run, settings, opts );\n};\n\n\nvar __setColumnVis = function ( settings, column, vis ) {\n\tvar\n\t\tcols = settings.aoColumns,\n\t\tcol  = cols[ column ],\n\t\tdata = settings.aoData,\n\t\trow, cells, i, ien, tr;\n\n\t// Get\n\tif ( vis === undefined ) {\n\t\treturn col.bVisible;\n\t}\n\n\t// Set\n\t// No change\n\tif ( col.bVisible === vis ) {\n\t\treturn;\n\t}\n\n\tif ( vis ) {\n\t\t// Insert column\n\t\t// Need to decide if we should use appendChild or insertBefore\n\t\tvar insertBefore = $.inArray( true, _pluck(cols, 'bVisible'), column+1 );\n\n\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\ttr = data[i].nTr;\n\t\t\tcells = data[i].anCells;\n\n\t\t\tif ( tr ) {\n\t\t\t\t// insertBefore can act like appendChild if 2nd arg is null\n\t\t\t\ttr.insertBefore( cells[ column ], cells[ insertBefore ] || null );\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\t// Remove column\n\t\t$( _pluck( settings.aoData, 'anCells', column ) ).detach();\n\t}\n\n\t// Common actions\n\tcol.bVisible = vis;\n};\n\n\n_api_register( 'columns()', function ( selector, opts ) {\n\t// argument shifting\n\tif ( selector === undefined ) {\n\t\tselector = '';\n\t}\n\telse if ( $.isPlainObject( selector ) ) {\n\t\topts = selector;\n\t\tselector = '';\n\t}\n\n\topts = _selector_opts( opts );\n\n\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\treturn __column_selector( settings, selector, opts );\n\t}, 1 );\n\n\t// Want argument shifting here and in _row_selector?\n\tinst.selector.cols = selector;\n\tinst.selector.opts = opts;\n\n\treturn inst;\n} );\n\n_api_registerPlural( 'columns().header()', 'column().header()', function ( selector, opts ) {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\treturn settings.aoColumns[column].nTh;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().footer()', 'column().footer()', function ( selector, opts ) {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\treturn settings.aoColumns[column].nTf;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().data()', 'column().data()', function () {\n\treturn this.iterator( 'column-rows', __columnData, 1 );\n} );\n\n_api_registerPlural( 'columns().dataSrc()', 'column().dataSrc()', function () {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\treturn settings.aoColumns[column].mData;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().cache()', 'column().cache()', function ( type ) {\n\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\treturn _pluck_order( settings.aoData, rows,\n\t\t\ttype === 'search' ? '_aFilterData' : '_aSortData', column\n\t\t);\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().nodes()', 'column().nodes()', function () {\n\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\treturn _pluck_order( settings.aoData, rows, 'anCells', column ) ;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().visible()', 'column().visible()', function ( vis, calc ) {\n\tvar that = this;\n\tvar ret = this.iterator( 'column', function ( settings, column ) {\n\t\tif ( vis === undefined ) {\n\t\t\treturn settings.aoColumns[ column ].bVisible;\n\t\t} // else\n\t\t__setColumnVis( settings, column, vis );\n\t} );\n\n\t// Group the column visibility changes\n\tif ( vis !== undefined ) {\n\t\tthis.iterator( 'table', function ( settings ) {\n\t\t\t// Redraw the header after changes\n\t\t\t_fnDrawHead( settings, settings.aoHeader );\n\t\t\t_fnDrawHead( settings, settings.aoFooter );\n\t\n\t\t\t// Update colspan for no records display. Child rows and extensions will use their own\n\t\t\t// listeners to do this - only need to update the empty table item here\n\t\t\tif ( ! settings.aiDisplay.length ) {\n\t\t\t\t$(settings.nTBody).find('td[colspan]').attr('colspan', _fnVisbleColumns(settings));\n\t\t\t}\n\t\n\t\t\t_fnSaveState( settings );\n\n\t\t\t// Second loop once the first is done for events\n\t\t\tthat.iterator( 'column', function ( settings, column ) {\n\t\t\t\t_fnCallbackFire( settings, null, 'column-visibility', [settings, column, vis, calc] );\n\t\t\t} );\n\n\t\t\tif ( calc === undefined || calc ) {\n\t\t\t\tthat.columns.adjust();\n\t\t\t}\n\t\t});\n\t}\n\n\treturn ret;\n} );\n\n_api_registerPlural( 'columns().indexes()', 'column().index()', function ( type ) {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\treturn type === 'visible' ?\n\t\t\t_fnColumnIndexToVisible( settings, column ) :\n\t\t\tcolumn;\n\t}, 1 );\n} );\n\n_api_register( 'columns.adjust()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnAdjustColumnSizing( settings );\n\t}, 1 );\n} );\n\n_api_register( 'column.index()', function ( type, idx ) {\n\tif ( this.context.length !== 0 ) {\n\t\tvar ctx = this.context[0];\n\n\t\tif ( type === 'fromVisible' || type === 'toData' ) {\n\t\t\treturn _fnVisibleToColumnIndex( ctx, idx );\n\t\t}\n\t\telse if ( type === 'fromData' || type === 'toVisible' ) {\n\t\t\treturn _fnColumnIndexToVisible( ctx, idx );\n\t\t}\n\t}\n} );\n\n_api_register( 'column()', function ( selector, opts ) {\n\treturn _selector_first( this.columns( selector, opts ) );\n} );\n\nvar __cell_selector = function ( settings, selector, opts )\n{\n\tvar data = settings.aoData;\n\tvar rows = _selector_row_indexes( settings, opts );\n\tvar cells = _removeEmpty( _pluck_order( data, rows, 'anCells' ) );\n\tvar allCells = $(_flatten( [], cells ));\n\tvar row;\n\tvar columns = settings.aoColumns.length;\n\tvar a, i, ien, j, o, host;\n\n\tvar run = function ( s ) {\n\t\tvar fnSelector = typeof s === 'function';\n\n\t\tif ( s === null || s === undefined || fnSelector ) {\n\t\t\t// All cells and function selectors\n\t\t\ta = [];\n\n\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\trow = rows[i];\n\n\t\t\t\tfor ( j=0 ; j<columns ; j++ ) {\n\t\t\t\t\to = {\n\t\t\t\t\t\trow: row,\n\t\t\t\t\t\tcolumn: j\n\t\t\t\t\t};\n\n\t\t\t\t\tif ( fnSelector ) {\n\t\t\t\t\t\t// Selector - function\n\t\t\t\t\t\thost = data[ row ];\n\n\t\t\t\t\t\tif ( s( o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null ) ) {\n\t\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Selector - all\n\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn a;\n\t\t}\n\t\t\n\t\t// Selector - index\n\t\tif ( $.isPlainObject( s ) ) {\n\t\t\t// Valid cell index and its in the array of selectable rows\n\t\t\treturn s.column !== undefined && s.row !== undefined && $.inArray( s.row, rows ) !== -1 ?\n\t\t\t\t[s] :\n\t\t\t\t[];\n\t\t}\n\n\t\t// Selector - jQuery filtered cells\n\t\tvar jqResult = allCells\n\t\t\t.filter( s )\n\t\t\t.map( function (i, el) {\n\t\t\t\treturn { // use a new object, in case someone changes the values\n\t\t\t\t\trow:    el._DT_CellIndex.row,\n\t\t\t\t\tcolumn: el._DT_CellIndex.column\n \t\t\t\t};\n\t\t\t} )\n\t\t\t.toArray();\n\n\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\treturn jqResult;\n\t\t}\n\n\t\t// Otherwise the selector is a node, and there is one last option - the\n\t\t// element might be a child of an element which has dt-row and dt-column\n\t\t// data attributes\n\t\thost = $(s).closest('*[data-dt-row]');\n\t\treturn host.length ?\n\t\t\t[ {\n\t\t\t\trow: host.data('dt-row'),\n\t\t\t\tcolumn: host.data('dt-column')\n\t\t\t} ] :\n\t\t\t[];\n\t};\n\n\treturn _selector_run( 'cell', selector, run, settings, opts );\n};\n\n\n\n\n_api_register( 'cells()', function ( rowSelector, columnSelector, opts ) {\n\t// Argument shifting\n\tif ( $.isPlainObject( rowSelector ) ) {\n\t\t// Indexes\n\t\tif ( rowSelector.row === undefined ) {\n\t\t\t// Selector options in first parameter\n\t\t\topts = rowSelector;\n\t\t\trowSelector = null;\n\t\t}\n\t\telse {\n\t\t\t// Cell index objects in first parameter\n\t\t\topts = columnSelector;\n\t\t\tcolumnSelector = null;\n\t\t}\n\t}\n\tif ( $.isPlainObject( columnSelector ) ) {\n\t\topts = columnSelector;\n\t\tcolumnSelector = null;\n\t}\n\n\t// Cell selector\n\tif ( columnSelector === null || columnSelector === undefined ) {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\treturn __cell_selector( settings, rowSelector, _selector_opts( opts ) );\n\t\t} );\n\t}\n\n\t// The default built in options need to apply to row and columns\n\tvar internalOpts = opts ? {\n\t\tpage: opts.page,\n\t\torder: opts.order,\n\t\tsearch: opts.search\n\t} : {};\n\n\t// Row + column selector\n\tvar columns = this.columns( columnSelector, internalOpts );\n\tvar rows = this.rows( rowSelector, internalOpts );\n\tvar i, ien, j, jen;\n\n\tvar cellsNoOpts = this.iterator( 'table', function ( settings, idx ) {\n\t\tvar a = [];\n\n\t\tfor ( i=0, ien=rows[idx].length ; i<ien ; i++ ) {\n\t\t\tfor ( j=0, jen=columns[idx].length ; j<jen ; j++ ) {\n\t\t\t\ta.push( {\n\t\t\t\t\trow:    rows[idx][i],\n\t\t\t\t\tcolumn: columns[idx][j]\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t\treturn a;\n\t}, 1 );\n\n\t// There is currently only one extension which uses a cell selector extension\n\t// It is a _major_ performance drag to run this if it isn't needed, so this is\n\t// an extension specific check at the moment\n\tvar cells = opts && opts.selected ?\n\t\tthis.cells( cellsNoOpts, opts ) :\n\t\tcellsNoOpts;\n\n\t$.extend( cells.selector, {\n\t\tcols: columnSelector,\n\t\trows: rowSelector,\n\t\topts: opts\n\t} );\n\n\treturn cells;\n} );\n\n\n_api_registerPlural( 'cells().nodes()', 'cell().node()', function () {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\tvar data = settings.aoData[ row ];\n\n\t\treturn data && data.anCells ?\n\t\t\tdata.anCells[ column ] :\n\t\t\tundefined;\n\t}, 1 );\n} );\n\n\n_api_register( 'cells().data()', function () {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn _fnGetCellData( settings, row, column );\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'cells().cache()', 'cell().cache()', function ( type ) {\n\ttype = type === 'search' ? '_aFilterData' : '_aSortData';\n\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn settings.aoData[ row ][ type ][ column ];\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'cells().render()', 'cell().render()', function ( type ) {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn _fnGetCellData( settings, row, column, type );\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'cells().indexes()', 'cell().index()', function () {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn {\n\t\t\trow: row,\n\t\t\tcolumn: column,\n\t\t\tcolumnVisible: _fnColumnIndexToVisible( settings, column )\n\t\t};\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'cells().invalidate()', 'cell().invalidate()', function ( src ) {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t_fnInvalidate( settings, row, src, column );\n\t} );\n} );\n\n\n\n_api_register( 'cell()', function ( rowSelector, columnSelector, opts ) {\n\treturn _selector_first( this.cells( rowSelector, columnSelector, opts ) );\n} );\n\n\n_api_register( 'cell().data()', function ( data ) {\n\tvar ctx = this.context;\n\tvar cell = this[0];\n\n\tif ( data === undefined ) {\n\t\t// Get\n\t\treturn ctx.length && cell.length ?\n\t\t\t_fnGetCellData( ctx[0], cell[0].row, cell[0].column ) :\n\t\t\tundefined;\n\t}\n\n\t// Set\n\t_fnSetCellData( ctx[0], cell[0].row, cell[0].column, data );\n\t_fnInvalidate( ctx[0], cell[0].row, 'data', cell[0].column );\n\n\treturn this;\n} );\n\n\n\n/**\n * Get current ordering (sorting) that has been applied to the table.\n *\n * @returns {array} 2D array containing the sorting information for the first\n *   table in the current context. Each element in the parent array represents\n *   a column being sorted upon (i.e. multi-sorting with two columns would have\n *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\n *   the column index that the sorting condition applies to, the second is the\n *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\n *   index of the sorting order from the `column.sorting` initialisation array.\n *//**\n * Set the ordering for the table.\n *\n * @param {integer} order Column index to sort upon.\n * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\n * @returns {DataTables.Api} this\n *//**\n * Set the ordering for the table.\n *\n * @param {array} order 1D array of sorting information to be applied.\n * @param {array} [...] Optional additional sorting conditions\n * @returns {DataTables.Api} this\n *//**\n * Set the ordering for the table.\n *\n * @param {array} order 2D array of sorting information to be applied.\n * @returns {DataTables.Api} this\n */\n_api_register( 'order()', function ( order, dir ) {\n\tvar ctx = this.context;\n\n\tif ( order === undefined ) {\n\t\t// get\n\t\treturn ctx.length !== 0 ?\n\t\t\tctx[0].aaSorting :\n\t\t\tundefined;\n\t}\n\n\t// set\n\tif ( typeof order === 'number' ) {\n\t\t// Simple column / direction passed in\n\t\torder = [ [ order, dir ] ];\n\t}\n\telse if ( order.length && ! Array.isArray( order[0] ) ) {\n\t\t// Arguments passed in (list of 1D arrays)\n\t\torder = Array.prototype.slice.call( arguments );\n\t}\n\t// otherwise a 2D array was passed in\n\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tsettings.aaSorting = order.slice();\n\t} );\n} );\n\n\n/**\n * Attach a sort listener to an element for a given column\n *\n * @param {node|jQuery|string} node Identifier for the element(s) to attach the\n *   listener to. This can take the form of a single DOM node, a jQuery\n *   collection of nodes or a jQuery selector which will identify the node(s).\n * @param {integer} column the column that a click on this node will sort on\n * @param {function} [callback] callback function when sort is run\n * @returns {DataTables.Api} this\n */\n_api_register( 'order.listener()', function ( node, column, callback ) {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnSortAttachListener( settings, node, column, callback );\n\t} );\n} );\n\n\n_api_register( 'order.fixed()', function ( set ) {\n\tif ( ! set ) {\n\t\tvar ctx = this.context;\n\t\tvar fixed = ctx.length ?\n\t\t\tctx[0].aaSortingFixed :\n\t\t\tundefined;\n\n\t\treturn Array.isArray( fixed ) ?\n\t\t\t{ pre: fixed } :\n\t\t\tfixed;\n\t}\n\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tsettings.aaSortingFixed = $.extend( true, {}, set );\n\t} );\n} );\n\n\n// Order by the selected column(s)\n_api_register( [\n\t'columns().order()',\n\t'column().order()'\n], function ( dir ) {\n\tvar that = this;\n\n\treturn this.iterator( 'table', function ( settings, i ) {\n\t\tvar sort = [];\n\n\t\t$.each( that[i], function (j, col) {\n\t\t\tsort.push( [ col, dir ] );\n\t\t} );\n\n\t\tsettings.aaSorting = sort;\n\t} );\n} );\n\n\n\n_api_register( 'search()', function ( input, regex, smart, caseInsen ) {\n\tvar ctx = this.context;\n\n\tif ( input === undefined ) {\n\t\t// get\n\t\treturn ctx.length !== 0 ?\n\t\t\tctx[0].oPreviousSearch.sSearch :\n\t\t\tundefined;\n\t}\n\n\t// set\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\treturn;\n\t\t}\n\n\t\t_fnFilterComplete( settings, $.extend( {}, settings.oPreviousSearch, {\n\t\t\t\"sSearch\": input+\"\",\n\t\t\t\"bRegex\":  regex === null ? false : regex,\n\t\t\t\"bSmart\":  smart === null ? true  : smart,\n\t\t\t\"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n\t\t} ), 1 );\n\t} );\n} );\n\n\n_api_registerPlural(\n\t'columns().search()',\n\t'column().search()',\n\tfunction ( input, regex, smart, caseInsen ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\tvar preSearch = settings.aoPreSearchCols;\n\n\t\t\tif ( input === undefined ) {\n\t\t\t\t// get\n\t\t\t\treturn preSearch[ column ].sSearch;\n\t\t\t}\n\n\t\t\t// set\n\t\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$.extend( preSearch[ column ], {\n\t\t\t\t\"sSearch\": input+\"\",\n\t\t\t\t\"bRegex\":  regex === null ? false : regex,\n\t\t\t\t\"bSmart\":  smart === null ? true  : smart,\n\t\t\t\t\"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n\t\t\t} );\n\n\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch, 1 );\n\t\t} );\n\t}\n);\n\n/*\n * State API methods\n */\n\n_api_register( 'state()', function () {\n\treturn this.context.length ?\n\t\tthis.context[0].oSavedState :\n\t\tnull;\n} );\n\n\n_api_register( 'state.clear()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t// Save an empty object\n\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, {} );\n\t} );\n} );\n\n\n_api_register( 'state.loaded()', function () {\n\treturn this.context.length ?\n\t\tthis.context[0].oLoadedState :\n\t\tnull;\n} );\n\n\n_api_register( 'state.save()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnSaveState( settings );\n\t} );\n} );\n\n\n\n/**\n * Provide a common method for plug-ins to check the version of DataTables being\n * used, in order to ensure compatibility.\n *\n *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\n *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\n *  @returns {boolean} true if this version of DataTables is greater or equal to\n *    the required version, or false if this version of DataTales is not\n *    suitable\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\n */\nDataTable.versionCheck = DataTable.fnVersionCheck = function( version )\n{\n\tvar aThis = DataTable.version.split('.');\n\tvar aThat = version.split('.');\n\tvar iThis, iThat;\n\n\tfor ( var i=0, iLen=aThat.length ; i<iLen ; i++ ) {\n\t\tiThis = parseInt( aThis[i], 10 ) || 0;\n\t\tiThat = parseInt( aThat[i], 10 ) || 0;\n\n\t\t// Parts are the same, keep comparing\n\t\tif (iThis === iThat) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Parts are different, return immediately\n\t\treturn iThis > iThat;\n\t}\n\n\treturn true;\n};\n\n\n/**\n * Check if a `<table>` node is a DataTable table already or not.\n *\n *  @param {node|jquery|string} table Table node, jQuery object or jQuery\n *      selector for the table to test. Note that if more than more than one\n *      table is passed on, only the first will be checked\n *  @returns {boolean} true the table given is a DataTable, or false otherwise\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\n *      $('#example').dataTable();\n *    }\n */\nDataTable.isDataTable = DataTable.fnIsDataTable = function ( table )\n{\n\tvar t = $(table).get(0);\n\tvar is = false;\n\n\tif ( table instanceof DataTable.Api ) {\n\t\treturn true;\n\t}\n\n\t$.each( DataTable.settings, function (i, o) {\n\t\tvar head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;\n\t\tvar foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;\n\n\t\tif ( o.nTable === t || head === t || foot === t ) {\n\t\t\tis = true;\n\t\t}\n\t} );\n\n\treturn is;\n};\n\n\n/**\n * Get all DataTable tables that have been initialised - optionally you can\n * select to get only currently visible tables.\n *\n *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\n *    or visible tables only.\n *  @returns {array} Array of `table` nodes (not DataTable instances) which are\n *    DataTables\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    $.each( $.fn.dataTable.tables(true), function () {\n *      $(table).DataTable().columns.adjust();\n *    } );\n */\nDataTable.tables = DataTable.fnTables = function ( visible )\n{\n\tvar api = false;\n\n\tif ( $.isPlainObject( visible ) ) {\n\t\tapi = visible.api;\n\t\tvisible = visible.visible;\n\t}\n\n\tvar a = $.map( DataTable.settings, function (o) {\n\t\tif ( !visible || (visible && $(o.nTable).is(':visible')) ) {\n\t\t\treturn o.nTable;\n\t\t}\n\t} );\n\n\treturn api ?\n\t\tnew _Api( a ) :\n\t\ta;\n};\n\n\n/**\n * Convert from camel case parameters to Hungarian notation. This is made public\n * for the extensions to provide the same ability as DataTables core to accept\n * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\n * parameters.\n *\n *  @param {object} src The model object which holds all parameters that can be\n *    mapped.\n *  @param {object} user The object to convert from camel case to Hungarian.\n *  @param {boolean} force When set to `true`, properties which already have a\n *    Hungarian value in the `user` object will be overwritten. Otherwise they\n *    won't be.\n */\nDataTable.camelToHungarian = _fnCamelToHungarian;\n\n\n\n/**\n *\n */\n_api_register( '$()', function ( selector, opts ) {\n\tvar\n\t\trows   = this.rows( opts ).nodes(), // Get all rows\n\t\tjqRows = $(rows);\n\n\treturn $( [].concat(\n\t\tjqRows.filter( selector ).toArray(),\n\t\tjqRows.find( selector ).toArray()\n\t) );\n} );\n\n\n// jQuery functions to operate on the tables\n$.each( [ 'on', 'one', 'off' ], function (i, key) {\n\t_api_register( key+'()', function ( /* event, handler */ ) {\n\t\tvar args = Array.prototype.slice.call(arguments);\n\n\t\t// Add the `dt` namespace automatically if it isn't already present\n\t\targs[0] = $.map( args[0].split( /\\s/ ), function ( e ) {\n\t\t\treturn ! e.match(/\\.dt\\b/) ?\n\t\t\t\te+'.dt' :\n\t\t\t\te;\n\t\t\t} ).join( ' ' );\n\n\t\tvar inst = $( this.tables().nodes() );\n\t\tinst[key].apply( inst, args );\n\t\treturn this;\n\t} );\n} );\n\n\n_api_register( 'clear()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnClearTable( settings );\n\t} );\n} );\n\n\n_api_register( 'settings()', function () {\n\treturn new _Api( this.context, this.context );\n} );\n\n\n_api_register( 'init()', function () {\n\tvar ctx = this.context;\n\treturn ctx.length ? ctx[0].oInit : null;\n} );\n\n\n_api_register( 'data()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\treturn _pluck( settings.aoData, '_aData' );\n\t} ).flatten();\n} );\n\n\n_api_register( 'destroy()', function ( remove ) {\n\tremove = remove || false;\n\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tvar classes   = settings.oClasses;\n\t\tvar table     = settings.nTable;\n\t\tvar tbody     = settings.nTBody;\n\t\tvar thead     = settings.nTHead;\n\t\tvar tfoot     = settings.nTFoot;\n\t\tvar jqTable   = $(table);\n\t\tvar jqTbody   = $(tbody);\n\t\tvar jqWrapper = $(settings.nTableWrapper);\n\t\tvar rows      = $.map( settings.aoData, function (r) { return r.nTr; } );\n\t\tvar i, ien;\n\n\t\t// Flag to note that the table is currently being destroyed - no action\n\t\t// should be taken\n\t\tsettings.bDestroying = true;\n\n\t\t// Fire off the destroy callbacks for plug-ins etc\n\t\t_fnCallbackFire( settings, \"aoDestroyCallback\", \"destroy\", [settings] );\n\n\t\t// If not being removed from the document, make all columns visible\n\t\tif ( ! remove ) {\n\t\t\tnew _Api( settings ).columns().visible( true );\n\t\t}\n\n\t\t// Blitz all `DT` namespaced events (these are internal events, the\n\t\t// lowercase, `dt` events are user subscribed and they are responsible\n\t\t// for removing them\n\t\tjqWrapper.off('.DT').find(':not(tbody *)').off('.DT');\n\t\t$(window).off('.DT-'+settings.sInstance);\n\n\t\t// When scrolling we had to break the table up - restore it\n\t\tif ( table != thead.parentNode ) {\n\t\t\tjqTable.children('thead').detach();\n\t\t\tjqTable.append( thead );\n\t\t}\n\n\t\tif ( tfoot && table != tfoot.parentNode ) {\n\t\t\tjqTable.children('tfoot').detach();\n\t\t\tjqTable.append( tfoot );\n\t\t}\n\n\t\tsettings.aaSorting = [];\n\t\tsettings.aaSortingFixed = [];\n\t\t_fnSortingClasses( settings );\n\n\t\t$( rows ).removeClass( settings.asStripeClasses.join(' ') );\n\n\t\t$('th, td', thead).removeClass( classes.sSortable+' '+\n\t\t\tclasses.sSortableAsc+' '+classes.sSortableDesc+' '+classes.sSortableNone\n\t\t);\n\n\t\t// Add the TR elements back into the table in their original order\n\t\tjqTbody.children().detach();\n\t\tjqTbody.append( rows );\n\n\t\tvar orig = settings.nTableWrapper.parentNode;\n\n\t\t// Remove the DataTables generated nodes, events and classes\n\t\tvar removedMethod = remove ? 'remove' : 'detach';\n\t\tjqTable[ removedMethod ]();\n\t\tjqWrapper[ removedMethod ]();\n\n\t\t// If we need to reattach the table to the document\n\t\tif ( ! remove && orig ) {\n\t\t\t// insertBefore acts like appendChild if !arg[1]\n\t\t\torig.insertBefore( table, settings.nTableReinsertBefore );\n\n\t\t\t// Restore the width of the original table - was read from the style property,\n\t\t\t// so we can restore directly to that\n\t\t\tjqTable\n\t\t\t\t.css( 'width', settings.sDestroyWidth )\n\t\t\t\t.removeClass( classes.sTable );\n\n\t\t\t// If the were originally stripe classes - then we add them back here.\n\t\t\t// Note this is not fool proof (for example if not all rows had stripe\n\t\t\t// classes - but it's a good effort without getting carried away\n\t\t\tien = settings.asDestroyStripes.length;\n\n\t\t\tif ( ien ) {\n\t\t\t\tjqTbody.children().each( function (i) {\n\t\t\t\t\t$(this).addClass( settings.asDestroyStripes[i % ien] );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t\t/* Remove the settings object from the settings array */\n\t\tvar idx = $.inArray( settings, DataTable.settings );\n\t\tif ( idx !== -1 ) {\n\t\t\tDataTable.settings.splice( idx, 1 );\n\t\t}\n\t} );\n} );\n\n\n// Add the `every()` method for rows, columns and cells in a compact form\n$.each( [ 'column', 'row', 'cell' ], function ( i, type ) {\n\t_api_register( type+'s().every()', function ( fn ) {\n\t\tvar opts = this.selector.opts;\n\t\tvar api = this;\n\n\t\treturn this.iterator( type, function ( settings, arg1, arg2, arg3, arg4 ) {\n\t\t\t// Rows and columns:\n\t\t\t//  arg1 - index\n\t\t\t//  arg2 - table counter\n\t\t\t//  arg3 - loop counter\n\t\t\t//  arg4 - undefined\n\t\t\t// Cells:\n\t\t\t//  arg1 - row index\n\t\t\t//  arg2 - column index\n\t\t\t//  arg3 - table counter\n\t\t\t//  arg4 - loop counter\n\t\t\tfn.call(\n\t\t\t\tapi[ type ](\n\t\t\t\t\targ1,\n\t\t\t\t\ttype==='cell' ? arg2 : opts,\n\t\t\t\t\ttype==='cell' ? opts : undefined\n\t\t\t\t),\n\t\t\t\targ1, arg2, arg3, arg4\n\t\t\t);\n\t\t} );\n\t} );\n} );\n\n\n// i18n method for extensions to be able to use the language object from the\n// DataTable\n_api_register( 'i18n()', function ( token, def, plural ) {\n\tvar ctx = this.context[0];\n\tvar resolved = _fnGetObjectDataFn( token )( ctx.oLanguage );\n\n\tif ( resolved === undefined ) {\n\t\tresolved = def;\n\t}\n\n\tif ( plural !== undefined && $.isPlainObject( resolved ) ) {\n\t\tresolved = resolved[ plural ] !== undefined ?\n\t\t\tresolved[ plural ] :\n\t\t\tresolved._;\n\t}\n\n\treturn resolved.replace( '%d', plural ); // nb: plural might be undefined,\n} );\n/**\n * Version string for plug-ins to check compatibility. Allowed format is\n * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\n * only for non-release builds. See http://semver.org/ for more information.\n *  @member\n *  @type string\n *  @default Version number\n */\nDataTable.version = \"1.13.1\";\n\n/**\n * Private data store, containing all of the settings objects that are\n * created for the tables on a given page.\n *\n * Note that the `DataTable.settings` object is aliased to\n * `jQuery.fn.dataTableExt` through which it may be accessed and\n * manipulated, or `jQuery.fn.dataTable.settings`.\n *  @member\n *  @type array\n *  @default []\n *  @private\n */\nDataTable.settings = [];\n\n/**\n * Object models container, for the various models that DataTables has\n * available to it. These models define the objects that are used to hold\n * the active state and configuration of the table.\n *  @namespace\n */\nDataTable.models = {};\n\n\n\n/**\n * Template object for the way in which DataTables holds information about\n * search information for the global filter and individual column filters.\n *  @namespace\n */\nDataTable.models.oSearch = {\n\t/**\n\t * Flag to indicate if the filtering should be case insensitive or not\n\t *  @type boolean\n\t *  @default true\n\t */\n\t\"bCaseInsensitive\": true,\n\n\t/**\n\t * Applied search term\n\t *  @type string\n\t *  @default <i>Empty string</i>\n\t */\n\t\"sSearch\": \"\",\n\n\t/**\n\t * Flag to indicate if the search term should be interpreted as a\n\t * regular expression (true) or not (false) and therefore and special\n\t * regex characters escaped.\n\t *  @type boolean\n\t *  @default false\n\t */\n\t\"bRegex\": false,\n\n\t/**\n\t * Flag to indicate if DataTables is to use its smart filtering or not.\n\t *  @type boolean\n\t *  @default true\n\t */\n\t\"bSmart\": true,\n\n\t/**\n\t * Flag to indicate if DataTables should only trigger a search when\n\t * the return key is pressed.\n\t *  @type boolean\n\t *  @default false\n\t */\n\t\"return\": false\n};\n\n\n\n\n/**\n * Template object for the way in which DataTables holds information about\n * each individual row. This is the object format used for the settings\n * aoData array.\n *  @namespace\n */\nDataTable.models.oRow = {\n\t/**\n\t * TR element for the row\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTr\": null,\n\n\t/**\n\t * Array of TD elements for each row. This is null until the row has been\n\t * created.\n\t *  @type array nodes\n\t *  @default []\n\t */\n\t\"anCells\": null,\n\n\t/**\n\t * Data object from the original data source for the row. This is either\n\t * an array if using the traditional form of DataTables, or an object if\n\t * using mData options. The exact type will depend on the passed in\n\t * data from the data source, or will be an array if using DOM a data\n\t * source.\n\t *  @type array|object\n\t *  @default []\n\t */\n\t\"_aData\": [],\n\n\t/**\n\t * Sorting data cache - this array is ostensibly the same length as the\n\t * number of columns (although each index is generated only as it is\n\t * needed), and holds the data that is used for sorting each column in the\n\t * row. We do this cache generation at the start of the sort in order that\n\t * the formatting of the sort data need be done only once for each cell\n\t * per sort. This array should not be read from or written to by anything\n\t * other than the master sorting methods.\n\t *  @type array\n\t *  @default null\n\t *  @private\n\t */\n\t\"_aSortData\": null,\n\n\t/**\n\t * Per cell filtering data cache. As per the sort data cache, used to\n\t * increase the performance of the filtering in DataTables\n\t *  @type array\n\t *  @default null\n\t *  @private\n\t */\n\t\"_aFilterData\": null,\n\n\t/**\n\t * Filtering data cache. This is the same as the cell filtering cache, but\n\t * in this case a string rather than an array. This is easily computed with\n\t * a join on `_aFilterData`, but is provided as a cache so the join isn't\n\t * needed on every search (memory traded for performance)\n\t *  @type array\n\t *  @default null\n\t *  @private\n\t */\n\t\"_sFilterRow\": null,\n\n\t/**\n\t * Cache of the class name that DataTables has applied to the row, so we\n\t * can quickly look at this variable rather than needing to do a DOM check\n\t * on className for the nTr property.\n\t *  @type string\n\t *  @default <i>Empty string</i>\n\t *  @private\n\t */\n\t\"_sRowStripe\": \"\",\n\n\t/**\n\t * Denote if the original data source was from the DOM, or the data source\n\t * object. This is used for invalidating data, so DataTables can\n\t * automatically read data from the original source, unless uninstructed\n\t * otherwise.\n\t *  @type string\n\t *  @default null\n\t *  @private\n\t */\n\t\"src\": null,\n\n\t/**\n\t * Index in the aoData array. This saves an indexOf lookup when we have the\n\t * object, but want to know the index\n\t *  @type integer\n\t *  @default -1\n\t *  @private\n\t */\n\t\"idx\": -1\n};\n\n\n/**\n * Template object for the column information object in DataTables. This object\n * is held in the settings aoColumns array and contains all the information that\n * DataTables needs about each individual column.\n *\n * Note that this object is related to {@link DataTable.defaults.column}\n * but this one is the internal data store for DataTables's cache of columns.\n * It should NOT be manipulated outside of DataTables. Any configuration should\n * be done through the initialisation options.\n *  @namespace\n */\nDataTable.models.oColumn = {\n\t/**\n\t * Column index. This could be worked out on-the-fly with $.inArray, but it\n\t * is faster to just hold it as a variable\n\t *  @type integer\n\t *  @default null\n\t */\n\t\"idx\": null,\n\n\t/**\n\t * A list of the columns that sorting should occur on when this column\n\t * is sorted. That this property is an array allows multi-column sorting\n\t * to be defined for a column (for example first name / last name columns\n\t * would benefit from this). The values are integers pointing to the\n\t * columns to be sorted on (typically it will be a single integer pointing\n\t * at itself, but that doesn't need to be the case).\n\t *  @type array\n\t */\n\t\"aDataSort\": null,\n\n\t/**\n\t * Define the sorting directions that are applied to the column, in sequence\n\t * as the column is repeatedly sorted upon - i.e. the first value is used\n\t * as the sorting direction when the column if first sorted (clicked on).\n\t * Sort it again (click again) and it will move on to the next index.\n\t * Repeat until loop.\n\t *  @type array\n\t */\n\t\"asSorting\": null,\n\n\t/**\n\t * Flag to indicate if the column is searchable, and thus should be included\n\t * in the filtering or not.\n\t *  @type boolean\n\t */\n\t\"bSearchable\": null,\n\n\t/**\n\t * Flag to indicate if the column is sortable or not.\n\t *  @type boolean\n\t */\n\t\"bSortable\": null,\n\n\t/**\n\t * Flag to indicate if the column is currently visible in the table or not\n\t *  @type boolean\n\t */\n\t\"bVisible\": null,\n\n\t/**\n\t * Store for manual type assignment using the `column.type` option. This\n\t * is held in store so we can manipulate the column's `sType` property.\n\t *  @type string\n\t *  @default null\n\t *  @private\n\t */\n\t\"_sManualType\": null,\n\n\t/**\n\t * Flag to indicate if HTML5 data attributes should be used as the data\n\t * source for filtering or sorting. True is either are.\n\t *  @type boolean\n\t *  @default false\n\t *  @private\n\t */\n\t\"_bAttrSrc\": false,\n\n\t/**\n\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t * allowing you to modify the DOM element (add background colour for example) when the\n\t * element is available.\n\t *  @type function\n\t *  @param {element} nTd The TD node that has been created\n\t *  @param {*} sData The Data for the cell\n\t *  @param {array|object} oData The data for the whole row\n\t *  @param {int} iRow The row index for the aoData data store\n\t *  @default null\n\t */\n\t\"fnCreatedCell\": null,\n\n\t/**\n\t * Function to get data from a cell in a column. You should <b>never</b>\n\t * access data directly through _aData internally in DataTables - always use\n\t * the method attached to this property. It allows mData to function as\n\t * required. This function is automatically assigned by the column\n\t * initialisation method\n\t *  @type function\n\t *  @param {array|object} oData The data array/object for the array\n\t *    (i.e. aoData[]._aData)\n\t *  @param {string} sSpecific The specific data type you want to get -\n\t *    'display', 'type' 'filter' 'sort'\n\t *  @returns {*} The data for the cell from the given row's data\n\t *  @default null\n\t */\n\t\"fnGetData\": null,\n\n\t/**\n\t * Function to set data for a cell in the column. You should <b>never</b>\n\t * set the data directly to _aData internally in DataTables - always use\n\t * this method. It allows mData to function as required. This function\n\t * is automatically assigned by the column initialisation method\n\t *  @type function\n\t *  @param {array|object} oData The data array/object for the array\n\t *    (i.e. aoData[]._aData)\n\t *  @param {*} sValue Value to set\n\t *  @default null\n\t */\n\t\"fnSetData\": null,\n\n\t/**\n\t * Property to read the value for the cells in the column from the data\n\t * source array / object. If null, then the default content is used, if a\n\t * function is given then the return from the function is used.\n\t *  @type function|int|string|null\n\t *  @default null\n\t */\n\t\"mData\": null,\n\n\t/**\n\t * Partner property to mData which is used (only when defined) to get\n\t * the data - i.e. it is basically the same as mData, but without the\n\t * 'set' option, and also the data fed to it is the result from mData.\n\t * This is the rendering method to match the data method of mData.\n\t *  @type function|int|string|null\n\t *  @default null\n\t */\n\t\"mRender\": null,\n\n\t/**\n\t * Unique header TH/TD element for this column - this is what the sorting\n\t * listener is attached to (if sorting is enabled.)\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTh\": null,\n\n\t/**\n\t * Unique footer TH/TD element for this column (if there is one). Not used\n\t * in DataTables as such, but can be used for plug-ins to reference the\n\t * footer for each column.\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTf\": null,\n\n\t/**\n\t * The class to apply to all TD elements in the table's TBODY for the column\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sClass\": null,\n\n\t/**\n\t * When DataTables calculates the column widths to assign to each column,\n\t * it finds the longest string in each column and then constructs a\n\t * temporary table and reads the widths from that. The problem with this\n\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t * string - thus the calculation can go wrong (doing it properly and putting\n\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t * a \"work around\" we provide this option. It will append its value to the\n\t * text that is found to be the longest string for the column - i.e. padding.\n\t *  @type string\n\t */\n\t\"sContentPadding\": null,\n\n\t/**\n\t * Allows a default value to be given for a column's data, and will be used\n\t * whenever a null data source is encountered (this can be because mData\n\t * is set to null, or because the data source itself is null).\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sDefaultContent\": null,\n\n\t/**\n\t * Name for the column, allowing reference to the column by name as well as\n\t * by index (needs a lookup to work by name).\n\t *  @type string\n\t */\n\t\"sName\": null,\n\n\t/**\n\t * Custom sorting data type - defines which of the available plug-ins in\n\t * afnSortData the custom sorting will use - if any is defined.\n\t *  @type string\n\t *  @default std\n\t */\n\t\"sSortDataType\": 'std',\n\n\t/**\n\t * Class to be applied to the header element when sorting on this column\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sSortingClass\": null,\n\n\t/**\n\t * Class to be applied to the header element when sorting on this column -\n\t * when jQuery UI theming is used.\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sSortingClassJUI\": null,\n\n\t/**\n\t * Title of the column - what is seen in the TH element (nTh).\n\t *  @type string\n\t */\n\t\"sTitle\": null,\n\n\t/**\n\t * Column sorting and filtering type\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sType\": null,\n\n\t/**\n\t * Width of the column\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sWidth\": null,\n\n\t/**\n\t * Width of the column when it was first \"encountered\"\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sWidthOrig\": null\n};\n\n\n/*\n * Developer note: The properties of the object below are given in Hungarian\n * notation, that was used as the interface for DataTables prior to v1.10, however\n * from v1.10 onwards the primary interface is camel case. In order to avoid\n * breaking backwards compatibility utterly with this change, the Hungarian\n * version is still, internally the primary interface, but is is not documented\n * - hence the @name tags in each doc comment. This allows a Javascript function\n * to create a map from Hungarian notation to camel case (going the other direction\n * would require each property to be listed, which would add around 3K to the size\n * of DataTables, while this method is about a 0.5K hit).\n *\n * Ultimately this does pave the way for Hungarian notation to be dropped\n * completely, but that is a massive amount of work and will break current\n * installs (therefore is on-hold until v2).\n */\n\n/**\n * Initialisation options that can be given to DataTables at initialisation\n * time.\n *  @namespace\n */\nDataTable.defaults = {\n\t/**\n\t * An array of data to use for the table, passed in at initialisation which\n\t * will be used in preference to any data which is already in the DOM. This is\n\t * particularly useful for constructing tables purely in Javascript, for\n\t * example with a custom Ajax call.\n\t *  @type array\n\t *  @default null\n\t *\n\t *  @dtopt Option\n\t *  @name DataTable.defaults.data\n\t *\n\t *  @example\n\t *    // Using a 2D array data source\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"data\": [\n\t *          ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],\n\t *          ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],\n\t *        ],\n\t *        \"columns\": [\n\t *          { \"title\": \"Engine\" },\n\t *          { \"title\": \"Browser\" },\n\t *          { \"title\": \"Platform\" },\n\t *          { \"title\": \"Version\" },\n\t *          { \"title\": \"Grade\" }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using an array of objects as a data source (`data`)\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"data\": [\n\t *          {\n\t *            \"engine\":   \"Trident\",\n\t *            \"browser\":  \"Internet Explorer 4.0\",\n\t *            \"platform\": \"Win 95+\",\n\t *            \"version\":  4,\n\t *            \"grade\":    \"X\"\n\t *          },\n\t *          {\n\t *            \"engine\":   \"Trident\",\n\t *            \"browser\":  \"Internet Explorer 5.0\",\n\t *            \"platform\": \"Win 95+\",\n\t *            \"version\":  5,\n\t *            \"grade\":    \"C\"\n\t *          }\n\t *        ],\n\t *        \"columns\": [\n\t *          { \"title\": \"Engine\",   \"data\": \"engine\" },\n\t *          { \"title\": \"Browser\",  \"data\": \"browser\" },\n\t *          { \"title\": \"Platform\", \"data\": \"platform\" },\n\t *          { \"title\": \"Version\",  \"data\": \"version\" },\n\t *          { \"title\": \"Grade\",    \"data\": \"grade\" }\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"aaData\": null,\n\n\n\t/**\n\t * If ordering is enabled, then DataTables will perform a first pass sort on\n\t * initialisation. You can define which column(s) the sort is performed\n\t * upon, and the sorting direction, with this variable. The `sorting` array\n\t * should contain an array for each column to be sorted initially containing\n\t * the column's index and a direction string ('asc' or 'desc').\n\t *  @type array\n\t *  @default [[0,'asc']]\n\t *\n\t *  @dtopt Option\n\t *  @name DataTable.defaults.order\n\t *\n\t *  @example\n\t *    // Sort by 3rd column first, and then 4th column\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"order\": [[2,'asc'], [3,'desc']]\n\t *      } );\n\t *    } );\n\t *\n\t *    // No initial sorting\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"order\": []\n\t *      } );\n\t *    } );\n\t */\n\t\"aaSorting\": [[0,'asc']],\n\n\n\t/**\n\t * This parameter is basically identical to the `sorting` parameter, but\n\t * cannot be overridden by user interaction with the table. What this means\n\t * is that you could have a column (visible or hidden) which the sorting\n\t * will always be forced on first - any sorting after that (from the user)\n\t * will then be performed as required. This can be useful for grouping rows\n\t * together.\n\t *  @type array\n\t *  @default null\n\t *\n\t *  @dtopt Option\n\t *  @name DataTable.defaults.orderFixed\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"orderFixed\": [[0,'asc']]\n\t *      } );\n\t *    } )\n\t */\n\t\"aaSortingFixed\": [],\n\n\n\t/**\n\t * DataTables can be instructed to load data to display in the table from a\n\t * Ajax source. This option defines how that Ajax call is made and where to.\n\t *\n\t * The `ajax` property has three different modes of operation, depending on\n\t * how it is defined. These are:\n\t *\n\t * * `string` - Set the URL from where the data should be loaded from.\n\t * * `object` - Define properties for `jQuery.ajax`.\n\t * * `function` - Custom data get function\n\t *\n\t * `string`\n\t * --------\n\t *\n\t * As a string, the `ajax` property simply defines the URL from which\n\t * DataTables will load data.\n\t *\n\t * `object`\n\t * --------\n\t *\n\t * As an object, the parameters in the object are passed to\n\t * [jQuery.ajax](http://api.jquery.com/jQuery.ajax/) allowing fine control\n\t * of the Ajax request. DataTables has a number of default parameters which\n\t * you can override using this option. Please refer to the jQuery\n\t * documentation for a full description of the options available, although\n\t * the following parameters provide additional options in DataTables or\n\t * require special consideration:\n\t *\n\t * * `data` - As with jQuery, `data` can be provided as an object, but it\n\t *   can also be used as a function to manipulate the data DataTables sends\n\t *   to the server. The function takes a single parameter, an object of\n\t *   parameters with the values that DataTables has readied for sending. An\n\t *   object may be returned which will be merged into the DataTables\n\t *   defaults, or you can add the items to the object that was passed in and\n\t *   not return anything from the function. This supersedes `fnServerParams`\n\t *   from DataTables 1.9-.\n\t *\n\t * * `dataSrc` - By default DataTables will look for the property `data` (or\n\t *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\n\t *   from an Ajax source or for server-side processing - this parameter\n\t *   allows that property to be changed. You can use Javascript dotted\n\t *   object notation to get a data source for multiple levels of nesting, or\n\t *   it my be used as a function. As a function it takes a single parameter,\n\t *   the JSON returned from the server, which can be manipulated as\n\t *   required, with the returned value being that used by DataTables as the\n\t *   data source for the table. This supersedes `sAjaxDataProp` from\n\t *   DataTables 1.9-.\n\t *\n\t * * `success` - Should not be overridden it is used internally in\n\t *   DataTables. To manipulate / transform the data returned by the server\n\t *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\n\t *\n\t * `function`\n\t * ----------\n\t *\n\t * As a function, making the Ajax call is left up to yourself allowing\n\t * complete control of the Ajax request. Indeed, if desired, a method other\n\t * than Ajax could be used to obtain the required data, such as Web storage\n\t * or an AIR database.\n\t *\n\t * The function is given four parameters and no return is required. The\n\t * parameters are:\n\t *\n\t * 1. _object_ - Data to send to the server\n\t * 2. _function_ - Callback function that must be executed when the required\n\t *    data has been obtained. That data should be passed into the callback\n\t *    as the only parameter\n\t * 3. _object_ - DataTables settings object for the table\n\t *\n\t * Note that this supersedes `fnServerData` from DataTables 1.9-.\n\t *\n\t *  @type string|object|function\n\t *  @default null\n\t *\n\t *  @dtopt Option\n\t *  @name DataTable.defaults.ajax\n\t *  @since 1.10.0\n\t *\n\t * @example\n\t *   // Get JSON data from a file via Ajax.\n\t *   // Note DataTables expects data in the form `{ data: [ ...data... ] }` by default).\n\t *   $('#example').dataTable( {\n\t *     \"ajax\": \"data.json\"\n\t *   } );\n\t *\n\t * @example\n\t *   // Get JSON data from a file via Ajax, using `dataSrc` to change\n\t *   // `data` to `tableData` (i.e. `{ tableData: [ ...data... ] }`)\n\t *   $('#example').dataTable( {\n\t *     \"ajax\": {\n\t *       \"url\": \"data.json\",\n\t *       \"dataSrc\": \"tableData\"\n\t *     }\n\t *   } );\n\t *\n\t * @example\n\t *   // Get JSON data from a file via Ajax, using `dataSrc` to read data\n\t *   // from a plain array rather than an array in an object\n\t *   $('#example').dataTable( {\n\t *     \"ajax\": {\n\t *       \"url\": \"data.json\",\n\t *       \"dataSrc\": \"\"\n\t *     }\n\t *   } );\n\t *\n\t * @example\n\t *   // Manipulate the data returned from the server - add a link to data\n\t *   // (note this can, should, be done using `render` for the column - this\n\t *   // is just a simple example of how the data can be manipulated).\n\t *   $('#example').dataTable( {\n\t *     \"ajax\": {\n\t *       \"url\": \"data.json\",\n\t *       \"dataSrc\": function ( json ) {\n\t *         for ( var i=0, ien=json.length ; i<ien ; i++ ) {\n\t *           json[i][0] = '<a href=\"/message/'+json[i][0]+'>View message</a>';\n\t *         }\n\t *         return json;\n\t *       }\n\t *     }\n\t *   } );\n\t *\n\t * @example\n\t *   // Add data to the request\n\t *   $('#example').dataTable( {\n\t *     \"ajax\": {\n\t *       \"url\": \"data.json\",\n\t *       \"data\": function ( d ) {\n\t *         return {\n\t *           \"extra_search\": $('#extra').val()\n\t *         };\n\t *       }\n\t *     }\n\t *   } );\n\t *\n\t * @example\n\t *   // Send request as POST\n\t *   $('#example').dataTable( {\n\t *     \"ajax\": {\n\t *       \"url\": \"data.json\",\n\t *       \"type\": \"POST\"\n\t *     }\n\t *   } );\n\t *\n\t * @example\n\t *   // Get the data from localStorage (could interface with a form for\n\t *   // adding, editing and removing rows).\n\t *   $('#example').dataTable( {\n\t *     \"ajax\": function (data, callback, settings) {\n\t *       callback(\n\t *         JSON.parse( localStorage.getItem('dataTablesData') )\n\t *       );\n\t *     }\n\t *   } );\n\t */\n\t\"ajax\": null,\n\n\n\t/**\n\t * This parameter allows you to readily specify the entries in the length drop\n\t * down menu that DataTables shows when pagination is enabled. It can be\n\t * either a 1D array of options which will be used for both the displayed\n\t * option and the value, or a 2D array which will use the array in the first\n\t * position as the value, and the array in the second position as the\n\t * displayed options (useful for language strings such as 'All').\n\t *\n\t * Note that the `pageLength` property will be automatically set to the\n\t * first value given in this array, unless `pageLength` is also provided.\n\t *  @type array\n\t *  @default [ 10, 25, 50, 100 ]\n\t *\n\t *  @dtopt Option\n\t *  @name DataTable.defaults.lengthMenu\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"lengthMenu\": [[10, 25, 50, -1], [10, 25, 50, \"All\"]]\n\t *      } );\n\t *    } );\n\t */\n\t\"aLengthMenu\": [ 10, 25, 50, 100 ],\n\n\n\t/**\n\t * The `columns` option in the initialisation parameter allows you to define\n\t * details about the way individual columns behave. For a full list of\n\t * column options that can be set, please see\n\t * {@link DataTable.defaults.column}. Note that if you use `columns` to\n\t * define your columns, you must have an entry in the array for every single\n\t * column that you have in your table (these can be null if you don't which\n\t * to specify any options).\n\t *  @member\n\t *\n\t *  @name DataTable.defaults.column\n\t */\n\t\"aoColumns\": null,\n\n\t/**\n\t * Very similar to `columns`, `columnDefs` allows you to target a specific\n\t * column, multiple columns, or all columns, using the `targets` property of\n\t * each object in the array. This allows great flexibility when creating\n\t * tables, as the `columnDefs` arrays can be of any length, targeting the\n\t * columns you specifically want. `columnDefs` may use any of the column\n\t * options available: {@link DataTable.defaults.column}, but it _must_\n\t * have `targets` defined in each object in the array. Values in the `targets`\n\t * array may be:\n\t *   <ul>\n\t *     <li>a string - class name will be matched on the TH for the column</li>\n\t *     <li>0 or a positive integer - column index counting from the left</li>\n\t *     <li>a negative integer - column index counting from the right</li>\n\t *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\n\t *   </ul>\n\t *  @member\n\t *\n\t *  @name DataTable.defaults.columnDefs\n\t */\n\t\"aoColumnDefs\": null,\n\n\n\t/**\n\t * Basically the same as `search`, this parameter defines the individual column\n\t * filtering state at initialisation time. The array must be of the same size\n\t * as the number of columns, and each element be an object with the parameters\n\t * `search` and `escapeRegex` (the latter is optional). 'null' is also\n\t * accepted and the default will be used.\n\t *  @type array\n\t *  @default []\n\t *\n\t *  @dtopt Option\n\t *  @name DataTable.defaults.searchCols\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"searchCols\": [\n\t *          null,\n\t *          { \"search\": \"My filter\" },\n\t *          null,\n\t *          { \"search\": \"^[0-9]\", \"escapeRegex\": false }\n\t *        ]\n\t *      } );\n\t *    } )\n\t */\n\t\"aoSearchCols\": [],\n\n\n\t/**\n\t * An array of CSS classes that should be applied to displayed rows. This\n\t * array may be of any length, and DataTables will apply each class\n\t * sequentially, looping when required.\n\t *  @type array\n\t *  @default null <i>Will take the values determined by the `oClasses.stripe*`\n\t *    options</i>\n\t *\n\t *  @dtopt Option\n\t *  @name DataTable.defaults.stripeClasses\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"stripeClasses\": [ 'strip1', 'strip2', 'strip3' ]\n\t *      } );\n\t *    } )\n\t */\n\t\"asStripeClasses\": null,\n\n\n\t/**\n\t * Enable or disable automatic column width calculation. This can be disabled\n\t * as an optimisation (it takes some time to calculate the widths) if the\n\t * tables widths are passed in using `columns`.\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.autoWidth\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"autoWidth\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bAutoWidth\": true,\n\n\n\t/**\n\t * Deferred rendering can provide DataTables with a huge speed boost when you\n\t * are using an Ajax or JS data source for the table. This option, when set to\n\t * true, will cause DataTables to defer the creation of the table elements for\n\t * each row until they are needed for a draw - saving a significant amount of\n\t * time.\n\t *  @type boolean\n\t *  @default false\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.deferRender\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"ajax\": \"sources/arrays.txt\",\n\t *        \"deferRender\": true\n\t *      } );\n\t *    } );\n\t */\n\t\"bDeferRender\": false,\n\n\n\t/**\n\t * Replace a DataTable which matches the given selector and replace it with\n\t * one which has the properties of the new initialisation object passed. If no\n\t * table matches the selector, then the new DataTable will be constructed as\n\t * per normal.\n\t *  @type boolean\n\t *  @default false\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.destroy\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"srollY\": \"200px\",\n\t *        \"paginate\": false\n\t *      } );\n\t *\n\t *      // Some time later....\n\t *      $('#example').dataTable( {\n\t *        \"filter\": false,\n\t *        \"destroy\": true\n\t *      } );\n\t *    } );\n\t */\n\t\"bDestroy\": false,\n\n\n\t/**\n\t * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\n\t * that it allows the end user to input multiple words (space separated) and\n\t * will match a row containing those words, even if not in the order that was\n\t * specified (this allow matching across multiple columns). Note that if you\n\t * wish to use filtering in DataTables this must remain 'true' - to remove the\n\t * default filtering input box and retain filtering abilities, please use\n\t * {@link DataTable.defaults.dom}.\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.searching\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"searching\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bFilter\": true,\n\n\n\t/**\n\t * Enable or disable the table information display. This shows information\n\t * about the data that is currently visible on the page, including information\n\t * about filtered data if that action is being performed.\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.info\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"info\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bInfo\": true,\n\n\n\t/**\n\t * Allows the end user to select the size of a formatted page from a select\n\t * menu (sizes are 10, 25, 50 and 100). Requires pagination (`paginate`).\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.lengthChange\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"lengthChange\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bLengthChange\": true,\n\n\n\t/**\n\t * Enable or disable pagination.\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.paging\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"paging\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bPaginate\": true,\n\n\n\t/**\n\t * Enable or disable the display of a 'processing' indicator when the table is\n\t * being processed (e.g. a sort). This is particularly useful for tables with\n\t * large amounts of data where it can take a noticeable amount of time to sort\n\t * the entries.\n\t *  @type boolean\n\t *  @default false\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.processing\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"processing\": true\n\t *      } );\n\t *    } );\n\t */\n\t\"bProcessing\": false,\n\n\n\t/**\n\t * Retrieve the DataTables object for the given selector. Note that if the\n\t * table has already been initialised, this parameter will cause DataTables\n\t * to simply return the object that has already been set up - it will not take\n\t * account of any changes you might have made to the initialisation object\n\t * passed to DataTables (setting this parameter to true is an acknowledgement\n\t * that you understand this). `destroy` can be used to reinitialise a table if\n\t * you need.\n\t *  @type boolean\n\t *  @default false\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.retrieve\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      initTable();\n\t *      tableActions();\n\t *    } );\n\t *\n\t *    function initTable ()\n\t *    {\n\t *      return $('#example').dataTable( {\n\t *        \"scrollY\": \"200px\",\n\t *        \"paginate\": false,\n\t *        \"retrieve\": true\n\t *      } );\n\t *    }\n\t *\n\t *    function tableActions ()\n\t *    {\n\t *      var table = initTable();\n\t *      // perform API operations with oTable\n\t *    }\n\t */\n\t\"bRetrieve\": false,\n\n\n\t/**\n\t * When vertical (y) scrolling is enabled, DataTables will force the height of\n\t * the table's viewport to the given height at all times (useful for layout).\n\t * However, this can look odd when filtering data down to a small data set,\n\t * and the footer is left \"floating\" further down. This parameter (when\n\t * enabled) will cause DataTables to collapse the table's viewport down when\n\t * the result set will fit within the given Y height.\n\t *  @type boolean\n\t *  @default false\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.scrollCollapse\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"scrollY\": \"200\",\n\t *        \"scrollCollapse\": true\n\t *      } );\n\t *    } );\n\t */\n\t\"bScrollCollapse\": false,\n\n\n\t/**\n\t * Configure DataTables to use server-side processing. Note that the\n\t * `ajax` parameter must also be given in order to give DataTables a\n\t * source to obtain the required data for each draw.\n\t *  @type boolean\n\t *  @default false\n\t *\n\t *  @dtopt Features\n\t *  @dtopt Server-side\n\t *  @name DataTable.defaults.serverSide\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"serverSide\": true,\n\t *        \"ajax\": \"xhr.php\"\n\t *      } );\n\t *    } );\n\t */\n\t\"bServerSide\": false,\n\n\n\t/**\n\t * Enable or disable sorting of columns. Sorting of individual columns can be\n\t * disabled by the `sortable` option for each column.\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.ordering\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"ordering\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bSort\": true,\n\n\n\t/**\n\t * Enable or display DataTables' ability to sort multiple columns at the\n\t * same time (activated by shift-click by the user).\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.orderMulti\n\t *\n\t *  @example\n\t *    // Disable multiple column sorting ability\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"orderMulti\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bSortMulti\": true,\n\n\n\t/**\n\t * Allows control over whether DataTables should use the top (true) unique\n\t * cell that is found for a single column, or the bottom (false - default).\n\t * This is useful when using complex headers.\n\t *  @type boolean\n\t *  @default false\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.orderCellsTop\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"orderCellsTop\": true\n\t *      } );\n\t *    } );\n\t */\n\t\"bSortCellsTop\": false,\n\n\n\t/**\n\t * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\n\t * `sorting\\_3` to the columns which are currently being sorted on. This is\n\t * presented as a feature switch as it can increase processing time (while\n\t * classes are removed and added) so for large data sets you might want to\n\t * turn this off.\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.orderClasses\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"orderClasses\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bSortClasses\": true,\n\n\n\t/**\n\t * Enable or disable state saving. When enabled HTML5 `localStorage` will be\n\t * used to save table display information such as pagination information,\n\t * display length, filtering and sorting. As such when the end user reloads\n\t * the page the display display will match what thy had previously set up.\n\t *\n\t * Due to the use of `localStorage` the default state saving is not supported\n\t * in IE6 or 7. If state saving is required in those browsers, use\n\t * `stateSaveCallback` to provide a storage solution such as cookies.\n\t *  @type boolean\n\t *  @default false\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.stateSave\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"stateSave\": true\n\t *      } );\n\t *    } );\n\t */\n\t\"bStateSave\": false,\n\n\n\t/**\n\t * This function is called when a TR element is created (and all TD child\n\t * elements have been inserted), or registered if using a DOM source, allowing\n\t * manipulation of the TR element (adding classes etc).\n\t *  @type function\n\t *  @param {node} row \"TR\" element for the current row\n\t *  @param {array} data Raw data array for this row\n\t *  @param {int} dataIndex The index of this row in the internal aoData array\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.createdRow\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"createdRow\": function( row, data, dataIndex ) {\n\t *          // Bold the grade for all 'A' grade browsers\n\t *          if ( data[4] == \"A\" )\n\t *          {\n\t *            $('td:eq(4)', row).html( '<b>A</b>' );\n\t *          }\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnCreatedRow\": null,\n\n\n\t/**\n\t * This function is called on every 'draw' event, and allows you to\n\t * dynamically modify any aspect you want about the created DOM.\n\t *  @type function\n\t *  @param {object} settings DataTables settings object\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.drawCallback\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"drawCallback\": function( settings ) {\n\t *          alert( 'DataTables has redrawn the table' );\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnDrawCallback\": null,\n\n\n\t/**\n\t * Identical to fnHeaderCallback() but for the table footer this function\n\t * allows you to modify the table footer on every 'draw' event.\n\t *  @type function\n\t *  @param {node} foot \"TR\" element for the footer\n\t *  @param {array} data Full table data (as derived from the original HTML)\n\t *  @param {int} start Index for the current display starting point in the\n\t *    display array\n\t *  @param {int} end Index for the current display ending point in the\n\t *    display array\n\t *  @param {array int} display Index array to translate the visual position\n\t *    to the full data array\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.footerCallback\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"footerCallback\": function( tfoot, data, start, end, display ) {\n\t *          tfoot.getElementsByTagName('th')[0].innerHTML = \"Starting index is \"+start;\n\t *        }\n\t *      } );\n\t *    } )\n\t */\n\t\"fnFooterCallback\": null,\n\n\n\t/**\n\t * When rendering large numbers in the information element for the table\n\t * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\n\t * to have a comma separator for the 'thousands' units (e.g. 1 million is\n\t * rendered as \"1,000,000\") to help readability for the end user. This\n\t * function will override the default method DataTables uses.\n\t *  @type function\n\t *  @member\n\t *  @param {int} toFormat number to be formatted\n\t *  @returns {string} formatted string for DataTables to show the number\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.formatNumber\n\t *\n\t *  @example\n\t *    // Format a number using a single quote for the separator (note that\n\t *    // this can also be done with the language.thousands option)\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"formatNumber\": function ( toFormat ) {\n\t *          return toFormat.toString().replace(\n\t *            /\\B(?=(\\d{3})+(?!\\d))/g, \"'\"\n\t *          );\n\t *        };\n\t *      } );\n\t *    } );\n\t */\n\t\"fnFormatNumber\": function ( toFormat ) {\n\t\treturn toFormat.toString().replace(\n\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g,\n\t\t\tthis.oLanguage.sThousands\n\t\t);\n\t},\n\n\n\t/**\n\t * This function is called on every 'draw' event, and allows you to\n\t * dynamically modify the header row. This can be used to calculate and\n\t * display useful information about the table.\n\t *  @type function\n\t *  @param {node} head \"TR\" element for the header\n\t *  @param {array} data Full table data (as derived from the original HTML)\n\t *  @param {int} start Index for the current display starting point in the\n\t *    display array\n\t *  @param {int} end Index for the current display ending point in the\n\t *    display array\n\t *  @param {array int} display Index array to translate the visual position\n\t *    to the full data array\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.headerCallback\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"fheaderCallback\": function( head, data, start, end, display ) {\n\t *          head.getElementsByTagName('th')[0].innerHTML = \"Displaying \"+(end-start)+\" records\";\n\t *        }\n\t *      } );\n\t *    } )\n\t */\n\t\"fnHeaderCallback\": null,\n\n\n\t/**\n\t * The information element can be used to convey information about the current\n\t * state of the table. Although the internationalisation options presented by\n\t * DataTables are quite capable of dealing with most customisations, there may\n\t * be times where you wish to customise the string further. This callback\n\t * allows you to do exactly that.\n\t *  @type function\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {int} start Starting position in data for the draw\n\t *  @param {int} end End position in data for the draw\n\t *  @param {int} max Total number of rows in the table (regardless of\n\t *    filtering)\n\t *  @param {int} total Total number of rows in the data set, after filtering\n\t *  @param {string} pre The string that DataTables has formatted using it's\n\t *    own rules\n\t *  @returns {string} The string to be displayed in the information element.\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.infoCallback\n\t *\n\t *  @example\n\t *    $('#example').dataTable( {\n\t *      \"infoCallback\": function( settings, start, end, max, total, pre ) {\n\t *        return start +\" to \"+ end;\n\t *      }\n\t *    } );\n\t */\n\t\"fnInfoCallback\": null,\n\n\n\t/**\n\t * Called when the table has been initialised. Normally DataTables will\n\t * initialise sequentially and there will be no need for this function,\n\t * however, this does not hold true when using external language information\n\t * since that is obtained using an async XHR call.\n\t *  @type function\n\t *  @param {object} settings DataTables settings object\n\t *  @param {object} json The JSON object request from the server - only\n\t *    present if client-side Ajax sourced data is used\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.initComplete\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"initComplete\": function(settings, json) {\n\t *          alert( 'DataTables has finished its initialisation.' );\n\t *        }\n\t *      } );\n\t *    } )\n\t */\n\t\"fnInitComplete\": null,\n\n\n\t/**\n\t * Called at the very start of each table draw and can be used to cancel the\n\t * draw by returning false, any other return (including undefined) results in\n\t * the full draw occurring).\n\t *  @type function\n\t *  @param {object} settings DataTables settings object\n\t *  @returns {boolean} False will cancel the draw, anything else (including no\n\t *    return) will allow it to complete.\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.preDrawCallback\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"preDrawCallback\": function( settings ) {\n\t *          if ( $('#test').val() == 1 ) {\n\t *            return false;\n\t *          }\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnPreDrawCallback\": null,\n\n\n\t/**\n\t * This function allows you to 'post process' each row after it have been\n\t * generated for each table draw, but before it is rendered on screen. This\n\t * function might be used for setting the row class name etc.\n\t *  @type function\n\t *  @param {node} row \"TR\" element for the current row\n\t *  @param {array} data Raw data array for this row\n\t *  @param {int} displayIndex The display index for the current table draw\n\t *  @param {int} displayIndexFull The index of the data in the full list of\n\t *    rows (after filtering)\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.rowCallback\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"rowCallback\": function( row, data, displayIndex, displayIndexFull ) {\n\t *          // Bold the grade for all 'A' grade browsers\n\t *          if ( data[4] == \"A\" ) {\n\t *            $('td:eq(4)', row).html( '<b>A</b>' );\n\t *          }\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnRowCallback\": null,\n\n\n\t/**\n\t * __Deprecated__ The functionality provided by this parameter has now been\n\t * superseded by that provided through `ajax`, which should be used instead.\n\t *\n\t * This parameter allows you to override the default function which obtains\n\t * the data from the server so something more suitable for your application.\n\t * For example you could use POST data, or pull information from a Gears or\n\t * AIR database.\n\t *  @type function\n\t *  @member\n\t *  @param {string} source HTTP source to obtain the data from (`ajax`)\n\t *  @param {array} data A key/value pair object containing the data to send\n\t *    to the server\n\t *  @param {function} callback to be called on completion of the data get\n\t *    process that will draw the data on the page.\n\t *  @param {object} settings DataTables settings object\n\t *\n\t *  @dtopt Callbacks\n\t *  @dtopt Server-side\n\t *  @name DataTable.defaults.serverData\n\t *\n\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t */\n\t\"fnServerData\": null,\n\n\n\t/**\n\t * __Deprecated__ The functionality provided by this parameter has now been\n\t * superseded by that provided through `ajax`, which should be used instead.\n\t *\n\t *  It is often useful to send extra data to the server when making an Ajax\n\t * request - for example custom filtering information, and this callback\n\t * function makes it trivial to send extra information to the server. The\n\t * passed in parameter is the data set that has been constructed by\n\t * DataTables, and you can add to this or modify it as you require.\n\t *  @type function\n\t *  @param {array} data Data array (array of objects which are name/value\n\t *    pairs) that has been constructed by DataTables and will be sent to the\n\t *    server. In the case of Ajax sourced data with server-side processing\n\t *    this will be an empty array, for server-side processing there will be a\n\t *    significant number of parameters!\n\t *  @returns {undefined} Ensure that you modify the data array passed in,\n\t *    as this is passed by reference.\n\t *\n\t *  @dtopt Callbacks\n\t *  @dtopt Server-side\n\t *  @name DataTable.defaults.serverParams\n\t *\n\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t */\n\t\"fnServerParams\": null,\n\n\n\t/**\n\t * Load the table state. With this function you can define from where, and how, the\n\t * state of a table is loaded. By default DataTables will load from `localStorage`\n\t * but you might wish to use a server-side database or cookies.\n\t *  @type function\n\t *  @member\n\t *  @param {object} settings DataTables settings object\n\t *  @param {object} callback Callback that can be executed when done. It\n\t *    should be passed the loaded state object.\n\t *  @return {object} The DataTables state object to be loaded\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.stateLoadCallback\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"stateSave\": true,\n\t *        \"stateLoadCallback\": function (settings, callback) {\n\t *          $.ajax( {\n\t *            \"url\": \"/state_load\",\n\t *            \"dataType\": \"json\",\n\t *            \"success\": function (json) {\n\t *              callback( json );\n\t *            }\n\t *          } );\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnStateLoadCallback\": function ( settings ) {\n\t\ttry {\n\t\t\treturn JSON.parse(\n\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(\n\t\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname\n\t\t\t\t)\n\t\t\t);\n\t\t} catch (e) {\n\t\t\treturn {};\n\t\t}\n\t},\n\n\n\t/**\n\t * Callback which allows modification of the saved state prior to loading that state.\n\t * This callback is called when the table is loading state from the stored data, but\n\t * prior to the settings object being modified by the saved state. Note that for\n\t * plug-in authors, you should use the `stateLoadParams` event to load parameters for\n\t * a plug-in.\n\t *  @type function\n\t *  @param {object} settings DataTables settings object\n\t *  @param {object} data The state object that is to be loaded\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.stateLoadParams\n\t *\n\t *  @example\n\t *    // Remove a saved filter, so filtering is never loaded\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"stateSave\": true,\n\t *        \"stateLoadParams\": function (settings, data) {\n\t *          data.oSearch.sSearch = \"\";\n\t *        }\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Disallow state loading by returning false\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"stateSave\": true,\n\t *        \"stateLoadParams\": function (settings, data) {\n\t *          return false;\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnStateLoadParams\": null,\n\n\n\t/**\n\t * Callback that is called when the state has been loaded from the state saving method\n\t * and the DataTables settings object has been modified as a result of the loaded state.\n\t *  @type function\n\t *  @param {object} settings DataTables settings object\n\t *  @param {object} data The state object that was loaded\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.stateLoaded\n\t *\n\t *  @example\n\t *    // Show an alert with the filtering value that was saved\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"stateSave\": true,\n\t *        \"stateLoaded\": function (settings, data) {\n\t *          alert( 'Saved filter was: '+data.oSearch.sSearch );\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnStateLoaded\": null,\n\n\n\t/**\n\t * Save the table state. This function allows you to define where and how the state\n\t * information for the table is stored By default DataTables will use `localStorage`\n\t * but you might wish to use a server-side database or cookies.\n\t *  @type function\n\t *  @member\n\t *  @param {object} settings DataTables settings object\n\t *  @param {object} data The state object to be saved\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.stateSaveCallback\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"stateSave\": true,\n\t *        \"stateSaveCallback\": function (settings, data) {\n\t *          // Send an Ajax request to the server with the state object\n\t *          $.ajax( {\n\t *            \"url\": \"/state_save\",\n\t *            \"data\": data,\n\t *            \"dataType\": \"json\",\n\t *            \"method\": \"POST\"\n\t *            \"success\": function () {}\n\t *          } );\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnStateSaveCallback\": function ( settings, data ) {\n\t\ttry {\n\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(\n\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname,\n\t\t\t\tJSON.stringify( data )\n\t\t\t);\n\t\t} catch (e) {}\n\t},\n\n\n\t/**\n\t * Callback which allows modification of the state to be saved. Called when the table\n\t * has changed state a new state save is required. This method allows modification of\n\t * the state saving object prior to actually doing the save, including addition or\n\t * other state properties or modification. Note that for plug-in authors, you should\n\t * use the `stateSaveParams` event to save parameters for a plug-in.\n\t *  @type function\n\t *  @param {object} settings DataTables settings object\n\t *  @param {object} data The state object to be saved\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.stateSaveParams\n\t *\n\t *  @example\n\t *    // Remove a saved filter, so filtering is never saved\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"stateSave\": true,\n\t *        \"stateSaveParams\": function (settings, data) {\n\t *          data.oSearch.sSearch = \"\";\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnStateSaveParams\": null,\n\n\n\t/**\n\t * Duration for which the saved state information is considered valid. After this period\n\t * has elapsed the state will be returned to the default.\n\t * Value is given in seconds.\n\t *  @type int\n\t *  @default 7200 <i>(2 hours)</i>\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.stateDuration\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"stateDuration\": 60*60*24; // 1 day\n\t *      } );\n\t *    } )\n\t */\n\t\"iStateDuration\": 7200,\n\n\n\t/**\n\t * When enabled DataTables will not make a request to the server for the first\n\t * page draw - rather it will use the data already on the page (no sorting etc\n\t * will be applied to it), thus saving on an XHR at load time. `deferLoading`\n\t * is used to indicate that deferred loading is required, but it is also used\n\t * to tell DataTables how many records there are in the full table (allowing\n\t * the information element and pagination to be displayed correctly). In the case\n\t * where a filtering is applied to the table on initial load, this can be\n\t * indicated by giving the parameter as an array, where the first element is\n\t * the number of records available after filtering and the second element is the\n\t * number of records without filtering (allowing the table information element\n\t * to be shown correctly).\n\t *  @type int | array\n\t *  @default null\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.deferLoading\n\t *\n\t *  @example\n\t *    // 57 records available in the table, no filtering applied\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"serverSide\": true,\n\t *        \"ajax\": \"scripts/server_processing.php\",\n\t *        \"deferLoading\": 57\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // 57 records after filtering, 100 without filtering (an initial filter applied)\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"serverSide\": true,\n\t *        \"ajax\": \"scripts/server_processing.php\",\n\t *        \"deferLoading\": [ 57, 100 ],\n\t *        \"search\": {\n\t *          \"search\": \"my_filter\"\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"iDeferLoading\": null,\n\n\n\t/**\n\t * Number of rows to display on a single page when using pagination. If\n\t * feature enabled (`lengthChange`) then the end user will be able to override\n\t * this to a custom setting using a pop-up menu.\n\t *  @type int\n\t *  @default 10\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.pageLength\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"pageLength\": 50\n\t *      } );\n\t *    } )\n\t */\n\t\"iDisplayLength\": 10,\n\n\n\t/**\n\t * Define the starting point for data display when using DataTables with\n\t * pagination. Note that this parameter is the number of records, rather than\n\t * the page number, so if you have 10 records per page and want to start on\n\t * the third page, it should be \"20\".\n\t *  @type int\n\t *  @default 0\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.displayStart\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"displayStart\": 20\n\t *      } );\n\t *    } )\n\t */\n\t\"iDisplayStart\": 0,\n\n\n\t/**\n\t * By default DataTables allows keyboard navigation of the table (sorting, paging,\n\t * and filtering) by adding a `tabindex` attribute to the required elements. This\n\t * allows you to tab through the controls and press the enter key to activate them.\n\t * The tabindex is default 0, meaning that the tab follows the flow of the document.\n\t * You can overrule this using this parameter if you wish. Use a value of -1 to\n\t * disable built-in keyboard navigation.\n\t *  @type int\n\t *  @default 0\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.tabIndex\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"tabIndex\": 1\n\t *      } );\n\t *    } );\n\t */\n\t\"iTabIndex\": 0,\n\n\n\t/**\n\t * Classes that DataTables assigns to the various components and features\n\t * that it adds to the HTML table. This allows classes to be configured\n\t * during initialisation in addition to through the static\n\t * {@link DataTable.ext.oStdClasses} object).\n\t *  @namespace\n\t *  @name DataTable.defaults.classes\n\t */\n\t\"oClasses\": {},\n\n\n\t/**\n\t * All strings that DataTables uses in the user interface that it creates\n\t * are defined in this object, allowing you to modified them individually or\n\t * completely replace them all as required.\n\t *  @namespace\n\t *  @name DataTable.defaults.language\n\t */\n\t\"oLanguage\": {\n\t\t/**\n\t\t * Strings that are used for WAI-ARIA labels and controls only (these are not\n\t\t * actually visible on the page, but will be read by screenreaders, and thus\n\t\t * must be internationalised as well).\n\t\t *  @namespace\n\t\t *  @name DataTable.defaults.language.aria\n\t\t */\n\t\t\"oAria\": {\n\t\t\t/**\n\t\t\t * ARIA label that is added to the table headers when the column may be\n\t\t\t * sorted ascending by activing the column (click or return when focused).\n\t\t\t * Note that the column header is prefixed to this string.\n\t\t\t *  @type string\n\t\t\t *  @default : activate to sort column ascending\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.aria.sortAscending\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"aria\": {\n\t\t\t *            \"sortAscending\": \" - click/return to sort ascending\"\n\t\t\t *          }\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sSortAscending\": \": activate to sort column ascending\",\n\n\t\t\t/**\n\t\t\t * ARIA label that is added to the table headers when the column may be\n\t\t\t * sorted descending by activing the column (click or return when focused).\n\t\t\t * Note that the column header is prefixed to this string.\n\t\t\t *  @type string\n\t\t\t *  @default : activate to sort column ascending\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.aria.sortDescending\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"aria\": {\n\t\t\t *            \"sortDescending\": \" - click/return to sort descending\"\n\t\t\t *          }\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sSortDescending\": \": activate to sort column descending\"\n\t\t},\n\n\t\t/**\n\t\t * Pagination string used by DataTables for the built-in pagination\n\t\t * control types.\n\t\t *  @namespace\n\t\t *  @name DataTable.defaults.language.paginate\n\t\t */\n\t\t\"oPaginate\": {\n\t\t\t/**\n\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\n\t\t\t * button to take the user to the first page.\n\t\t\t *  @type string\n\t\t\t *  @default First\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.paginate.first\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"paginate\": {\n\t\t\t *            \"first\": \"First page\"\n\t\t\t *          }\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sFirst\": \"First\",\n\n\n\t\t\t/**\n\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\n\t\t\t * button to take the user to the last page.\n\t\t\t *  @type string\n\t\t\t *  @default Last\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.paginate.last\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"paginate\": {\n\t\t\t *            \"last\": \"Last page\"\n\t\t\t *          }\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sLast\": \"Last\",\n\n\n\t\t\t/**\n\t\t\t * Text to use for the 'next' pagination button (to take the user to the\n\t\t\t * next page).\n\t\t\t *  @type string\n\t\t\t *  @default Next\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.paginate.next\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"paginate\": {\n\t\t\t *            \"next\": \"Next page\"\n\t\t\t *          }\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sNext\": \"Next\",\n\n\n\t\t\t/**\n\t\t\t * Text to use for the 'previous' pagination button (to take the user to\n\t\t\t * the previous page).\n\t\t\t *  @type string\n\t\t\t *  @default Previous\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.paginate.previous\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"paginate\": {\n\t\t\t *            \"previous\": \"Previous page\"\n\t\t\t *          }\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sPrevious\": \"Previous\"\n\t\t},\n\n\t\t/**\n\t\t * This string is shown in preference to `zeroRecords` when the table is\n\t\t * empty of data (regardless of filtering). Note that this is an optional\n\t\t * parameter - if it is not given, the value of `zeroRecords` will be used\n\t\t * instead (either the default or given value).\n\t\t *  @type string\n\t\t *  @default No data available in table\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.emptyTable\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"emptyTable\": \"No data available in table\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sEmptyTable\": \"No data available in table\",\n\n\n\t\t/**\n\t\t * This string gives information to the end user about the information\n\t\t * that is current on display on the page. The following tokens can be\n\t\t * used in the string and will be dynamically replaced as the table\n\t\t * display updates. This tokens can be placed anywhere in the string, or\n\t\t * removed as needed by the language requires:\n\t\t *\n\t\t * * `\\_START\\_` - Display index of the first record on the current page\n\t\t * * `\\_END\\_` - Display index of the last record on the current page\n\t\t * * `\\_TOTAL\\_` - Number of records in the table after filtering\n\t\t * * `\\_MAX\\_` - Number of records in the table without filtering\n\t\t * * `\\_PAGE\\_` - Current page number\n\t\t * * `\\_PAGES\\_` - Total number of pages of data in the table\n\t\t *\n\t\t *  @type string\n\t\t *  @default Showing _START_ to _END_ of _TOTAL_ entries\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.info\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"info\": \"Showing page _PAGE_ of _PAGES_\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ entries\",\n\n\n\t\t/**\n\t\t * Display information string for when the table is empty. Typically the\n\t\t * format of this string should match `info`.\n\t\t *  @type string\n\t\t *  @default Showing 0 to 0 of 0 entries\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.infoEmpty\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"infoEmpty\": \"No entries to show\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sInfoEmpty\": \"Showing 0 to 0 of 0 entries\",\n\n\n\t\t/**\n\t\t * When a user filters the information in a table, this string is appended\n\t\t * to the information (`info`) to give an idea of how strong the filtering\n\t\t * is. The variable _MAX_ is dynamically updated.\n\t\t *  @type string\n\t\t *  @default (filtered from _MAX_ total entries)\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.infoFiltered\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"infoFiltered\": \" - filtering from _MAX_ records\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sInfoFiltered\": \"(filtered from _MAX_ total entries)\",\n\n\n\t\t/**\n\t\t * If can be useful to append extra information to the info string at times,\n\t\t * and this variable does exactly that. This information will be appended to\n\t\t * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\n\t\t * being used) at all times.\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.infoPostFix\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"infoPostFix\": \"All records shown are derived from real information.\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sInfoPostFix\": \"\",\n\n\n\t\t/**\n\t\t * This decimal place operator is a little different from the other\n\t\t * language options since DataTables doesn't output floating point\n\t\t * numbers, so it won't ever use this for display of a number. Rather,\n\t\t * what this parameter does is modify the sort methods of the table so\n\t\t * that numbers which are in a format which has a character other than\n\t\t * a period (`.`) as a decimal place will be sorted numerically.\n\t\t *\n\t\t * Note that numbers with different decimal places cannot be shown in\n\t\t * the same table and still be sortable, the table must be consistent.\n\t\t * However, multiple different tables on the page can use different\n\t\t * decimal place characters.\n\t\t *  @type string\n\t\t *  @default \n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.decimal\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"decimal\": \",\"\n\t\t *          \"thousands\": \".\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sDecimal\": \"\",\n\n\n\t\t/**\n\t\t * DataTables has a build in number formatter (`formatNumber`) which is\n\t\t * used to format large numbers that are used in the table information.\n\t\t * By default a comma is used, but this can be trivially changed to any\n\t\t * character you wish with this parameter.\n\t\t *  @type string\n\t\t *  @default ,\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.thousands\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"thousands\": \"'\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sThousands\": \",\",\n\n\n\t\t/**\n\t\t * Detail the action that will be taken when the drop down menu for the\n\t\t * pagination length option is changed. The '_MENU_' variable is replaced\n\t\t * with a default select list of 10, 25, 50 and 100, and can be replaced\n\t\t * with a custom select box if required.\n\t\t *  @type string\n\t\t *  @default Show _MENU_ entries\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.lengthMenu\n\t\t *\n\t\t *  @example\n\t\t *    // Language change only\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"lengthMenu\": \"Display _MENU_ records\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Language and options change\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"lengthMenu\": 'Display <select>'+\n\t\t *            '<option value=\"10\">10</option>'+\n\t\t *            '<option value=\"20\">20</option>'+\n\t\t *            '<option value=\"30\">30</option>'+\n\t\t *            '<option value=\"40\">40</option>'+\n\t\t *            '<option value=\"50\">50</option>'+\n\t\t *            '<option value=\"-1\">All</option>'+\n\t\t *            '</select> records'\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sLengthMenu\": \"Show _MENU_ entries\",\n\n\n\t\t/**\n\t\t * When using Ajax sourced data and during the first draw when DataTables is\n\t\t * gathering the data, this message is shown in an empty row in the table to\n\t\t * indicate to the end user the the data is being loaded. Note that this\n\t\t * parameter is not used when loading data by server-side processing, just\n\t\t * Ajax sourced data with client-side processing.\n\t\t *  @type string\n\t\t *  @default Loading...\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.loadingRecords\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"loadingRecords\": \"Please wait - loading...\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sLoadingRecords\": \"Loading...\",\n\n\n\t\t/**\n\t\t * Text which is displayed when the table is processing a user action\n\t\t * (usually a sort command or similar).\n\t\t *  @type string\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.processing\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"processing\": \"DataTables is currently busy\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sProcessing\": \"\",\n\n\n\t\t/**\n\t\t * Details the actions that will be taken when the user types into the\n\t\t * filtering input text box. The variable \"_INPUT_\", if used in the string,\n\t\t * is replaced with the HTML text box for the filtering input allowing\n\t\t * control over where it appears in the string. If \"_INPUT_\" is not given\n\t\t * then the input box is appended to the string automatically.\n\t\t *  @type string\n\t\t *  @default Search:\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.search\n\t\t *\n\t\t *  @example\n\t\t *    // Input text box will be appended at the end automatically\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"search\": \"Filter records:\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Specify where the filter should appear\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"search\": \"Apply filter _INPUT_ to table\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sSearch\": \"Search:\",\n\n\n\t\t/**\n\t\t * Assign a `placeholder` attribute to the search `input` element\n\t\t *  @type string\n\t\t *  @default \n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.searchPlaceholder\n\t\t */\n\t\t\"sSearchPlaceholder\": \"\",\n\n\n\t\t/**\n\t\t * All of the language information can be stored in a file on the\n\t\t * server-side, which DataTables will look up if this parameter is passed.\n\t\t * It must store the URL of the language file, which is in a JSON format,\n\t\t * and the object has the same properties as the oLanguage object in the\n\t\t * initialiser object (i.e. the above parameters). Please refer to one of\n\t\t * the example language files to see how this works in action.\n\t\t *  @type string\n\t\t *  @default <i>Empty string - i.e. disabled</i>\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.url\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"url\": \"http://www.sprymedia.co.uk/dataTables/lang.txt\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sUrl\": \"\",\n\n\n\t\t/**\n\t\t * Text shown inside the table records when the is no information to be\n\t\t * displayed after filtering. `emptyTable` is shown when there is simply no\n\t\t * information in the table at all (regardless of filtering).\n\t\t *  @type string\n\t\t *  @default No matching records found\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.zeroRecords\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"zeroRecords\": \"No records to display\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sZeroRecords\": \"No matching records found\"\n\t},\n\n\n\t/**\n\t * This parameter allows you to have define the global filtering state at\n\t * initialisation time. As an object the `search` parameter must be\n\t * defined, but all other parameters are optional. When `regex` is true,\n\t * the search string will be treated as a regular expression, when false\n\t * (default) it will be treated as a straight string. When `smart`\n\t * DataTables will use it's smart filtering methods (to word match at\n\t * any point in the data), when false this will not be done.\n\t *  @namespace\n\t *  @extends DataTable.models.oSearch\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.search\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"search\": {\"search\": \"Initial search\"}\n\t *      } );\n\t *    } )\n\t */\n\t\"oSearch\": $.extend( {}, DataTable.models.oSearch ),\n\n\n\t/**\n\t * __Deprecated__ The functionality provided by this parameter has now been\n\t * superseded by that provided through `ajax`, which should be used instead.\n\t *\n\t * By default DataTables will look for the property `data` (or `aaData` for\n\t * compatibility with DataTables 1.9-) when obtaining data from an Ajax\n\t * source or for server-side processing - this parameter allows that\n\t * property to be changed. You can use Javascript dotted object notation to\n\t * get a data source for multiple levels of nesting.\n\t *  @type string\n\t *  @default data\n\t *\n\t *  @dtopt Options\n\t *  @dtopt Server-side\n\t *  @name DataTable.defaults.ajaxDataProp\n\t *\n\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t */\n\t\"sAjaxDataProp\": \"data\",\n\n\n\t/**\n\t * __Deprecated__ The functionality provided by this parameter has now been\n\t * superseded by that provided through `ajax`, which should be used instead.\n\t *\n\t * You can instruct DataTables to load data from an external\n\t * source using this parameter (use aData if you want to pass data in you\n\t * already have). Simply provide a url a JSON object can be obtained from.\n\t *  @type string\n\t *  @default null\n\t *\n\t *  @dtopt Options\n\t *  @dtopt Server-side\n\t *  @name DataTable.defaults.ajaxSource\n\t *\n\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t */\n\t\"sAjaxSource\": null,\n\n\n\t/**\n\t * This initialisation variable allows you to specify exactly where in the\n\t * DOM you want DataTables to inject the various controls it adds to the page\n\t * (for example you might want the pagination controls at the top of the\n\t * table). DIV elements (with or without a custom class) can also be added to\n\t * aid styling. The follow syntax is used:\n\t *   <ul>\n\t *     <li>The following options are allowed:\n\t *       <ul>\n\t *         <li>'l' - Length changing</li>\n\t *         <li>'f' - Filtering input</li>\n\t *         <li>'t' - The table!</li>\n\t *         <li>'i' - Information</li>\n\t *         <li>'p' - Pagination</li>\n\t *         <li>'r' - pRocessing</li>\n\t *       </ul>\n\t *     </li>\n\t *     <li>The following constants are allowed:\n\t *       <ul>\n\t *         <li>'H' - jQueryUI theme \"header\" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>\n\t *         <li>'F' - jQueryUI theme \"footer\" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>\n\t *       </ul>\n\t *     </li>\n\t *     <li>The following syntax is expected:\n\t *       <ul>\n\t *         <li>'&lt;' and '&gt;' - div elements</li>\n\t *         <li>'&lt;\"class\" and '&gt;' - div with a class</li>\n\t *         <li>'&lt;\"#id\" and '&gt;' - div with an ID</li>\n\t *       </ul>\n\t *     </li>\n\t *     <li>Examples:\n\t *       <ul>\n\t *         <li>'&lt;\"wrapper\"flipt&gt;'</li>\n\t *         <li>'&lt;lf&lt;t&gt;ip&gt;'</li>\n\t *       </ul>\n\t *     </li>\n\t *   </ul>\n\t *  @type string\n\t *  @default lfrtip <i>(when `jQueryUI` is false)</i> <b>or</b>\n\t *    <\"H\"lfr>t<\"F\"ip> <i>(when `jQueryUI` is true)</i>\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.dom\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"dom\": '&lt;\"top\"i&gt;rt&lt;\"bottom\"flp&gt;&lt;\"clear\"&gt;'\n\t *      } );\n\t *    } );\n\t */\n\t\"sDom\": \"lfrtip\",\n\n\n\t/**\n\t * Search delay option. This will throttle full table searches that use the\n\t * DataTables provided search input element (it does not effect calls to\n\t * `dt-api search()`, providing a delay before the search is made.\n\t *  @type integer\n\t *  @default 0\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.searchDelay\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"searchDelay\": 200\n\t *      } );\n\t *    } )\n\t */\n\t\"searchDelay\": null,\n\n\n\t/**\n\t * DataTables features six different built-in options for the buttons to\n\t * display for pagination control:\n\t *\n\t * * `numbers` - Page number buttons only\n\t * * `simple` - 'Previous' and 'Next' buttons only\n\t * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\n\t * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\n\t * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\n\t * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers\n\t *  \n\t * Further methods can be added using {@link DataTable.ext.oPagination}.\n\t *  @type string\n\t *  @default simple_numbers\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.pagingType\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"pagingType\": \"full_numbers\"\n\t *      } );\n\t *    } )\n\t */\n\t\"sPaginationType\": \"simple_numbers\",\n\n\n\t/**\n\t * Enable horizontal scrolling. When a table is too wide to fit into a\n\t * certain layout, or you have a large number of columns in the table, you\n\t * can enable x-scrolling to show the table in a viewport, which can be\n\t * scrolled. This property can be `true` which will allow the table to\n\t * scroll horizontally when needed, or any CSS unit, or a number (in which\n\t * case it will be treated as a pixel measurement). Setting as simply `true`\n\t * is recommended.\n\t *  @type boolean|string\n\t *  @default <i>blank string - i.e. disabled</i>\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.scrollX\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"scrollX\": true,\n\t *        \"scrollCollapse\": true\n\t *      } );\n\t *    } );\n\t */\n\t\"sScrollX\": \"\",\n\n\n\t/**\n\t * This property can be used to force a DataTable to use more width than it\n\t * might otherwise do when x-scrolling is enabled. For example if you have a\n\t * table which requires to be well spaced, this parameter is useful for\n\t * \"over-sizing\" the table, and thus forcing scrolling. This property can by\n\t * any CSS unit, or a number (in which case it will be treated as a pixel\n\t * measurement).\n\t *  @type string\n\t *  @default <i>blank string - i.e. disabled</i>\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.scrollXInner\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"scrollX\": \"100%\",\n\t *        \"scrollXInner\": \"110%\"\n\t *      } );\n\t *    } );\n\t */\n\t\"sScrollXInner\": \"\",\n\n\n\t/**\n\t * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\n\t * to the given height, and enable scrolling for any data which overflows the\n\t * current viewport. This can be used as an alternative to paging to display\n\t * a lot of data in a small area (although paging and scrolling can both be\n\t * enabled at the same time). This property can be any CSS unit, or a number\n\t * (in which case it will be treated as a pixel measurement).\n\t *  @type string\n\t *  @default <i>blank string - i.e. disabled</i>\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.scrollY\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"scrollY\": \"200px\",\n\t *        \"paginate\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"sScrollY\": \"\",\n\n\n\t/**\n\t * __Deprecated__ The functionality provided by this parameter has now been\n\t * superseded by that provided through `ajax`, which should be used instead.\n\t *\n\t * Set the HTTP method that is used to make the Ajax call for server-side\n\t * processing or Ajax sourced data.\n\t *  @type string\n\t *  @default GET\n\t *\n\t *  @dtopt Options\n\t *  @dtopt Server-side\n\t *  @name DataTable.defaults.serverMethod\n\t *\n\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t */\n\t\"sServerMethod\": \"GET\",\n\n\n\t/**\n\t * DataTables makes use of renderers when displaying HTML elements for\n\t * a table. These renderers can be added or modified by plug-ins to\n\t * generate suitable mark-up for a site. For example the Bootstrap\n\t * integration plug-in for DataTables uses a paging button renderer to\n\t * display pagination buttons in the mark-up required by Bootstrap.\n\t *\n\t * For further information about the renderers available see\n\t * DataTable.ext.renderer\n\t *  @type string|object\n\t *  @default null\n\t *\n\t *  @name DataTable.defaults.renderer\n\t *\n\t */\n\t\"renderer\": null,\n\n\n\t/**\n\t * Set the data property name that DataTables should use to get a row's id\n\t * to set as the `id` property in the node.\n\t *  @type string\n\t *  @default DT_RowId\n\t *\n\t *  @name DataTable.defaults.rowId\n\t */\n\t\"rowId\": \"DT_RowId\"\n};\n\n_fnHungarianMap( DataTable.defaults );\n\n\n\n/*\n * Developer note - See note in model.defaults.js about the use of Hungarian\n * notation and camel case.\n */\n\n/**\n * Column options that can be given to DataTables at initialisation time.\n *  @namespace\n */\nDataTable.defaults.column = {\n\t/**\n\t * Define which column(s) an order will occur on for this column. This\n\t * allows a column's ordering to take multiple columns into account when\n\t * doing a sort or use the data from a different column. For example first\n\t * name / last name columns make sense to do a multi-column sort over the\n\t * two columns.\n\t *  @type array|int\n\t *  @default null <i>Takes the value of the column index automatically</i>\n\t *\n\t *  @name DataTable.defaults.column.orderData\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"orderData\": [ 0, 1 ], \"targets\": [ 0 ] },\n\t *          { \"orderData\": [ 1, 0 ], \"targets\": [ 1 ] },\n\t *          { \"orderData\": 2, \"targets\": [ 2 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          { \"orderData\": [ 0, 1 ] },\n\t *          { \"orderData\": [ 1, 0 ] },\n\t *          { \"orderData\": 2 },\n\t *          null,\n\t *          null\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"aDataSort\": null,\n\t\"iDataSort\": -1,\n\n\n\t/**\n\t * You can control the default ordering direction, and even alter the\n\t * behaviour of the sort handler (i.e. only allow ascending ordering etc)\n\t * using this parameter.\n\t *  @type array\n\t *  @default [ 'asc', 'desc' ]\n\t *\n\t *  @name DataTable.defaults.column.orderSequence\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"orderSequence\": [ \"asc\" ], \"targets\": [ 1 ] },\n\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ], \"targets\": [ 2 ] },\n\t *          { \"orderSequence\": [ \"desc\" ], \"targets\": [ 3 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          null,\n\t *          { \"orderSequence\": [ \"asc\" ] },\n\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ] },\n\t *          { \"orderSequence\": [ \"desc\" ] },\n\t *          null\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"asSorting\": [ 'asc', 'desc' ],\n\n\n\t/**\n\t * Enable or disable filtering on the data in this column.\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @name DataTable.defaults.column.searchable\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"searchable\": false, \"targets\": [ 0 ] }\n\t *        ] } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          { \"searchable\": false },\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          null\n\t *        ] } );\n\t *    } );\n\t */\n\t\"bSearchable\": true,\n\n\n\t/**\n\t * Enable or disable ordering on this column.\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @name DataTable.defaults.column.orderable\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"orderable\": false, \"targets\": [ 0 ] }\n\t *        ] } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          { \"orderable\": false },\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          null\n\t *        ] } );\n\t *    } );\n\t */\n\t\"bSortable\": true,\n\n\n\t/**\n\t * Enable or disable the display of this column.\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @name DataTable.defaults.column.visible\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"visible\": false, \"targets\": [ 0 ] }\n\t *        ] } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          { \"visible\": false },\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          null\n\t *        ] } );\n\t *    } );\n\t */\n\t\"bVisible\": true,\n\n\n\t/**\n\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t * allowing you to modify the DOM element (add background colour for example) when the\n\t * element is available.\n\t *  @type function\n\t *  @param {element} td The TD node that has been created\n\t *  @param {*} cellData The Data for the cell\n\t *  @param {array|object} rowData The data for the whole row\n\t *  @param {int} row The row index for the aoData data store\n\t *  @param {int} col The column index for aoColumns\n\t *\n\t *  @name DataTable.defaults.column.createdCell\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [ {\n\t *          \"targets\": [3],\n\t *          \"createdCell\": function (td, cellData, rowData, row, col) {\n\t *            if ( cellData == \"1.7\" ) {\n\t *              $(td).css('color', 'blue')\n\t *            }\n\t *          }\n\t *        } ]\n\t *      });\n\t *    } );\n\t */\n\t\"fnCreatedCell\": null,\n\n\n\t/**\n\t * This parameter has been replaced by `data` in DataTables to ensure naming\n\t * consistency. `dataProp` can still be used, as there is backwards\n\t * compatibility in DataTables for this option, but it is strongly\n\t * recommended that you use `data` in preference to `dataProp`.\n\t *  @name DataTable.defaults.column.dataProp\n\t */\n\n\n\t/**\n\t * This property can be used to read data from any data source property,\n\t * including deeply nested objects / properties. `data` can be given in a\n\t * number of different ways which effect its behaviour:\n\t *\n\t * * `integer` - treated as an array index for the data source. This is the\n\t *   default that DataTables uses (incrementally increased for each column).\n\t * * `string` - read an object property from the data source. There are\n\t *   three 'special' options that can be used in the string to alter how\n\t *   DataTables reads the data from the source object:\n\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t *      Javascript to read from nested objects, so to can the options\n\t *      specified in `data`. For example: `browser.version` or\n\t *      `browser.name`. If your object parameter name contains a period, use\n\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t *      from and array source, joining the data with the characters provided\n\t *      between the two brackets. For example: `name[, ]` would provide a\n\t *      comma-space separated list from the source array. If no characters\n\t *      are provided between the brackets, the original array source is\n\t *      returned.\n\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t *      execute a function of the name given. For example: `browser()` for a\n\t *      simple function on the data source, `browser.version()` for a\n\t *      function in a nested property or even `browser().version` to get an\n\t *      object property if the function called returns an object. Note that\n\t *      function notation is recommended for use in `render` rather than\n\t *      `data` as it is much simpler to use as a renderer.\n\t * * `null` - use the original data source for the row rather than plucking\n\t *   data directly from it. This action has effects on two other\n\t *   initialisation options:\n\t *    * `defaultContent` - When null is given as the `data` option and\n\t *      `defaultContent` is specified for the column, the value defined by\n\t *      `defaultContent` will be used for the cell.\n\t *    * `render` - When null is used for the `data` option and the `render`\n\t *      option is specified for the column, the whole data source for the\n\t *      row is used for the renderer.\n\t * * `function` - the function given will be executed whenever DataTables\n\t *   needs to set or get the data for a cell in the column. The function\n\t *   takes three parameters:\n\t *    * Parameters:\n\t *      * `{array|object}` The data source for the row\n\t *      * `{string}` The type call data requested - this will be 'set' when\n\t *        setting data or 'filter', 'display', 'type', 'sort' or undefined\n\t *        when gathering data. Note that when `undefined` is given for the\n\t *        type DataTables expects to get the raw data for the object back<\n\t *      * `{*}` Data to set when the second parameter is 'set'.\n\t *    * Return:\n\t *      * The return value from the function is not required when 'set' is\n\t *        the type of call, but otherwise the return is what will be used\n\t *        for the data requested.\n\t *\n\t * Note that `data` is a getter and setter option. If you just require\n\t * formatting of data for output, you will likely want to use `render` which\n\t * is simply a getter and thus simpler to use.\n\t *\n\t * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\n\t * name change reflects the flexibility of this property and is consistent\n\t * with the naming of mRender. If 'mDataProp' is given, then it will still\n\t * be used by DataTables, as it automatically maps the old name to the new\n\t * if required.\n\t *\n\t *  @type string|int|function|null\n\t *  @default null <i>Use automatically calculated column index</i>\n\t *\n\t *  @name DataTable.defaults.column.data\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Read table data from objects\n\t *    // JSON structure for each row:\n\t *    //   {\n\t *    //      \"engine\": {value},\n\t *    //      \"browser\": {value},\n\t *    //      \"platform\": {value},\n\t *    //      \"version\": {value},\n\t *    //      \"grade\": {value}\n\t *    //   }\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"ajaxSource\": \"sources/objects.txt\",\n\t *        \"columns\": [\n\t *          { \"data\": \"engine\" },\n\t *          { \"data\": \"browser\" },\n\t *          { \"data\": \"platform\" },\n\t *          { \"data\": \"version\" },\n\t *          { \"data\": \"grade\" }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Read information from deeply nested objects\n\t *    // JSON structure for each row:\n\t *    //   {\n\t *    //      \"engine\": {value},\n\t *    //      \"browser\": {value},\n\t *    //      \"platform\": {\n\t *    //         \"inner\": {value}\n\t *    //      },\n\t *    //      \"details\": [\n\t *    //         {value}, {value}\n\t *    //      ]\n\t *    //   }\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"ajaxSource\": \"sources/deep.txt\",\n\t *        \"columns\": [\n\t *          { \"data\": \"engine\" },\n\t *          { \"data\": \"browser\" },\n\t *          { \"data\": \"platform.inner\" },\n\t *          { \"data\": \"details.0\" },\n\t *          { \"data\": \"details.1\" }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `data` as a function to provide different information for\n\t *    // sorting, filtering and display. In this case, currency (price)\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [ {\n\t *          \"targets\": [ 0 ],\n\t *          \"data\": function ( source, type, val ) {\n\t *            if (type === 'set') {\n\t *              source.price = val;\n\t *              // Store the computed display and filter values for efficiency\n\t *              source.price_display = val==\"\" ? \"\" : \"$\"+numberFormat(val);\n\t *              source.price_filter  = val==\"\" ? \"\" : \"$\"+numberFormat(val)+\" \"+val;\n\t *              return;\n\t *            }\n\t *            else if (type === 'display') {\n\t *              return source.price_display;\n\t *            }\n\t *            else if (type === 'filter') {\n\t *              return source.price_filter;\n\t *            }\n\t *            // 'sort', 'type' and undefined all just use the integer\n\t *            return source.price;\n\t *          }\n\t *        } ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using default content\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [ {\n\t *          \"targets\": [ 0 ],\n\t *          \"data\": null,\n\t *          \"defaultContent\": \"Click to edit\"\n\t *        } ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using array notation - outputting a list from an array\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [ {\n\t *          \"targets\": [ 0 ],\n\t *          \"data\": \"name[, ]\"\n\t *        } ]\n\t *      } );\n\t *    } );\n\t *\n\t */\n\t\"mData\": null,\n\n\n\t/**\n\t * This property is the rendering partner to `data` and it is suggested that\n\t * when you want to manipulate data for display (including filtering,\n\t * sorting etc) without altering the underlying data for the table, use this\n\t * property. `render` can be considered to be the the read only companion to\n\t * `data` which is read / write (then as such more complex). Like `data`\n\t * this option can be given in a number of different ways to effect its\n\t * behaviour:\n\t *\n\t * * `integer` - treated as an array index for the data source. This is the\n\t *   default that DataTables uses (incrementally increased for each column).\n\t * * `string` - read an object property from the data source. There are\n\t *   three 'special' options that can be used in the string to alter how\n\t *   DataTables reads the data from the source object:\n\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t *      Javascript to read from nested objects, so to can the options\n\t *      specified in `data`. For example: `browser.version` or\n\t *      `browser.name`. If your object parameter name contains a period, use\n\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t *      from and array source, joining the data with the characters provided\n\t *      between the two brackets. For example: `name[, ]` would provide a\n\t *      comma-space separated list from the source array. If no characters\n\t *      are provided between the brackets, the original array source is\n\t *      returned.\n\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t *      execute a function of the name given. For example: `browser()` for a\n\t *      simple function on the data source, `browser.version()` for a\n\t *      function in a nested property or even `browser().version` to get an\n\t *      object property if the function called returns an object.\n\t * * `object` - use different data for the different data types requested by\n\t *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\n\t *   of the object is the data type the property refers to and the value can\n\t *   defined using an integer, string or function using the same rules as\n\t *   `render` normally does. Note that an `_` option _must_ be specified.\n\t *   This is the default value to use if you haven't specified a value for\n\t *   the data type requested by DataTables.\n\t * * `function` - the function given will be executed whenever DataTables\n\t *   needs to set or get the data for a cell in the column. The function\n\t *   takes three parameters:\n\t *    * Parameters:\n\t *      * {array|object} The data source for the row (based on `data`)\n\t *      * {string} The type call data requested - this will be 'filter',\n\t *        'display', 'type' or 'sort'.\n\t *      * {array|object} The full data source for the row (not based on\n\t *        `data`)\n\t *    * Return:\n\t *      * The return value from the function is what will be used for the\n\t *        data requested.\n\t *\n\t *  @type string|int|function|object|null\n\t *  @default null Use the data source value.\n\t *\n\t *  @name DataTable.defaults.column.render\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Create a comma separated list from an array of objects\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"ajaxSource\": \"sources/deep.txt\",\n\t *        \"columns\": [\n\t *          { \"data\": \"engine\" },\n\t *          { \"data\": \"browser\" },\n\t *          {\n\t *            \"data\": \"platform\",\n\t *            \"render\": \"[, ].name\"\n\t *          }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Execute a function to obtain data\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [ {\n\t *          \"targets\": [ 0 ],\n\t *          \"data\": null, // Use the full data source object for the renderer's source\n\t *          \"render\": \"browserName()\"\n\t *        } ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // As an object, extracting different data for the different types\n\t *    // This would be used with a data source such as:\n\t *    //   { \"phone\": 5552368, \"phone_filter\": \"5552368 555-2368\", \"phone_display\": \"555-2368\" }\n\t *    // Here the `phone` integer is used for sorting and type detection, while `phone_filter`\n\t *    // (which has both forms) is used for filtering for if a user inputs either format, while\n\t *    // the formatted phone number is the one that is shown in the table.\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [ {\n\t *          \"targets\": [ 0 ],\n\t *          \"data\": null, // Use the full data source object for the renderer's source\n\t *          \"render\": {\n\t *            \"_\": \"phone\",\n\t *            \"filter\": \"phone_filter\",\n\t *            \"display\": \"phone_display\"\n\t *          }\n\t *        } ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Use as a function to create a link from the data source\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [ {\n\t *          \"targets\": [ 0 ],\n\t *          \"data\": \"download_link\",\n\t *          \"render\": function ( data, type, full ) {\n\t *            return '<a href=\"'+data+'\">Download</a>';\n\t *          }\n\t *        } ]\n\t *      } );\n\t *    } );\n\t */\n\t\"mRender\": null,\n\n\n\t/**\n\t * Change the cell type created for the column - either TD cells or TH cells. This\n\t * can be useful as TH cells have semantic meaning in the table body, allowing them\n\t * to act as a header for a row (you may wish to add scope='row' to the TH elements).\n\t *  @type string\n\t *  @default td\n\t *\n\t *  @name DataTable.defaults.column.cellType\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Make the first column use TH cells\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [ {\n\t *          \"targets\": [ 0 ],\n\t *          \"cellType\": \"th\"\n\t *        } ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sCellType\": \"td\",\n\n\n\t/**\n\t * Class to give to each cell in this column.\n\t *  @type string\n\t *  @default <i>Empty string</i>\n\t *\n\t *  @name DataTable.defaults.column.class\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"class\": \"my_class\", \"targets\": [ 0 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          { \"class\": \"my_class\" },\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          null\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sClass\": \"\",\n\n\t/**\n\t * When DataTables calculates the column widths to assign to each column,\n\t * it finds the longest string in each column and then constructs a\n\t * temporary table and reads the widths from that. The problem with this\n\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t * string - thus the calculation can go wrong (doing it properly and putting\n\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t * a \"work around\" we provide this option. It will append its value to the\n\t * text that is found to be the longest string for the column - i.e. padding.\n\t * Generally you shouldn't need this!\n\t *  @type string\n\t *  @default <i>Empty string<i>\n\t *\n\t *  @name DataTable.defaults.column.contentPadding\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          {\n\t *            \"contentPadding\": \"mmm\"\n\t *          }\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sContentPadding\": \"\",\n\n\n\t/**\n\t * Allows a default value to be given for a column's data, and will be used\n\t * whenever a null data source is encountered (this can be because `data`\n\t * is set to null, or because the data source itself is null).\n\t *  @type string\n\t *  @default null\n\t *\n\t *  @name DataTable.defaults.column.defaultContent\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          {\n\t *            \"data\": null,\n\t *            \"defaultContent\": \"Edit\",\n\t *            \"targets\": [ -1 ]\n\t *          }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          {\n\t *            \"data\": null,\n\t *            \"defaultContent\": \"Edit\"\n\t *          }\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sDefaultContent\": null,\n\n\n\t/**\n\t * This parameter is only used in DataTables' server-side processing. It can\n\t * be exceptionally useful to know what columns are being displayed on the\n\t * client side, and to map these to database fields. When defined, the names\n\t * also allow DataTables to reorder information from the server if it comes\n\t * back in an unexpected order (i.e. if you switch your columns around on the\n\t * client-side, your server-side code does not also need updating).\n\t *  @type string\n\t *  @default <i>Empty string</i>\n\t *\n\t *  @name DataTable.defaults.column.name\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"name\": \"engine\", \"targets\": [ 0 ] },\n\t *          { \"name\": \"browser\", \"targets\": [ 1 ] },\n\t *          { \"name\": \"platform\", \"targets\": [ 2 ] },\n\t *          { \"name\": \"version\", \"targets\": [ 3 ] },\n\t *          { \"name\": \"grade\", \"targets\": [ 4 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          { \"name\": \"engine\" },\n\t *          { \"name\": \"browser\" },\n\t *          { \"name\": \"platform\" },\n\t *          { \"name\": \"version\" },\n\t *          { \"name\": \"grade\" }\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sName\": \"\",\n\n\n\t/**\n\t * Defines a data source type for the ordering which can be used to read\n\t * real-time information from the table (updating the internally cached\n\t * version) prior to ordering. This allows ordering to occur on user\n\t * editable elements such as form inputs.\n\t *  @type string\n\t *  @default std\n\t *\n\t *  @name DataTable.defaults.column.orderDataType\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"orderDataType\": \"dom-text\", \"targets\": [ 2, 3 ] },\n\t *          { \"type\": \"numeric\", \"targets\": [ 3 ] },\n\t *          { \"orderDataType\": \"dom-select\", \"targets\": [ 4 ] },\n\t *          { \"orderDataType\": \"dom-checkbox\", \"targets\": [ 5 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          null,\n\t *          null,\n\t *          { \"orderDataType\": \"dom-text\" },\n\t *          { \"orderDataType\": \"dom-text\", \"type\": \"numeric\" },\n\t *          { \"orderDataType\": \"dom-select\" },\n\t *          { \"orderDataType\": \"dom-checkbox\" }\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sSortDataType\": \"std\",\n\n\n\t/**\n\t * The title of this column.\n\t *  @type string\n\t *  @default null <i>Derived from the 'TH' value for this column in the\n\t *    original HTML table.</i>\n\t *\n\t *  @name DataTable.defaults.column.title\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"title\": \"My column title\", \"targets\": [ 0 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          { \"title\": \"My column title\" },\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          null\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sTitle\": null,\n\n\n\t/**\n\t * The type allows you to specify how the data for this column will be\n\t * ordered. Four types (string, numeric, date and html (which will strip\n\t * HTML tags before ordering)) are currently available. Note that only date\n\t * formats understood by Javascript's Date() object will be accepted as type\n\t * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\n\t * 'numeric', 'date' or 'html' (by default). Further types can be adding\n\t * through plug-ins.\n\t *  @type string\n\t *  @default null <i>Auto-detected from raw data</i>\n\t *\n\t *  @name DataTable.defaults.column.type\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"type\": \"html\", \"targets\": [ 0 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          { \"type\": \"html\" },\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          null\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sType\": null,\n\n\n\t/**\n\t * Defining the width of the column, this parameter may take any CSS value\n\t * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\n\t * been given a specific width through this interface ensuring that the table\n\t * remains readable.\n\t *  @type string\n\t *  @default null <i>Automatic</i>\n\t *\n\t *  @name DataTable.defaults.column.width\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"width\": \"20%\", \"targets\": [ 0 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          { \"width\": \"20%\" },\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          null\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sWidth\": null\n};\n\n_fnHungarianMap( DataTable.defaults.column );\n\n\n\n/**\n * DataTables settings object - this holds all the information needed for a\n * given table, including configuration, data and current application of the\n * table options. DataTables does not have a single instance for each DataTable\n * with the settings attached to that instance, but rather instances of the\n * DataTable \"class\" are created on-the-fly as needed (typically by a\n * $().dataTable() call) and the settings object is then applied to that\n * instance.\n *\n * Note that this object is related to {@link DataTable.defaults} but this\n * one is the internal data store for DataTables's cache of columns. It should\n * NOT be manipulated outside of DataTables. Any configuration should be done\n * through the initialisation options.\n *  @namespace\n *  @todo Really should attach the settings object to individual instances so we\n *    don't need to create new instances on each $().dataTable() call (if the\n *    table already exists). It would also save passing oSettings around and\n *    into every single function. However, this is a very significant\n *    architecture change for DataTables and will almost certainly break\n *    backwards compatibility with older installations. This is something that\n *    will be done in 2.0.\n */\nDataTable.models.oSettings = {\n\t/**\n\t * Primary features of DataTables and their enablement state.\n\t *  @namespace\n\t */\n\t\"oFeatures\": {\n\n\t\t/**\n\t\t * Flag to say if DataTables should automatically try to calculate the\n\t\t * optimum table and columns widths (true) or not (false).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bAutoWidth\": null,\n\n\t\t/**\n\t\t * Delay the creation of TR and TD elements until they are actually\n\t\t * needed by a driven page draw. This can give a significant speed\n\t\t * increase for Ajax source and Javascript source data, but makes no\n\t\t * difference at all for DOM and server-side processing tables.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bDeferRender\": null,\n\n\t\t/**\n\t\t * Enable filtering on the table or not. Note that if this is disabled\n\t\t * then there is no filtering at all on the table, including fnFilter.\n\t\t * To just remove the filtering input use sDom and remove the 'f' option.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bFilter\": null,\n\n\t\t/**\n\t\t * Table information element (the 'Showing x of y records' div) enable\n\t\t * flag.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bInfo\": null,\n\n\t\t/**\n\t\t * Present a user control allowing the end user to change the page size\n\t\t * when pagination is enabled.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bLengthChange\": null,\n\n\t\t/**\n\t\t * Pagination enabled or not. Note that if this is disabled then length\n\t\t * changing must also be disabled.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bPaginate\": null,\n\n\t\t/**\n\t\t * Processing indicator enable flag whenever DataTables is enacting a\n\t\t * user request - typically an Ajax request for server-side processing.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bProcessing\": null,\n\n\t\t/**\n\t\t * Server-side processing enabled flag - when enabled DataTables will\n\t\t * get all data from the server for every draw - there is no filtering,\n\t\t * sorting or paging done on the client-side.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bServerSide\": null,\n\n\t\t/**\n\t\t * Sorting enablement flag.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSort\": null,\n\n\t\t/**\n\t\t * Multi-column sorting\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSortMulti\": null,\n\n\t\t/**\n\t\t * Apply a class to the columns which are being sorted to provide a\n\t\t * visual highlight or not. This can slow things down when enabled since\n\t\t * there is a lot of DOM interaction.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSortClasses\": null,\n\n\t\t/**\n\t\t * State saving enablement flag.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bStateSave\": null\n\t},\n\n\n\t/**\n\t * Scrolling settings for a table.\n\t *  @namespace\n\t */\n\t\"oScroll\": {\n\t\t/**\n\t\t * When the table is shorter in height than sScrollY, collapse the\n\t\t * table container down to the height of the table (when true).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bCollapse\": null,\n\n\t\t/**\n\t\t * Width of the scrollbar for the web-browser's platform. Calculated\n\t\t * during table initialisation.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"iBarWidth\": 0,\n\n\t\t/**\n\t\t * Viewport width for horizontal scrolling. Horizontal scrolling is\n\t\t * disabled if an empty string.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t */\n\t\t\"sX\": null,\n\n\t\t/**\n\t\t * Width to expand the table to when using x-scrolling. Typically you\n\t\t * should not need to use this.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @deprecated\n\t\t */\n\t\t\"sXInner\": null,\n\n\t\t/**\n\t\t * Viewport height for vertical scrolling. Vertical scrolling is disabled\n\t\t * if an empty string.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t */\n\t\t\"sY\": null\n\t},\n\n\t/**\n\t * Language information for the table.\n\t *  @namespace\n\t *  @extends DataTable.defaults.oLanguage\n\t */\n\t\"oLanguage\": {\n\t\t/**\n\t\t * Information callback function. See\n\t\t * {@link DataTable.defaults.fnInfoCallback}\n\t\t *  @type function\n\t\t *  @default null\n\t\t */\n\t\t\"fnInfoCallback\": null\n\t},\n\n\t/**\n\t * Browser support parameters\n\t *  @namespace\n\t */\n\t\"oBrowser\": {\n\t\t/**\n\t\t * Indicate if the browser incorrectly calculates width:100% inside a\n\t\t * scrolling element (IE6/7)\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bScrollOversize\": false,\n\n\t\t/**\n\t\t * Determine if the vertical scrollbar is on the right or left of the\n\t\t * scrolling container - needed for rtl language layout, although not\n\t\t * all browsers move the scrollbar (Safari).\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bScrollbarLeft\": false,\n\n\t\t/**\n\t\t * Flag for if `getBoundingClientRect` is fully supported or not\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bBounding\": false,\n\n\t\t/**\n\t\t * Browser scrollbar width\n\t\t *  @type integer\n\t\t *  @default 0\n\t\t */\n\t\t\"barWidth\": 0\n\t},\n\n\n\t\"ajax\": null,\n\n\n\t/**\n\t * Array referencing the nodes which are used for the features. The\n\t * parameters of this object match what is allowed by sDom - i.e.\n\t *   <ul>\n\t *     <li>'l' - Length changing</li>\n\t *     <li>'f' - Filtering input</li>\n\t *     <li>'t' - The table!</li>\n\t *     <li>'i' - Information</li>\n\t *     <li>'p' - Pagination</li>\n\t *     <li>'r' - pRocessing</li>\n\t *   </ul>\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aanFeatures\": [],\n\n\t/**\n\t * Store data information - see {@link DataTable.models.oRow} for detailed\n\t * information.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoData\": [],\n\n\t/**\n\t * Array of indexes which are in the current display (after filtering etc)\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aiDisplay\": [],\n\n\t/**\n\t * Array of indexes for display - no filtering\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aiDisplayMaster\": [],\n\n\t/**\n\t * Map of row ids to data indexes\n\t *  @type object\n\t *  @default {}\n\t */\n\t\"aIds\": {},\n\n\t/**\n\t * Store information about each column that is in use\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoColumns\": [],\n\n\t/**\n\t * Store information about the table's header\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoHeader\": [],\n\n\t/**\n\t * Store information about the table's footer\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoFooter\": [],\n\n\t/**\n\t * Store the applied global search information in case we want to force a\n\t * research or compare the old search to a new one.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @namespace\n\t *  @extends DataTable.models.oSearch\n\t */\n\t\"oPreviousSearch\": {},\n\n\t/**\n\t * Store the applied search for each column - see\n\t * {@link DataTable.models.oSearch} for the format that is used for the\n\t * filtering information for each column.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoPreSearchCols\": [],\n\n\t/**\n\t * Sorting that is applied to the table. Note that the inner arrays are\n\t * used in the following manner:\n\t * <ul>\n\t *   <li>Index 0 - column number</li>\n\t *   <li>Index 1 - current sorting direction</li>\n\t * </ul>\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type array\n\t *  @todo These inner arrays should really be objects\n\t */\n\t\"aaSorting\": null,\n\n\t/**\n\t * Sorting that is always applied to the table (i.e. prefixed in front of\n\t * aaSorting).\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aaSortingFixed\": [],\n\n\t/**\n\t * Classes to use for the striping of a table.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"asStripeClasses\": null,\n\n\t/**\n\t * If restoring a table - we should restore its striping classes as well\n\t *  @type array\n\t *  @default []\n\t */\n\t\"asDestroyStripes\": [],\n\n\t/**\n\t * If restoring a table - we should restore its width\n\t *  @type int\n\t *  @default 0\n\t */\n\t\"sDestroyWidth\": 0,\n\n\t/**\n\t * Callback functions array for every time a row is inserted (i.e. on a draw).\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoRowCallback\": [],\n\n\t/**\n\t * Callback functions for the header on each draw.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoHeaderCallback\": [],\n\n\t/**\n\t * Callback function for the footer on each draw.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoFooterCallback\": [],\n\n\t/**\n\t * Array of callback functions for draw callback functions\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoDrawCallback\": [],\n\n\t/**\n\t * Array of callback functions for row created function\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoRowCreatedCallback\": [],\n\n\t/**\n\t * Callback functions for just before the table is redrawn. A return of\n\t * false will be used to cancel the draw.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoPreDrawCallback\": [],\n\n\t/**\n\t * Callback functions for when the table has been initialised.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoInitComplete\": [],\n\n\n\t/**\n\t * Callbacks for modifying the settings to be stored for state saving, prior to\n\t * saving state.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoStateSaveParams\": [],\n\n\t/**\n\t * Callbacks for modifying the settings that have been stored for state saving\n\t * prior to using the stored values to restore the state.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoStateLoadParams\": [],\n\n\t/**\n\t * Callbacks for operating on the settings object once the saved state has been\n\t * loaded\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoStateLoaded\": [],\n\n\t/**\n\t * Cache the table ID for quick access\n\t *  @type string\n\t *  @default <i>Empty string</i>\n\t */\n\t\"sTableId\": \"\",\n\n\t/**\n\t * The TABLE node for the main table\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTable\": null,\n\n\t/**\n\t * Permanent ref to the thead element\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTHead\": null,\n\n\t/**\n\t * Permanent ref to the tfoot element - if it exists\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTFoot\": null,\n\n\t/**\n\t * Permanent ref to the tbody element\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTBody\": null,\n\n\t/**\n\t * Cache the wrapper node (contains all DataTables controlled elements)\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTableWrapper\": null,\n\n\t/**\n\t * Indicate if when using server-side processing the loading of data\n\t * should be deferred until the second draw.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type boolean\n\t *  @default false\n\t */\n\t\"bDeferLoading\": false,\n\n\t/**\n\t * Indicate if all required information has been read in\n\t *  @type boolean\n\t *  @default false\n\t */\n\t\"bInitialised\": false,\n\n\t/**\n\t * Information about open rows. Each object in the array has the parameters\n\t * 'nTr' and 'nParent'\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoOpenRows\": [],\n\n\t/**\n\t * Dictate the positioning of DataTables' control elements - see\n\t * {@link DataTable.model.oInit.sDom}.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sDom\": null,\n\n\t/**\n\t * Search delay (in mS)\n\t *  @type integer\n\t *  @default null\n\t */\n\t\"searchDelay\": null,\n\n\t/**\n\t * Which type of pagination should be used.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type string\n\t *  @default two_button\n\t */\n\t\"sPaginationType\": \"two_button\",\n\n\t/**\n\t * The state duration (for `stateSave`) in seconds.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type int\n\t *  @default 0\n\t */\n\t\"iStateDuration\": 0,\n\n\t/**\n\t * Array of callback functions for state saving. Each array element is an\n\t * object with the following parameters:\n\t *   <ul>\n\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t *       and the JSON string to save that has been thus far created. Returns\n\t *       a JSON string to be inserted into a json object\n\t *       (i.e. '\"param\": [ 0, 1, 2]')</li>\n\t *     <li>string:sName - name of callback</li>\n\t *   </ul>\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoStateSave\": [],\n\n\t/**\n\t * Array of callback functions for state loading. Each array element is an\n\t * object with the following parameters:\n\t *   <ul>\n\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t *       and the object stored. May return false to cancel state loading</li>\n\t *     <li>string:sName - name of callback</li>\n\t *   </ul>\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoStateLoad\": [],\n\n\t/**\n\t * State that was saved. Useful for back reference\n\t *  @type object\n\t *  @default null\n\t */\n\t\"oSavedState\": null,\n\n\t/**\n\t * State that was loaded. Useful for back reference\n\t *  @type object\n\t *  @default null\n\t */\n\t\"oLoadedState\": null,\n\n\t/**\n\t * Source url for AJAX data for the table.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sAjaxSource\": null,\n\n\t/**\n\t * Property from a given object from which to read the table data from. This\n\t * can be an empty string (when not server-side processing), in which case\n\t * it is  assumed an an array is given directly.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type string\n\t */\n\t\"sAjaxDataProp\": null,\n\n\t/**\n\t * The last jQuery XHR object that was used for server-side data gathering.\n\t * This can be used for working with the XHR information in one of the\n\t * callbacks\n\t *  @type object\n\t *  @default null\n\t */\n\t\"jqXHR\": null,\n\n\t/**\n\t * JSON returned from the server in the last Ajax request\n\t *  @type object\n\t *  @default undefined\n\t */\n\t\"json\": undefined,\n\n\t/**\n\t * Data submitted as part of the last Ajax request\n\t *  @type object\n\t *  @default undefined\n\t */\n\t\"oAjaxData\": undefined,\n\n\t/**\n\t * Function to get the server-side data.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type function\n\t */\n\t\"fnServerData\": null,\n\n\t/**\n\t * Functions which are called prior to sending an Ajax request so extra\n\t * parameters can easily be sent to the server\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoServerParams\": [],\n\n\t/**\n\t * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\n\t * required).\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type string\n\t */\n\t\"sServerMethod\": null,\n\n\t/**\n\t * Format numbers for display.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type function\n\t */\n\t\"fnFormatNumber\": null,\n\n\t/**\n\t * List of options that can be used for the user selectable length menu.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aLengthMenu\": null,\n\n\t/**\n\t * Counter for the draws that the table does. Also used as a tracker for\n\t * server-side processing\n\t *  @type int\n\t *  @default 0\n\t */\n\t\"iDraw\": 0,\n\n\t/**\n\t * Indicate if a redraw is being done - useful for Ajax\n\t *  @type boolean\n\t *  @default false\n\t */\n\t\"bDrawing\": false,\n\n\t/**\n\t * Draw index (iDraw) of the last error when parsing the returned data\n\t *  @type int\n\t *  @default -1\n\t */\n\t\"iDrawError\": -1,\n\n\t/**\n\t * Paging display length\n\t *  @type int\n\t *  @default 10\n\t */\n\t\"_iDisplayLength\": 10,\n\n\t/**\n\t * Paging start point - aiDisplay index\n\t *  @type int\n\t *  @default 0\n\t */\n\t\"_iDisplayStart\": 0,\n\n\t/**\n\t * Server-side processing - number of records in the result set\n\t * (i.e. before filtering), Use fnRecordsTotal rather than\n\t * this property to get the value of the number of records, regardless of\n\t * the server-side processing setting.\n\t *  @type int\n\t *  @default 0\n\t *  @private\n\t */\n\t\"_iRecordsTotal\": 0,\n\n\t/**\n\t * Server-side processing - number of records in the current display set\n\t * (i.e. after filtering). Use fnRecordsDisplay rather than\n\t * this property to get the value of the number of records, regardless of\n\t * the server-side processing setting.\n\t *  @type boolean\n\t *  @default 0\n\t *  @private\n\t */\n\t\"_iRecordsDisplay\": 0,\n\n\t/**\n\t * The classes to use for the table\n\t *  @type object\n\t *  @default {}\n\t */\n\t\"oClasses\": {},\n\n\t/**\n\t * Flag attached to the settings object so you can check in the draw\n\t * callback if filtering has been done in the draw. Deprecated in favour of\n\t * events.\n\t *  @type boolean\n\t *  @default false\n\t *  @deprecated\n\t */\n\t\"bFiltered\": false,\n\n\t/**\n\t * Flag attached to the settings object so you can check in the draw\n\t * callback if sorting has been done in the draw. Deprecated in favour of\n\t * events.\n\t *  @type boolean\n\t *  @default false\n\t *  @deprecated\n\t */\n\t\"bSorted\": false,\n\n\t/**\n\t * Indicate that if multiple rows are in the header and there is more than\n\t * one unique cell per column, if the top one (true) or bottom one (false)\n\t * should be used for sorting / title by DataTables.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type boolean\n\t */\n\t\"bSortCellsTop\": null,\n\n\t/**\n\t * Initialisation object that is used for the table\n\t *  @type object\n\t *  @default null\n\t */\n\t\"oInit\": null,\n\n\t/**\n\t * Destroy callback functions - for plug-ins to attach themselves to the\n\t * destroy so they can clean up markup and events.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoDestroyCallback\": [],\n\n\n\t/**\n\t * Get the number of records in the current record set, before filtering\n\t *  @type function\n\t */\n\t\"fnRecordsTotal\": function ()\n\t{\n\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\tthis._iRecordsTotal * 1 :\n\t\t\tthis.aiDisplayMaster.length;\n\t},\n\n\t/**\n\t * Get the number of records in the current record set, after filtering\n\t *  @type function\n\t */\n\t\"fnRecordsDisplay\": function ()\n\t{\n\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\tthis._iRecordsDisplay * 1 :\n\t\t\tthis.aiDisplay.length;\n\t},\n\n\t/**\n\t * Get the display end point - aiDisplay index\n\t *  @type function\n\t */\n\t\"fnDisplayEnd\": function ()\n\t{\n\t\tvar\n\t\t\tlen      = this._iDisplayLength,\n\t\t\tstart    = this._iDisplayStart,\n\t\t\tcalc     = start + len,\n\t\t\trecords  = this.aiDisplay.length,\n\t\t\tfeatures = this.oFeatures,\n\t\t\tpaginate = features.bPaginate;\n\n\t\tif ( features.bServerSide ) {\n\t\t\treturn paginate === false || len === -1 ?\n\t\t\t\tstart + records :\n\t\t\t\tMath.min( start+len, this._iRecordsDisplay );\n\t\t}\n\t\telse {\n\t\t\treturn ! paginate || calc>records || len===-1 ?\n\t\t\t\trecords :\n\t\t\t\tcalc;\n\t\t}\n\t},\n\n\t/**\n\t * The DataTables object for this table\n\t *  @type object\n\t *  @default null\n\t */\n\t\"oInstance\": null,\n\n\t/**\n\t * Unique identifier for each instance of the DataTables object. If there\n\t * is an ID on the table node, then it takes that value, otherwise an\n\t * incrementing internal counter is used.\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sInstance\": null,\n\n\t/**\n\t * tabindex attribute value that is added to DataTables control elements, allowing\n\t * keyboard navigation of the table and its controls.\n\t */\n\t\"iTabIndex\": 0,\n\n\t/**\n\t * DIV container for the footer scrolling table if scrolling\n\t */\n\t\"nScrollHead\": null,\n\n\t/**\n\t * DIV container for the footer scrolling table if scrolling\n\t */\n\t\"nScrollFoot\": null,\n\n\t/**\n\t * Last applied sort\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aLastSort\": [],\n\n\t/**\n\t * Stored plug-in instances\n\t *  @type object\n\t *  @default {}\n\t */\n\t\"oPlugins\": {},\n\n\t/**\n\t * Function used to get a row's id from the row's data\n\t *  @type function\n\t *  @default null\n\t */\n\t\"rowIdFn\": null,\n\n\t/**\n\t * Data location where to store a row's id\n\t *  @type string\n\t *  @default null\n\t */\n\t\"rowId\": null\n};\n\n/**\n * Extension object for DataTables that is used to provide all extension\n * options.\n *\n * Note that the `DataTable.ext` object is available through\n * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\n * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\n *  @namespace\n *  @extends DataTable.models.ext\n */\n\n\n/**\n * DataTables extensions\n * \n * This namespace acts as a collection area for plug-ins that can be used to\n * extend DataTables capabilities. Indeed many of the build in methods\n * use this method to provide their own capabilities (sorting methods for\n * example).\n *\n * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\n * reasons\n *\n *  @namespace\n */\nDataTable.ext = _ext = {\n\t/**\n\t * Buttons. For use with the Buttons extension for DataTables. This is\n\t * defined here so other extensions can define buttons regardless of load\n\t * order. It is _not_ used by DataTables core.\n\t *\n\t *  @type object\n\t *  @default {}\n\t */\n\tbuttons: {},\n\n\n\t/**\n\t * Element class names\n\t *\n\t *  @type object\n\t *  @default {}\n\t */\n\tclasses: {},\n\n\n\t/**\n\t * DataTables build type (expanded by the download builder)\n\t *\n\t *  @type string\n\t */\n\tbuilder: \"-source-\",\n\n\n\t/**\n\t * Error reporting.\n\t * \n\t * How should DataTables report an error. Can take the value 'alert',\n\t * 'throw', 'none' or a function.\n\t *\n\t *  @type string|function\n\t *  @default alert\n\t */\n\terrMode: \"alert\",\n\n\n\t/**\n\t * Feature plug-ins.\n\t * \n\t * This is an array of objects which describe the feature plug-ins that are\n\t * available to DataTables. These feature plug-ins are then available for\n\t * use through the `dom` initialisation option.\n\t * \n\t * Each feature plug-in is described by an object which must have the\n\t * following properties:\n\t * \n\t * * `fnInit` - function that is used to initialise the plug-in,\n\t * * `cFeature` - a character so the feature can be enabled by the `dom`\n\t *   instillation option. This is case sensitive.\n\t *\n\t * The `fnInit` function has the following input parameters:\n\t *\n\t * 1. `{object}` DataTables settings object: see\n\t *    {@link DataTable.models.oSettings}\n\t *\n\t * And the following return is expected:\n\t * \n\t * * {node|null} The element which contains your feature. Note that the\n\t *   return may also be void if your plug-in does not require to inject any\n\t *   DOM elements into DataTables control (`dom`) - for example this might\n\t *   be useful when developing a plug-in which allows table control via\n\t *   keyboard entry\n\t *\n\t *  @type array\n\t *\n\t *  @example\n\t *    $.fn.dataTable.ext.features.push( {\n\t *      \"fnInit\": function( oSettings ) {\n\t *        return new TableTools( { \"oDTSettings\": oSettings } );\n\t *      },\n\t *      \"cFeature\": \"T\"\n\t *    } );\n\t */\n\tfeature: [],\n\n\n\t/**\n\t * Row searching.\n\t * \n\t * This method of searching is complimentary to the default type based\n\t * searching, and a lot more comprehensive as it allows you complete control\n\t * over the searching logic. Each element in this array is a function\n\t * (parameters described below) that is called for every row in the table,\n\t * and your logic decides if it should be included in the searching data set\n\t * or not.\n\t *\n\t * Searching functions have the following input parameters:\n\t *\n\t * 1. `{object}` DataTables settings object: see\n\t *    {@link DataTable.models.oSettings}\n\t * 2. `{array|object}` Data for the row to be processed (same as the\n\t *    original format that was passed in as the data source, or an array\n\t *    from a DOM data source\n\t * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\n\t *    can be useful to retrieve the `TR` element if you need DOM interaction.\n\t *\n\t * And the following return is expected:\n\t *\n\t * * {boolean} Include the row in the searched result set (true) or not\n\t *   (false)\n\t *\n\t * Note that as with the main search ability in DataTables, technically this\n\t * is \"filtering\", since it is subtractive. However, for consistency in\n\t * naming we call it searching here.\n\t *\n\t *  @type array\n\t *  @default []\n\t *\n\t *  @example\n\t *    // The following example shows custom search being applied to the\n\t *    // fourth column (i.e. the data[3] index) based on two input values\n\t *    // from the end-user, matching the data in a certain range.\n\t *    $.fn.dataTable.ext.search.push(\n\t *      function( settings, data, dataIndex ) {\n\t *        var min = document.getElementById('min').value * 1;\n\t *        var max = document.getElementById('max').value * 1;\n\t *        var version = data[3] == \"-\" ? 0 : data[3]*1;\n\t *\n\t *        if ( min == \"\" && max == \"\" ) {\n\t *          return true;\n\t *        }\n\t *        else if ( min == \"\" && version < max ) {\n\t *          return true;\n\t *        }\n\t *        else if ( min < version && \"\" == max ) {\n\t *          return true;\n\t *        }\n\t *        else if ( min < version && version < max ) {\n\t *          return true;\n\t *        }\n\t *        return false;\n\t *      }\n\t *    );\n\t */\n\tsearch: [],\n\n\n\t/**\n\t * Selector extensions\n\t *\n\t * The `selector` option can be used to extend the options available for the\n\t * selector modifier options (`selector-modifier` object data type) that\n\t * each of the three built in selector types offer (row, column and cell +\n\t * their plural counterparts). For example the Select extension uses this\n\t * mechanism to provide an option to select only rows, columns and cells\n\t * that have been marked as selected by the end user (`{selected: true}`),\n\t * which can be used in conjunction with the existing built in selector\n\t * options.\n\t *\n\t * Each property is an array to which functions can be pushed. The functions\n\t * take three attributes:\n\t *\n\t * * Settings object for the host table\n\t * * Options object (`selector-modifier` object type)\n\t * * Array of selected item indexes\n\t *\n\t * The return is an array of the resulting item indexes after the custom\n\t * selector has been applied.\n\t *\n\t *  @type object\n\t */\n\tselector: {\n\t\tcell: [],\n\t\tcolumn: [],\n\t\trow: []\n\t},\n\n\n\t/**\n\t * Internal functions, exposed for used in plug-ins.\n\t * \n\t * Please note that you should not need to use the internal methods for\n\t * anything other than a plug-in (and even then, try to avoid if possible).\n\t * The internal function may change between releases.\n\t *\n\t *  @type object\n\t *  @default {}\n\t */\n\tinternal: {},\n\n\n\t/**\n\t * Legacy configuration options. Enable and disable legacy options that\n\t * are available in DataTables.\n\t *\n\t *  @type object\n\t */\n\tlegacy: {\n\t\t/**\n\t\t * Enable / disable DataTables 1.9 compatible server-side processing\n\t\t * requests\n\t\t *\n\t\t *  @type boolean\n\t\t *  @default null\n\t\t */\n\t\tajax: null\n\t},\n\n\n\t/**\n\t * Pagination plug-in methods.\n\t * \n\t * Each entry in this object is a function and defines which buttons should\n\t * be shown by the pagination rendering method that is used for the table:\n\t * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\n\t * buttons are displayed in the document, while the functions here tell it\n\t * what buttons to display. This is done by returning an array of button\n\t * descriptions (what each button will do).\n\t *\n\t * Pagination types (the four built in options and any additional plug-in\n\t * options defined here) can be used through the `paginationType`\n\t * initialisation parameter.\n\t *\n\t * The functions defined take two parameters:\n\t *\n\t * 1. `{int} page` The current page index\n\t * 2. `{int} pages` The number of pages in the table\n\t *\n\t * Each function is expected to return an array where each element of the\n\t * array can be one of:\n\t *\n\t * * `first` - Jump to first page when activated\n\t * * `last` - Jump to last page when activated\n\t * * `previous` - Show previous page when activated\n\t * * `next` - Show next page when activated\n\t * * `{int}` - Show page of the index given\n\t * * `{array}` - A nested array containing the above elements to add a\n\t *   containing 'DIV' element (might be useful for styling).\n\t *\n\t * Note that DataTables v1.9- used this object slightly differently whereby\n\t * an object with two functions would be defined for each plug-in. That\n\t * ability is still supported by DataTables 1.10+ to provide backwards\n\t * compatibility, but this option of use is now decremented and no longer\n\t * documented in DataTables 1.10+.\n\t *\n\t *  @type object\n\t *  @default {}\n\t *\n\t *  @example\n\t *    // Show previous, next and current page buttons only\n\t *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\n\t *      return [ 'previous', page, 'next' ];\n\t *    };\n\t */\n\tpager: {},\n\n\n\trenderer: {\n\t\tpageButton: {},\n\t\theader: {}\n\t},\n\n\n\t/**\n\t * Ordering plug-ins - custom data source\n\t * \n\t * The extension options for ordering of data available here is complimentary\n\t * to the default type based ordering that DataTables typically uses. It\n\t * allows much greater control over the the data that is being used to\n\t * order a column, but is necessarily therefore more complex.\n\t * \n\t * This type of ordering is useful if you want to do ordering based on data\n\t * live from the DOM (for example the contents of an 'input' element) rather\n\t * than just the static string that DataTables knows of.\n\t * \n\t * The way these plug-ins work is that you create an array of the values you\n\t * wish to be ordering for the column in question and then return that\n\t * array. The data in the array much be in the index order of the rows in\n\t * the table (not the currently ordering order!). Which order data gathering\n\t * function is run here depends on the `dt-init columns.orderDataType`\n\t * parameter that is used for the column (if any).\n\t *\n\t * The functions defined take two parameters:\n\t *\n\t * 1. `{object}` DataTables settings object: see\n\t *    {@link DataTable.models.oSettings}\n\t * 2. `{int}` Target column index\n\t *\n\t * Each function is expected to return an array:\n\t *\n\t * * `{array}` Data for the column to be ordering upon\n\t *\n\t *  @type array\n\t *\n\t *  @example\n\t *    // Ordering using `input` node values\n\t *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\n\t *    {\n\t *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\n\t *        return $('input', td).val();\n\t *      } );\n\t *    }\n\t */\n\torder: {},\n\n\n\t/**\n\t * Type based plug-ins.\n\t *\n\t * Each column in DataTables has a type assigned to it, either by automatic\n\t * detection or by direct assignment using the `type` option for the column.\n\t * The type of a column will effect how it is ordering and search (plug-ins\n\t * can also make use of the column type if required).\n\t *\n\t * @namespace\n\t */\n\ttype: {\n\t\t/**\n\t\t * Type detection functions.\n\t\t *\n\t\t * The functions defined in this object are used to automatically detect\n\t\t * a column's type, making initialisation of DataTables super easy, even\n\t\t * when complex data is in the table.\n\t\t *\n\t\t * The functions defined take two parameters:\n\t\t *\n\t     *  1. `{*}` Data from the column cell to be analysed\n\t     *  2. `{settings}` DataTables settings object. This can be used to\n\t     *     perform context specific type detection - for example detection\n\t     *     based on language settings such as using a comma for a decimal\n\t     *     place. Generally speaking the options from the settings will not\n\t     *     be required\n\t\t *\n\t\t * Each function is expected to return:\n\t\t *\n\t\t * * `{string|null}` Data type detected, or null if unknown (and thus\n\t\t *   pass it on to the other type detection functions.\n\t\t *\n\t\t *  @type array\n\t\t *\n\t\t *  @example\n\t\t *    // Currency type detection plug-in:\n\t\t *    $.fn.dataTable.ext.type.detect.push(\n\t\t *      function ( data, settings ) {\n\t\t *        // Check the numeric part\n\t\t *        if ( ! data.substring(1).match(/[0-9]/) ) {\n\t\t *          return null;\n\t\t *        }\n\t\t *\n\t\t *        // Check prefixed by currency\n\t\t *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\n\t\t *          return 'currency';\n\t\t *        }\n\t\t *        return null;\n\t\t *      }\n\t\t *    );\n\t\t */\n\t\tdetect: [],\n\n\n\t\t/**\n\t\t * Type based search formatting.\n\t\t *\n\t\t * The type based searching functions can be used to pre-format the\n\t\t * data to be search on. For example, it can be used to strip HTML\n\t\t * tags or to de-format telephone numbers for numeric only searching.\n\t\t *\n\t\t * Note that is a search is not defined for a column of a given type,\n\t\t * no search formatting will be performed.\n\t\t * \n\t\t * Pre-processing of searching data plug-ins - When you assign the sType\n\t\t * for a column (or have it automatically detected for you by DataTables\n\t\t * or a type detection plug-in), you will typically be using this for\n\t\t * custom sorting, but it can also be used to provide custom searching\n\t\t * by allowing you to pre-processing the data and returning the data in\n\t\t * the format that should be searched upon. This is done by adding\n\t\t * functions this object with a parameter name which matches the sType\n\t\t * for that target column. This is the corollary of <i>afnSortData</i>\n\t\t * for searching data.\n\t\t *\n\t\t * The functions defined take a single parameter:\n\t\t *\n\t     *  1. `{*}` Data from the column cell to be prepared for searching\n\t\t *\n\t\t * Each function is expected to return:\n\t\t *\n\t\t * * `{string|null}` Formatted string that will be used for the searching.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t *\n\t\t *  @example\n\t\t *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\n\t\t *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\n\t\t *    }\n\t\t */\n\t\tsearch: {},\n\n\n\t\t/**\n\t\t * Type based ordering.\n\t\t *\n\t\t * The column type tells DataTables what ordering to apply to the table\n\t\t * when a column is sorted upon. The order for each type that is defined,\n\t\t * is defined by the functions available in this object.\n\t\t *\n\t\t * Each ordering option can be described by three properties added to\n\t\t * this object:\n\t\t *\n\t\t * * `{type}-pre` - Pre-formatting function\n\t\t * * `{type}-asc` - Ascending order function\n\t\t * * `{type}-desc` - Descending order function\n\t\t *\n\t\t * All three can be used together, only `{type}-pre` or only\n\t\t * `{type}-asc` and `{type}-desc` together. It is generally recommended\n\t\t * that only `{type}-pre` is used, as this provides the optimal\n\t\t * implementation in terms of speed, although the others are provided\n\t\t * for compatibility with existing Javascript sort functions.\n\t\t *\n\t\t * `{type}-pre`: Functions defined take a single parameter:\n\t\t *\n\t     *  1. `{*}` Data from the column cell to be prepared for ordering\n\t\t *\n\t\t * And return:\n\t\t *\n\t\t * * `{*}` Data to be sorted upon\n\t\t *\n\t\t * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\n\t\t * functions, taking two parameters:\n\t\t *\n\t     *  1. `{*}` Data to compare to the second parameter\n\t     *  2. `{*}` Data to compare to the first parameter\n\t\t *\n\t\t * And returning:\n\t\t *\n\t\t * * `{*}` Ordering match: <0 if first parameter should be sorted lower\n\t\t *   than the second parameter, ===0 if the two parameters are equal and\n\t\t *   >0 if the first parameter should be sorted height than the second\n\t\t *   parameter.\n\t\t * \n\t\t *  @type object\n\t\t *  @default {}\n\t\t *\n\t\t *  @example\n\t\t *    // Numeric ordering of formatted numbers with a pre-formatter\n\t\t *    $.extend( $.fn.dataTable.ext.type.order, {\n\t\t *      \"string-pre\": function(x) {\n\t\t *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\n\t\t *        return parseFloat( a );\n\t\t *      }\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Case-sensitive string ordering, with no pre-formatting method\n\t\t *    $.extend( $.fn.dataTable.ext.order, {\n\t\t *      \"string-case-asc\": function(x,y) {\n\t\t *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t *      },\n\t\t *      \"string-case-desc\": function(x,y) {\n\t\t *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t *      }\n\t\t *    } );\n\t\t */\n\t\torder: {}\n\t},\n\n\t/**\n\t * Unique DataTables instance counter\n\t *\n\t * @type int\n\t * @private\n\t */\n\t_unique: 0,\n\n\n\t//\n\t// Depreciated\n\t// The following properties are retained for backwards compatibility only.\n\t// The should not be used in new projects and will be removed in a future\n\t// version\n\t//\n\n\t/**\n\t * Version check function.\n\t *  @type function\n\t *  @depreciated Since 1.10\n\t */\n\tfnVersionCheck: DataTable.fnVersionCheck,\n\n\n\t/**\n\t * Index for what 'this' index API functions should use\n\t *  @type int\n\t *  @deprecated Since v1.10\n\t */\n\tiApiIndex: 0,\n\n\n\t/**\n\t * jQuery UI class container\n\t *  @type object\n\t *  @deprecated Since v1.10\n\t */\n\toJUIClasses: {},\n\n\n\t/**\n\t * Software version\n\t *  @type string\n\t *  @deprecated Since v1.10\n\t */\n\tsVersion: DataTable.version\n};\n\n\n//\n// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\n//\n$.extend( _ext, {\n\tafnFiltering: _ext.search,\n\taTypes:       _ext.type.detect,\n\tofnSearch:    _ext.type.search,\n\toSort:        _ext.type.order,\n\tafnSortData:  _ext.order,\n\taoFeatures:   _ext.feature,\n\toApi:         _ext.internal,\n\toStdClasses:  _ext.classes,\n\toPagination:  _ext.pager\n} );\n\n\n$.extend( DataTable.ext.classes, {\n\t\"sTable\": \"dataTable\",\n\t\"sNoFooter\": \"no-footer\",\n\n\t/* Paging buttons */\n\t\"sPageButton\": \"paginate_button\",\n\t\"sPageButtonActive\": \"current\",\n\t\"sPageButtonDisabled\": \"disabled\",\n\n\t/* Striping classes */\n\t\"sStripeOdd\": \"odd\",\n\t\"sStripeEven\": \"even\",\n\n\t/* Empty row */\n\t\"sRowEmpty\": \"dataTables_empty\",\n\n\t/* Features */\n\t\"sWrapper\": \"dataTables_wrapper\",\n\t\"sFilter\": \"dataTables_filter\",\n\t\"sInfo\": \"dataTables_info\",\n\t\"sPaging\": \"dataTables_paginate paging_\", /* Note that the type is postfixed */\n\t\"sLength\": \"dataTables_length\",\n\t\"sProcessing\": \"dataTables_processing\",\n\n\t/* Sorting */\n\t\"sSortAsc\": \"sorting_asc\",\n\t\"sSortDesc\": \"sorting_desc\",\n\t\"sSortable\": \"sorting\", /* Sortable in both directions */\n\t\"sSortableAsc\": \"sorting_desc_disabled\",\n\t\"sSortableDesc\": \"sorting_asc_disabled\",\n\t\"sSortableNone\": \"sorting_disabled\",\n\t\"sSortColumn\": \"sorting_\", /* Note that an int is postfixed for the sorting order */\n\n\t/* Filtering */\n\t\"sFilterInput\": \"\",\n\n\t/* Page length */\n\t\"sLengthSelect\": \"\",\n\n\t/* Scrolling */\n\t\"sScrollWrapper\": \"dataTables_scroll\",\n\t\"sScrollHead\": \"dataTables_scrollHead\",\n\t\"sScrollHeadInner\": \"dataTables_scrollHeadInner\",\n\t\"sScrollBody\": \"dataTables_scrollBody\",\n\t\"sScrollFoot\": \"dataTables_scrollFoot\",\n\t\"sScrollFootInner\": \"dataTables_scrollFootInner\",\n\n\t/* Misc */\n\t\"sHeaderTH\": \"\",\n\t\"sFooterTH\": \"\",\n\n\t// Deprecated\n\t\"sSortJUIAsc\": \"\",\n\t\"sSortJUIDesc\": \"\",\n\t\"sSortJUI\": \"\",\n\t\"sSortJUIAscAllowed\": \"\",\n\t\"sSortJUIDescAllowed\": \"\",\n\t\"sSortJUIWrapper\": \"\",\n\t\"sSortIcon\": \"\",\n\t\"sJUIHeader\": \"\",\n\t\"sJUIFooter\": \"\"\n} );\n\n\nvar extPagination = DataTable.ext.pager;\n\nfunction _numbers ( page, pages ) {\n\tvar\n\t\tnumbers = [],\n\t\tbuttons = extPagination.numbers_length,\n\t\thalf = Math.floor( buttons / 2 ),\n\t\ti = 1;\n\n\tif ( pages <= buttons ) {\n\t\tnumbers = _range( 0, pages );\n\t}\n\telse if ( page <= half ) {\n\t\tnumbers = _range( 0, buttons-2 );\n\t\tnumbers.push( 'ellipsis' );\n\t\tnumbers.push( pages-1 );\n\t}\n\telse if ( page >= pages - 1 - half ) {\n\t\tnumbers = _range( pages-(buttons-2), pages );\n\t\tnumbers.splice( 0, 0, 'ellipsis' ); // no unshift in ie6\n\t\tnumbers.splice( 0, 0, 0 );\n\t}\n\telse {\n\t\tnumbers = _range( page-half+2, page+half-1 );\n\t\tnumbers.push( 'ellipsis' );\n\t\tnumbers.push( pages-1 );\n\t\tnumbers.splice( 0, 0, 'ellipsis' );\n\t\tnumbers.splice( 0, 0, 0 );\n\t}\n\n\tnumbers.DT_el = 'span';\n\treturn numbers;\n}\n\n\n$.extend( extPagination, {\n\tsimple: function ( page, pages ) {\n\t\treturn [ 'previous', 'next' ];\n\t},\n\n\tfull: function ( page, pages ) {\n\t\treturn [  'first', 'previous', 'next', 'last' ];\n\t},\n\n\tnumbers: function ( page, pages ) {\n\t\treturn [ _numbers(page, pages) ];\n\t},\n\n\tsimple_numbers: function ( page, pages ) {\n\t\treturn [ 'previous', _numbers(page, pages), 'next' ];\n\t},\n\n\tfull_numbers: function ( page, pages ) {\n\t\treturn [ 'first', 'previous', _numbers(page, pages), 'next', 'last' ];\n\t},\n\t\n\tfirst_last_numbers: function (page, pages) {\n \t\treturn ['first', _numbers(page, pages), 'last'];\n \t},\n\n\t// For testing and plug-ins to use\n\t_numbers: _numbers,\n\n\t// Number of number buttons (including ellipsis) to show. _Must be odd!_\n\tnumbers_length: 7\n} );\n\n\n$.extend( true, DataTable.ext.renderer, {\n\tpageButton: {\n\t\t_: function ( settings, host, idx, buttons, page, pages ) {\n\t\t\tvar classes = settings.oClasses;\n\t\t\tvar lang = settings.oLanguage.oPaginate;\n\t\t\tvar aria = settings.oLanguage.oAria.paginate || {};\n\t\t\tvar btnDisplay, btnClass;\n\n\t\t\tvar attach = function( container, buttons ) {\n\t\t\t\tvar i, ien, node, button, tabIndex;\n\t\t\t\tvar disabledClass = classes.sPageButtonDisabled;\n\t\t\t\tvar clickHandler = function ( e ) {\n\t\t\t\t\t_fnPageChange( settings, e.data.action, true );\n\t\t\t\t};\n\n\t\t\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\t\t\tbutton = buttons[i];\n\n\t\t\t\t\tif ( Array.isArray( button ) ) {\n\t\t\t\t\t\tvar inner = $( '<'+(button.DT_el || 'div')+'/>' )\n\t\t\t\t\t\t\t.appendTo( container );\n\t\t\t\t\t\tattach( inner, button );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbtnDisplay = null;\n\t\t\t\t\t\tbtnClass = button;\n\t\t\t\t\t\ttabIndex = settings.iTabIndex;\n\n\t\t\t\t\t\tswitch ( button ) {\n\t\t\t\t\t\t\tcase 'ellipsis':\n\t\t\t\t\t\t\t\tcontainer.append('<span class=\"ellipsis\">&#x2026;</span>');\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'first':\n\t\t\t\t\t\t\t\tbtnDisplay = lang.sFirst;\n\n\t\t\t\t\t\t\t\tif ( page === 0 ) {\n\t\t\t\t\t\t\t\t\ttabIndex = -1;\n\t\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'previous':\n\t\t\t\t\t\t\t\tbtnDisplay = lang.sPrevious;\n\n\t\t\t\t\t\t\t\tif ( page === 0 ) {\n\t\t\t\t\t\t\t\t\ttabIndex = -1;\n\t\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'next':\n\t\t\t\t\t\t\t\tbtnDisplay = lang.sNext;\n\n\t\t\t\t\t\t\t\tif ( pages === 0 || page === pages-1 ) {\n\t\t\t\t\t\t\t\t\ttabIndex = -1;\n\t\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'last':\n\t\t\t\t\t\t\t\tbtnDisplay = lang.sLast;\n\n\t\t\t\t\t\t\t\tif ( pages === 0 || page === pages-1 ) {\n\t\t\t\t\t\t\t\t\ttabIndex = -1;\n\t\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tbtnDisplay = settings.fnFormatNumber( button + 1 );\n\t\t\t\t\t\t\t\tbtnClass = page === button ?\n\t\t\t\t\t\t\t\t\tclasses.sPageButtonActive : '';\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( btnDisplay !== null ) {\n\t\t\t\t\t\t\tnode = $('<a>', {\n\t\t\t\t\t\t\t\t\t'class': classes.sPageButton+' '+btnClass,\n\t\t\t\t\t\t\t\t\t'aria-controls': settings.sTableId,\n\t\t\t\t\t\t\t\t\t'aria-label': aria[ button ],\n\t\t\t\t\t\t\t\t\t'data-dt-idx': button,\n\t\t\t\t\t\t\t\t\t'tabindex': tabIndex,\n\t\t\t\t\t\t\t\t\t'id': idx === 0 && typeof button === 'string' ?\n\t\t\t\t\t\t\t\t\t\tsettings.sTableId +'_'+ button :\n\t\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t.html( btnDisplay )\n\t\t\t\t\t\t\t\t.appendTo( container );\n\n\t\t\t\t\t\t\t_fnBindAction(\n\t\t\t\t\t\t\t\tnode, {action: button}, clickHandler\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t\t\t// inside an iframe or frame. Try / catch the error. Not good for\n\t\t\t// accessibility, but neither are frames.\n\t\t\tvar activeEl;\n\n\t\t\ttry {\n\t\t\t\t// Because this approach is destroying and recreating the paging\n\t\t\t\t// elements, focus is lost on the select button which is bad for\n\t\t\t\t// accessibility. So we want to restore focus once the draw has\n\t\t\t\t// completed\n\t\t\t\tactiveEl = $(host).find(document.activeElement).data('dt-idx');\n\t\t\t}\n\t\t\tcatch (e) {}\n\n\t\t\tattach( $(host).empty(), buttons );\n\n\t\t\tif ( activeEl !== undefined ) {\n\t\t\t\t$(host).find( '[data-dt-idx='+activeEl+']' ).trigger('focus');\n\t\t\t}\n\t\t}\n\t}\n} );\n\n\n\n// Built in type detection. See model.ext.aTypes for information about\n// what is required from this methods.\n$.extend( DataTable.ext.type.detect, [\n\t// Plain numbers - first since V8 detects some plain numbers as dates\n\t// e.g. Date.parse('55') (but not all, e.g. Date.parse('22')...).\n\tfunction ( d, settings )\n\t{\n\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\treturn _isNumber( d, decimal ) ? 'num'+decimal : null;\n\t},\n\n\t// Dates (only those recognised by the browser's Date.parse)\n\tfunction ( d, settings )\n\t{\n\t\t// V8 tries _very_ hard to make a string passed into `Date.parse()`\n\t\t// valid, so we need to use a regex to restrict date formats. Use a\n\t\t// plug-in for anything other than ISO8601 style strings\n\t\tif ( d && !(d instanceof Date) && ! _re_date.test(d) ) {\n\t\t\treturn null;\n\t\t}\n\t\tvar parsed = Date.parse(d);\n\t\treturn (parsed !== null && !isNaN(parsed)) || _empty(d) ? 'date' : null;\n\t},\n\n\t// Formatted numbers\n\tfunction ( d, settings )\n\t{\n\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\treturn _isNumber( d, decimal, true ) ? 'num-fmt'+decimal : null;\n\t},\n\n\t// HTML numeric\n\tfunction ( d, settings )\n\t{\n\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\treturn _htmlNumeric( d, decimal ) ? 'html-num'+decimal : null;\n\t},\n\n\t// HTML numeric, formatted\n\tfunction ( d, settings )\n\t{\n\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\treturn _htmlNumeric( d, decimal, true ) ? 'html-num-fmt'+decimal : null;\n\t},\n\n\t// HTML (this is strict checking - there must be html)\n\tfunction ( d, settings )\n\t{\n\t\treturn _empty( d ) || (typeof d === 'string' && d.indexOf('<') !== -1) ?\n\t\t\t'html' : null;\n\t}\n] );\n\n\n\n// Filter formatting functions. See model.ext.ofnSearch for information about\n// what is required from these methods.\n// \n// Note that additional search methods are added for the html numbers and\n// html formatted numbers by `_addNumericSort()` when we know what the decimal\n// place is\n\n\n$.extend( DataTable.ext.type.search, {\n\thtml: function ( data ) {\n\t\treturn _empty(data) ?\n\t\t\tdata :\n\t\t\ttypeof data === 'string' ?\n\t\t\t\tdata\n\t\t\t\t\t.replace( _re_new_lines, \" \" )\n\t\t\t\t\t.replace( _re_html, \"\" ) :\n\t\t\t\t'';\n\t},\n\n\tstring: function ( data ) {\n\t\treturn _empty(data) ?\n\t\t\tdata :\n\t\t\ttypeof data === 'string' ?\n\t\t\t\tdata.replace( _re_new_lines, \" \" ) :\n\t\t\t\tdata;\n\t}\n} );\n\n\n\nvar __numericReplace = function ( d, decimalPlace, re1, re2 ) {\n\tif ( d !== 0 && (!d || d === '-') ) {\n\t\treturn -Infinity;\n\t}\n\n\t// If a decimal place other than `.` is used, it needs to be given to the\n\t// function so we can detect it and replace with a `.` which is the only\n\t// decimal place Javascript recognises - it is not locale aware.\n\tif ( decimalPlace ) {\n\t\td = _numToDecimal( d, decimalPlace );\n\t}\n\n\tif ( d.replace ) {\n\t\tif ( re1 ) {\n\t\t\td = d.replace( re1, '' );\n\t\t}\n\n\t\tif ( re2 ) {\n\t\t\td = d.replace( re2, '' );\n\t\t}\n\t}\n\n\treturn d * 1;\n};\n\n\n// Add the numeric 'deformatting' functions for sorting and search. This is done\n// in a function to provide an easy ability for the language options to add\n// additional methods if a non-period decimal place is used.\nfunction _addNumericSort ( decimalPlace ) {\n\t$.each(\n\t\t{\n\t\t\t// Plain numbers\n\t\t\t\"num\": function ( d ) {\n\t\t\t\treturn __numericReplace( d, decimalPlace );\n\t\t\t},\n\n\t\t\t// Formatted numbers\n\t\t\t\"num-fmt\": function ( d ) {\n\t\t\t\treturn __numericReplace( d, decimalPlace, _re_formatted_numeric );\n\t\t\t},\n\n\t\t\t// HTML numeric\n\t\t\t\"html-num\": function ( d ) {\n\t\t\t\treturn __numericReplace( d, decimalPlace, _re_html );\n\t\t\t},\n\n\t\t\t// HTML numeric, formatted\n\t\t\t\"html-num-fmt\": function ( d ) {\n\t\t\t\treturn __numericReplace( d, decimalPlace, _re_html, _re_formatted_numeric );\n\t\t\t}\n\t\t},\n\t\tfunction ( key, fn ) {\n\t\t\t// Add the ordering method\n\t\t\t_ext.type.order[ key+decimalPlace+'-pre' ] = fn;\n\n\t\t\t// For HTML types add a search formatter that will strip the HTML\n\t\t\tif ( key.match(/^html\\-/) ) {\n\t\t\t\t_ext.type.search[ key+decimalPlace ] = _ext.type.search.html;\n\t\t\t}\n\t\t}\n\t);\n}\n\n\n// Default sort methods\n$.extend( _ext.type.order, {\n\t// Dates\n\t\"date-pre\": function ( d ) {\n\t\tvar ts = Date.parse( d );\n\t\treturn isNaN(ts) ? -Infinity : ts;\n\t},\n\n\t// html\n\t\"html-pre\": function ( a ) {\n\t\treturn _empty(a) ?\n\t\t\t'' :\n\t\t\ta.replace ?\n\t\t\t\ta.replace( /<.*?>/g, \"\" ).toLowerCase() :\n\t\t\t\ta+'';\n\t},\n\n\t// string\n\t\"string-pre\": function ( a ) {\n\t\t// This is a little complex, but faster than always calling toString,\n\t\t// http://jsperf.com/tostring-v-check\n\t\treturn _empty(a) ?\n\t\t\t'' :\n\t\t\ttypeof a === 'string' ?\n\t\t\t\ta.toLowerCase() :\n\t\t\t\t! a.toString ?\n\t\t\t\t\t'' :\n\t\t\t\t\ta.toString();\n\t},\n\n\t// string-asc and -desc are retained only for compatibility with the old\n\t// sort methods\n\t\"string-asc\": function ( x, y ) {\n\t\treturn ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t},\n\n\t\"string-desc\": function ( x, y ) {\n\t\treturn ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t}\n} );\n\n\n// Numeric sorting types - order doesn't matter here\n_addNumericSort( '' );\n\n\n$.extend( true, DataTable.ext.renderer, {\n\theader: {\n\t\t_: function ( settings, cell, column, classes ) {\n\t\t\t// No additional mark-up required\n\t\t\t// Attach a sort listener to update on sort - note that using the\n\t\t\t// `DT` namespace will allow the event to be removed automatically\n\t\t\t// on destroy, while the `dt` namespaced event is the one we are\n\t\t\t// listening for\n\t\t\t$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {\n\t\t\t\tif ( settings !== ctx ) { // need to check this this is the host\n\t\t\t\t\treturn;               // table, not a nested one\n\t\t\t\t}\n\n\t\t\t\tvar colIdx = column.idx;\n\n\t\t\t\tcell\n\t\t\t\t\t.removeClass(\n\t\t\t\t\t\tclasses.sSortAsc +' '+\n\t\t\t\t\t\tclasses.sSortDesc\n\t\t\t\t\t)\n\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\tclasses.sSortAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\tclasses.sSortDesc :\n\t\t\t\t\t\t\tcolumn.sSortingClass\n\t\t\t\t\t);\n\t\t\t} );\n\t\t},\n\n\t\tjqueryui: function ( settings, cell, column, classes ) {\n\t\t\t$('<div/>')\n\t\t\t\t.addClass( classes.sSortJUIWrapper )\n\t\t\t\t.append( cell.contents() )\n\t\t\t\t.append( $('<span/>')\n\t\t\t\t\t.addClass( classes.sSortIcon+' '+column.sSortingClassJUI )\n\t\t\t\t)\n\t\t\t\t.appendTo( cell );\n\n\t\t\t// Attach a sort listener to update on sort\n\t\t\t$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {\n\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar colIdx = column.idx;\n\n\t\t\t\tcell\n\t\t\t\t\t.removeClass( classes.sSortAsc +\" \"+classes.sSortDesc )\n\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\tclasses.sSortAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\tclasses.sSortDesc :\n\t\t\t\t\t\t\tcolumn.sSortingClass\n\t\t\t\t\t);\n\n\t\t\t\tcell\n\t\t\t\t\t.find( 'span.'+classes.sSortIcon )\n\t\t\t\t\t.removeClass(\n\t\t\t\t\t\tclasses.sSortJUIAsc +\" \"+\n\t\t\t\t\t\tclasses.sSortJUIDesc +\" \"+\n\t\t\t\t\t\tclasses.sSortJUI +\" \"+\n\t\t\t\t\t\tclasses.sSortJUIAscAllowed +\" \"+\n\t\t\t\t\t\tclasses.sSortJUIDescAllowed\n\t\t\t\t\t)\n\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\tclasses.sSortJUIAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\tclasses.sSortJUIDesc :\n\t\t\t\t\t\t\tcolumn.sSortingClassJUI\n\t\t\t\t\t);\n\t\t\t} );\n\t\t}\n\t}\n} );\n\n/*\n * Public helper functions. These aren't used internally by DataTables, or\n * called by any of the options passed into DataTables, but they can be used\n * externally by developers working with DataTables. They are helper functions\n * to make working with DataTables a little bit easier.\n */\n\nvar __htmlEscapeEntities = function ( d ) {\n\tif (Array.isArray(d)) {\n\t\td = d.join(',');\n\t}\n\n\treturn typeof d === 'string' ?\n\t\td\n\t\t\t.replace(/&/g, '&amp;')\n\t\t\t.replace(/</g, '&lt;')\n\t\t\t.replace(/>/g, '&gt;')\n\t\t\t.replace(/\"/g, '&quot;') :\n\t\td;\n};\n\n// Common logic for moment, luxon or a date action\nfunction __mld( dt, momentFn, luxonFn, dateFn, arg1 ) {\n\tif (window.moment) {\n\t\treturn dt[momentFn]( arg1 );\n\t}\n\telse if (window.luxon) {\n\t\treturn dt[luxonFn]( arg1 );\n\t}\n\t\n\treturn dateFn ? dt[dateFn]( arg1 ) : dt;\n}\n\n\nvar __mlWarning = false;\nfunction __mldObj (d, format, locale) {\n\tvar dt;\n\n\tif (window.moment) {\n\t\tdt = window.moment.utc( d, format, locale, true );\n\n\t\tif (! dt.isValid()) {\n\t\t\treturn null;\n\t\t}\n\t}\n\telse if (window.luxon) {\n\t\tdt = format && typeof d === 'string'\n\t\t\t? window.luxon.DateTime.fromFormat( d, format )\n\t\t\t: window.luxon.DateTime.fromISO( d );\n\n\t\tif (! dt.isValid) {\n\t\t\treturn null;\n\t\t}\n\n\t\tdt.setLocale(locale);\n\t}\n\telse if (! format) {\n\t\t// No format given, must be ISO\n\t\tdt = new Date(d);\n\t}\n\telse {\n\t\tif (! __mlWarning) {\n\t\t\talert('DataTables warning: Formatted date without Moment.js or Luxon - https://datatables.net/tn/17');\n\t\t}\n\n\t\t__mlWarning = true;\n\t}\n\n\treturn dt;\n}\n\n// Wrapper for date, datetime and time which all operate the same way with the exception of\n// the output string for auto locale support\nfunction __mlHelper (localeString) {\n\treturn function ( from, to, locale, def ) {\n\t\t// Luxon and Moment support\n\t\t// Argument shifting\n\t\tif ( arguments.length === 0 ) {\n\t\t\tlocale = 'en';\n\t\t\tto = null; // means toLocaleString\n\t\t\tfrom = null; // means iso8601\n\t\t}\n\t\telse if ( arguments.length === 1 ) {\n\t\t\tlocale = 'en';\n\t\t\tto = from;\n\t\t\tfrom = null;\n\t\t}\n\t\telse if ( arguments.length === 2 ) {\n\t\t\tlocale = to;\n\t\t\tto = from;\n\t\t\tfrom = null;\n\t\t}\n\n\t\tvar typeName = 'datetime-' + to;\n\n\t\t// Add type detection and sorting specific to this date format - we need to be able to identify\n\t\t// date type columns as such, rather than as numbers in extensions. Hence the need for this.\n\t\tif (! DataTable.ext.type.order[typeName]) {\n\t\t\t// The renderer will give the value to type detect as the type!\n\t\t\tDataTable.ext.type.detect.unshift(function (d) {\n\t\t\t\treturn d === typeName ? typeName : false;\n\t\t\t});\n\n\t\t\t// The renderer gives us Moment, Luxon or Date obects for the sorting, all of which have a\n\t\t\t// `valueOf` which gives milliseconds epoch\n\t\t\tDataTable.ext.type.order[typeName + '-asc'] = function (a, b) {\n\t\t\t\tvar x = a.valueOf();\n\t\t\t\tvar y = b.valueOf();\n\n\t\t\t\treturn x === y\n\t\t\t\t\t? 0\n\t\t\t\t\t: x < y\n\t\t\t\t\t\t? -1\n\t\t\t\t\t\t: 1;\n\t\t\t}\n\n\t\t\tDataTable.ext.type.order[typeName + '-desc'] = function (a, b) {\n\t\t\t\tvar x = a.valueOf();\n\t\t\t\tvar y = b.valueOf();\n\n\t\t\t\treturn x === y\n\t\t\t\t\t? 0\n\t\t\t\t\t: x > y\n\t\t\t\t\t\t? -1\n\t\t\t\t\t\t: 1;\n\t\t\t}\n\t\t}\n\t\n\t\treturn function ( d, type ) {\n\t\t\t// Allow for a default value\n\t\t\tif (d === null || d === undefined) {\n\t\t\t\tif (def === '--now') {\n\t\t\t\t\t// We treat everything as UTC further down, so no changes are\n\t\t\t\t\t// made, as such need to get the local date / time as if it were\n\t\t\t\t\t// UTC\n\t\t\t\t\tvar local = new Date();\n\t\t\t\t\td = new Date( Date.UTC(\n\t\t\t\t\t\tlocal.getFullYear(), local.getMonth(), local.getDate(),\n\t\t\t\t\t\tlocal.getHours(), local.getMinutes(), local.getSeconds()\n\t\t\t\t\t) );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\td = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (type === 'type') {\n\t\t\t\t// Typing uses the type name for fast matching\n\t\t\t\treturn typeName;\n\t\t\t}\n\n\t\t\tif (d === '') {\n\t\t\t\treturn type !== 'sort'\n\t\t\t\t\t? ''\n\t\t\t\t\t: __mldObj('0000-01-01 00:00:00', null, locale);\n\t\t\t}\n\n\t\t\t// Shortcut. If `from` and `to` are the same, we are using the renderer to\n\t\t\t// format for ordering, not display - its already in the display format.\n\t\t\tif ( to !== null && from === to && type !== 'sort' && type !== 'type' && ! (d instanceof Date) ) {\n\t\t\t\treturn d;\n\t\t\t}\n\n\t\t\tvar dt = __mldObj(d, from, locale);\n\n\t\t\tif (dt === null) {\n\t\t\t\treturn d;\n\t\t\t}\n\n\t\t\tif (type === 'sort') {\n\t\t\t\treturn dt;\n\t\t\t}\n\t\t\t\n\t\t\tvar formatted = to === null\n\t\t\t\t? __mld(dt, 'toDate', 'toJSDate', '')[localeString]()\n\t\t\t\t: __mld(dt, 'format', 'toFormat', 'toISOString', to);\n\n\t\t\t// XSS protection\n\t\t\treturn type === 'display' ?\n\t\t\t\t__htmlEscapeEntities( formatted ) :\n\t\t\t\tformatted;\n\t\t};\n\t}\n}\n\n// Based on locale, determine standard number formatting\n// Fallback for legacy browsers is US English\nvar __thousands = ',';\nvar __decimal = '.';\n\nif (Intl) {\n\ttry {\n\t\tvar num = new Intl.NumberFormat().formatToParts(100000.1);\n\t\n\t\tfor (var i=0 ; i<num.length ; i++) {\n\t\t\tif (num[i].type === 'group') {\n\t\t\t\t__thousands = num[i].value;\n\t\t\t}\n\t\t\telse if (num[i].type === 'decimal') {\n\t\t\t\t__decimal = num[i].value;\n\t\t\t}\n\t\t}\n\t}\n\tcatch (e) {\n\t\t// noop\n\t}\n}\n\n// Formatted date time detection - use by declaring the formats you are going to use\nDataTable.datetime = function ( format, locale ) {\n\tvar typeName = 'datetime-detect-' + format;\n\n\tif (! locale) {\n\t\tlocale = 'en';\n\t}\n\n\tif (! DataTable.ext.type.order[typeName]) {\n\t\tDataTable.ext.type.detect.unshift(function (d) {\n\t\t\tvar dt = __mldObj(d, format, locale);\n\t\t\treturn d === '' || dt ? typeName : false;\n\t\t});\n\n\t\tDataTable.ext.type.order[typeName + '-pre'] = function (d) {\n\t\t\treturn __mldObj(d, format, locale) || 0;\n\t\t}\n\t}\n}\n\n/**\n * Helpers for `columns.render`.\n *\n * The options defined here can be used with the `columns.render` initialisation\n * option to provide a display renderer. The following functions are defined:\n *\n * * `number` - Will format numeric data (defined by `columns.data`) for\n *   display, retaining the original unformatted data for sorting and filtering.\n *   It takes 5 parameters:\n *   * `string` - Thousands grouping separator\n *   * `string` - Decimal point indicator\n *   * `integer` - Number of decimal points to show\n *   * `string` (optional) - Prefix.\n *   * `string` (optional) - Postfix (/suffix).\n * * `text` - Escape HTML to help prevent XSS attacks. It has no optional\n *   parameters.\n *\n * @example\n *   // Column definition using the number renderer\n *   {\n *     data: \"salary\",\n *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\n *   }\n *\n * @namespace\n */\nDataTable.render = {\n\tdate: __mlHelper('toLocaleDateString'),\n\tdatetime: __mlHelper('toLocaleString'),\n\ttime: __mlHelper('toLocaleTimeString'),\n\tnumber: function ( thousands, decimal, precision, prefix, postfix ) {\n\t\t// Auto locale detection\n\t\tif (thousands === null || thousands === undefined) {\n\t\t\tthousands = __thousands;\n\t\t}\n\n\t\tif (decimal === null || decimal === undefined) {\n\t\t\tdecimal = __decimal;\n\t\t}\n\n\t\treturn {\n\t\t\tdisplay: function ( d ) {\n\t\t\t\tif ( typeof d !== 'number' && typeof d !== 'string' ) {\n\t\t\t\t\treturn d;\n\t\t\t\t}\n\n\t\t\t\tif (d === '' || d === null) {\n\t\t\t\t\treturn d;\n\t\t\t\t}\n\n\t\t\t\tvar negative = d < 0 ? '-' : '';\n\t\t\t\tvar flo = parseFloat( d );\n\n\t\t\t\t// If NaN then there isn't much formatting that we can do - just\n\t\t\t\t// return immediately, escaping any HTML (this was supposed to\n\t\t\t\t// be a number after all)\n\t\t\t\tif ( isNaN( flo ) ) {\n\t\t\t\t\treturn __htmlEscapeEntities( d );\n\t\t\t\t}\n\n\t\t\t\tflo = flo.toFixed( precision );\n\t\t\t\td = Math.abs( flo );\n\n\t\t\t\tvar intPart = parseInt( d, 10 );\n\t\t\t\tvar floatPart = precision ?\n\t\t\t\t\tdecimal+(d - intPart).toFixed( precision ).substring( 2 ):\n\t\t\t\t\t'';\n\n\t\t\t\t// If zero, then can't have a negative prefix\n\t\t\t\tif (intPart === 0 && parseFloat(floatPart) === 0) {\n\t\t\t\t\tnegative = '';\n\t\t\t\t}\n\n\t\t\t\treturn negative + (prefix||'') +\n\t\t\t\t\tintPart.toString().replace(\n\t\t\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g, thousands\n\t\t\t\t\t) +\n\t\t\t\t\tfloatPart +\n\t\t\t\t\t(postfix||'');\n\t\t\t}\n\t\t};\n\t},\n\n\ttext: function () {\n\t\treturn {\n\t\t\tdisplay: __htmlEscapeEntities,\n\t\t\tfilter: __htmlEscapeEntities\n\t\t};\n\t}\n};\n\n\n/*\n * This is really a good bit rubbish this method of exposing the internal methods\n * publicly... - To be fixed in 2.0 using methods on the prototype\n */\n\n\n/**\n * Create a wrapper function for exporting an internal functions to an external API.\n *  @param {string} fn API function name\n *  @returns {function} wrapped function\n *  @memberof DataTable#internal\n */\nfunction _fnExternApiFunc (fn)\n{\n\treturn function() {\n\t\tvar args = [_fnSettingsFromNode( this[DataTable.ext.iApiIndex] )].concat(\n\t\t\tArray.prototype.slice.call(arguments)\n\t\t);\n\t\treturn DataTable.ext.internal[fn].apply( this, args );\n\t};\n}\n\n\n/**\n * Reference to internal functions for use by plug-in developers. Note that\n * these methods are references to internal functions and are considered to be\n * private. If you use these methods, be aware that they are liable to change\n * between versions.\n *  @namespace\n */\n$.extend( DataTable.ext.internal, {\n\t_fnExternApiFunc: _fnExternApiFunc,\n\t_fnBuildAjax: _fnBuildAjax,\n\t_fnAjaxUpdate: _fnAjaxUpdate,\n\t_fnAjaxParameters: _fnAjaxParameters,\n\t_fnAjaxUpdateDraw: _fnAjaxUpdateDraw,\n\t_fnAjaxDataSrc: _fnAjaxDataSrc,\n\t_fnAddColumn: _fnAddColumn,\n\t_fnColumnOptions: _fnColumnOptions,\n\t_fnAdjustColumnSizing: _fnAdjustColumnSizing,\n\t_fnVisibleToColumnIndex: _fnVisibleToColumnIndex,\n\t_fnColumnIndexToVisible: _fnColumnIndexToVisible,\n\t_fnVisbleColumns: _fnVisbleColumns,\n\t_fnGetColumns: _fnGetColumns,\n\t_fnColumnTypes: _fnColumnTypes,\n\t_fnApplyColumnDefs: _fnApplyColumnDefs,\n\t_fnHungarianMap: _fnHungarianMap,\n\t_fnCamelToHungarian: _fnCamelToHungarian,\n\t_fnLanguageCompat: _fnLanguageCompat,\n\t_fnBrowserDetect: _fnBrowserDetect,\n\t_fnAddData: _fnAddData,\n\t_fnAddTr: _fnAddTr,\n\t_fnNodeToDataIndex: _fnNodeToDataIndex,\n\t_fnNodeToColumnIndex: _fnNodeToColumnIndex,\n\t_fnGetCellData: _fnGetCellData,\n\t_fnSetCellData: _fnSetCellData,\n\t_fnSplitObjNotation: _fnSplitObjNotation,\n\t_fnGetObjectDataFn: _fnGetObjectDataFn,\n\t_fnSetObjectDataFn: _fnSetObjectDataFn,\n\t_fnGetDataMaster: _fnGetDataMaster,\n\t_fnClearTable: _fnClearTable,\n\t_fnDeleteIndex: _fnDeleteIndex,\n\t_fnInvalidate: _fnInvalidate,\n\t_fnGetRowElements: _fnGetRowElements,\n\t_fnCreateTr: _fnCreateTr,\n\t_fnBuildHead: _fnBuildHead,\n\t_fnDrawHead: _fnDrawHead,\n\t_fnDraw: _fnDraw,\n\t_fnReDraw: _fnReDraw,\n\t_fnAddOptionsHtml: _fnAddOptionsHtml,\n\t_fnDetectHeader: _fnDetectHeader,\n\t_fnGetUniqueThs: _fnGetUniqueThs,\n\t_fnFeatureHtmlFilter: _fnFeatureHtmlFilter,\n\t_fnFilterComplete: _fnFilterComplete,\n\t_fnFilterCustom: _fnFilterCustom,\n\t_fnFilterColumn: _fnFilterColumn,\n\t_fnFilter: _fnFilter,\n\t_fnFilterCreateSearch: _fnFilterCreateSearch,\n\t_fnEscapeRegex: _fnEscapeRegex,\n\t_fnFilterData: _fnFilterData,\n\t_fnFeatureHtmlInfo: _fnFeatureHtmlInfo,\n\t_fnUpdateInfo: _fnUpdateInfo,\n\t_fnInfoMacros: _fnInfoMacros,\n\t_fnInitialise: _fnInitialise,\n\t_fnInitComplete: _fnInitComplete,\n\t_fnLengthChange: _fnLengthChange,\n\t_fnFeatureHtmlLength: _fnFeatureHtmlLength,\n\t_fnFeatureHtmlPaginate: _fnFeatureHtmlPaginate,\n\t_fnPageChange: _fnPageChange,\n\t_fnFeatureHtmlProcessing: _fnFeatureHtmlProcessing,\n\t_fnProcessingDisplay: _fnProcessingDisplay,\n\t_fnFeatureHtmlTable: _fnFeatureHtmlTable,\n\t_fnScrollDraw: _fnScrollDraw,\n\t_fnApplyToChildren: _fnApplyToChildren,\n\t_fnCalculateColumnWidths: _fnCalculateColumnWidths,\n\t_fnThrottle: _fnThrottle,\n\t_fnConvertToWidth: _fnConvertToWidth,\n\t_fnGetWidestNode: _fnGetWidestNode,\n\t_fnGetMaxLenString: _fnGetMaxLenString,\n\t_fnStringToCss: _fnStringToCss,\n\t_fnSortFlatten: _fnSortFlatten,\n\t_fnSort: _fnSort,\n\t_fnSortAria: _fnSortAria,\n\t_fnSortListener: _fnSortListener,\n\t_fnSortAttachListener: _fnSortAttachListener,\n\t_fnSortingClasses: _fnSortingClasses,\n\t_fnSortData: _fnSortData,\n\t_fnSaveState: _fnSaveState,\n\t_fnLoadState: _fnLoadState,\n\t_fnImplementState: _fnImplementState,\n\t_fnSettingsFromNode: _fnSettingsFromNode,\n\t_fnLog: _fnLog,\n\t_fnMap: _fnMap,\n\t_fnBindAction: _fnBindAction,\n\t_fnCallbackReg: _fnCallbackReg,\n\t_fnCallbackFire: _fnCallbackFire,\n\t_fnLengthOverflow: _fnLengthOverflow,\n\t_fnRenderer: _fnRenderer,\n\t_fnDataSource: _fnDataSource,\n\t_fnRowAttributes: _fnRowAttributes,\n\t_fnExtend: _fnExtend,\n\t_fnCalculateEnd: function () {} // Used by a lot of plug-ins, but redundant\n\t                                // in 1.10, so this dead-end function is\n\t                                // added to prevent errors\n} );\n\n\n// jQuery access\n$.fn.dataTable = DataTable;\n\n// Provide access to the host jQuery object (circular reference)\nDataTable.$ = $;\n\n// Legacy aliases\n$.fn.dataTableSettings = DataTable.settings;\n$.fn.dataTableExt = DataTable.ext;\n\n// With a capital `D` we return a DataTables API instance rather than a\n// jQuery object\n$.fn.DataTable = function ( opts ) {\n\treturn $(this).dataTable( opts ).api();\n};\n\n// All properties that are available to $.fn.dataTable should also be\n// available on $.fn.DataTable\n$.each( DataTable, function ( prop, val ) {\n\t$.fn.DataTable[ prop ] = val;\n} );\n\nDataTable.use = function (module, type) {\n\tif (type === 'lib' || module.fn) {\n\t\t$ = module;\n\t}\n\telse if (type == 'win' || module.document) {\n\t\twindow = module;\n\t}\n}\n\nexport default DataTable;\n"],"mappings":";;;AAAA;AACA;AACA;AAEA,OAAOA,MAAP,MAAmB,QAAnB,C,CAEA;AACA;;AACA,IAAIC,CAAC,GAAGD,MAAR;;AAGA,IAAIE,SAAS,GAAG,UAAWC,QAAX,EAAqBC,OAArB,EAChB;EACC;EACA,IAAI,gBAAgBF,SAApB,EAA+B;IAC9B,OAAOD,CAAC,CAACE,QAAD,CAAD,CAAYD,SAAZ,CAAsBE,OAAtB,CAAP;EACA,CAFD,MAGK;IACJ;IACAA,OAAO,GAAGD,QAAV;EACA;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACC,KAAKF,CAAL,GAAS,UAAWI,SAAX,EAAsBC,KAAtB,EACT;IACC,OAAO,KAAKC,GAAL,CAAS,IAAT,EAAeN,CAAf,CAAkBI,SAAlB,EAA6BC,KAA7B,CAAP;EACA,CAHD;EAMA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACC,KAAKE,CAAL,GAAS,UAAWH,SAAX,EAAsBC,KAAtB,EACT;IACC,OAAO,KAAKC,GAAL,CAAS,IAAT,EAAeE,IAAf,CAAqBJ,SAArB,EAAgCC,KAAhC,EAAwCI,IAAxC,EAAP;EACA,CAHD;EAMA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACC,KAAKH,GAAL,GAAW,UAAWI,WAAX,EACX;IACC,OAAOA,WAAW,GACjB,IAAIC,IAAJ,CACCC,mBAAmB,CAAE,KAAMC,IAAI,CAACC,SAAX,CAAF,CADpB,CADiB,GAIjB,IAAIH,IAAJ,CAAU,IAAV,CAJD;EAKA,CAPD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A;AACA;;AACA7B,SAAS,CAACgJ,MAAV,GAAmB,EAAnB;AAIA;AACA;AACA;AACA;AACA;;AACAhJ,SAAS,CAACgJ,MAAV,CAAiBsO,OAAjB,GAA2B;EAC1B;AACD;AACA;AACA;AACA;EACC,oBAAoB,IANM;;EAQ1B;AACD;AACA;AACA;AACA;EACC,WAAW,EAbe;;EAe1B;AACD;AACA;AACA;AACA;AACA;AACA;EACC,UAAU,KAtBgB;;EAwB1B;AACD;AACA;AACA;AACA;EACC,UAAU,IA7BgB;;EA+B1B;AACD;AACA;AACA;AACA;AACA;EACC,UAAU;AArCgB,CAA3B;AA2CA;AACA;AACA;AACA;AACA;AACA;;AACAtX,SAAS,CAACgJ,MAAV,CAAiB+U,IAAjB,GAAwB;EACvB;AACD;AACA;AACA;AACA;EACC,OAAO,IANgB;;EAQvB;AACD;AACA;AACA;AACA;AACA;EACC,WAAW,IAdY;;EAgBvB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,UAAU,EAzBa;;EA2BvB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,cAAc,IAvCS;;EAyCvB;AACD;AACA;AACA;AACA;AACA;AACA;EACC,gBAAgB,IAhDO;;EAkDvB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,eAAe,IA3DQ;;EA6DvB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,eAAe,EArEQ;;EAuEvB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,OAAO,IAhFgB;;EAkFvB;AACD;AACA;AACA;AACA;AACA;AACA;EACC,OAAO,CAAC;AAzFe,CAAxB;AA6FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA/d,SAAS,CAACgJ,MAAV,CAAiB0Q,OAAjB,GAA2B;EAC1B;AACD;AACA;AACA;AACA;AACA;EACC,OAAO,IAPmB;;EAS1B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,aAAa,IAlBa;;EAoB1B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,aAAa,IA5Ba;;EA8B1B;AACD;AACA;AACA;AACA;EACC,eAAe,IAnCW;;EAqC1B;AACD;AACA;AACA;EACC,aAAa,IAzCa;;EA2C1B;AACD;AACA;AACA;EACC,YAAY,IA/Cc;;EAiD1B;AACD;AACA;AACA;AACA;AACA;AACA;EACC,gBAAgB,IAxDU;;EA0D1B;AACD;AACA;AACA;AACA;AACA;AACA;EACC,aAAa,KAjEa;;EAmE1B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,iBAAiB,IA/ES;;EAiF1B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,aAAa,IA/Fa;;EAiG1B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,aAAa,IA5Ga;;EA8G1B;AACD;AACA;AACA;AACA;AACA;AACA;EACC,SAAS,IArHiB;;EAuH1B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,IA/He;;EAiI1B;AACD;AACA;AACA;AACA;AACA;EACC,OAAO,IAvImB;;EAyI1B;AACD;AACA;AACA;AACA;AACA;AACA;EACC,OAAO,IAhJmB;;EAkJ1B;AACD;AACA;AACA;AACA;EACC,UAAU,IAvJgB;;EAyJ1B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,mBAAmB,IApKO;;EAsK1B;AACD;AACA;AACA;AACA;AACA;AACA;EACC,mBAAmB,IA7KO;;EA+K1B;AACD;AACA;AACA;AACA;EACC,SAAS,IApLiB;;EAsL1B;AACD;AACA;AACA;AACA;AACA;EACC,iBAAiB,KA5LS;;EA8L1B;AACD;AACA;AACA;AACA;EACC,iBAAiB,IAnMS;;EAqM1B;AACD;AACA;AACA;AACA;AACA;EACC,oBAAoB,IA3MM;;EA6M1B;AACD;AACA;AACA;EACC,UAAU,IAjNgB;;EAmN1B;AACD;AACA;AACA;AACA;EACC,SAAS,IAxNiB;;EA0N1B;AACD;AACA;AACA;AACA;EACC,UAAU,IA/NgB;;EAiO1B;AACD;AACA;AACA;AACA;EACC,cAAc;AAtOY,CAA3B;AA0OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA1Z,SAAS,CAAC2H,QAAV,GAAqB;EACpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,UAAU,IA5DU;;EA+DpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,aAAa,CAAC,CAAC,CAAD,EAAG,KAAH,CAAD,CA1FO;;EA6FpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,kBAAkB,EAjHE;;EAoHpiRpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,eAAe,CAAE,EAAF,EAAM,EAAN,EAAU,EAAV,EAAc,GAAd,CAxSK;;EA2SpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,aAAa,IAvTO;;EAyTpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,gBAAgB,IA5UI;;EA+UpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,gBAAgB,EAvWI;;EA0WpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,mBAAmB,IA5XC;;EA+XpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,cAAc,IAhZM;;EAmZpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,gBAAgB,KAvaI;;EA0apB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,YAAY,KAncQ;;EAscpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,IA3dS;;EA8dpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAAS,IA/eW;;EAkfpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,iBAAiB,IAlgBG;;EAqgBpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,aAAa,IAphBO;;EAuhBpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,eAAe,KAziBK;;EA4iBpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,aAAa,KA/kBO;;EAklBpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,mBAAmB,KAvmBC;;EA0mBpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,eAAe,KA7nBK;;EAgoBpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAAS,IAhpBW;;EAmpBpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,cAAc,IApqBM;;EAuqBpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,iBAAiB,KAxrBG;;EA2rBpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,gBAAgB,IA9sBI;;EAitBpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,cAAc,KAvuBM;;EA0uBpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,gBAAgB,IAnwBI;;EAswBpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,kBAAkB,IAxxBE;;EA2xBpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,oBAAoB,IApzBA;;EAuzBpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,kBAAkB,UAAWq9B,QAAX,EAAsB;IACvC,OAAOA,QAAQ,CAAC1xB,QAAT,GAAoB7B,OAApB,CACN,uBADM,EAEN,KAAKnI,SAAL,CAAesN,UAFT,CAAP;EAIA,CAv1BmB;;EA01BpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,oBAAoB,IAp3BA;;EAu3BpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,kBAAkB,IAl5BE;;EAq5BpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,kBAAkB,IA36BE;;EA86BpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,qBAAqB,IAr8BD;;EAw8BpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,iBAAiB,IAl+BG;;EAq+BpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,gBAAgB,IA5/BI;;EA+/BpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,kBAAkB,IAvhCE;;EA0hCpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,uBAAuB,UAAW/U,QAAX,EAAsB;IAC5C,IAAI;MACH,OAAOojC,IAAI,CAACC,KAAL,CACN,CAACrjC,QAAQ,CAACg5B,cAAT,KAA4B,CAAC,CAA7B,GAAiCsK,cAAjC,GAAkDC,YAAnD,EAAiEC,OAAjE,CACC,gBAAcxjC,QAAQ,CAACu1B,SAAvB,GAAiC,GAAjC,GAAqCkO,QAAQ,CAACC,QAD/C,CADM,CAAP;IAKA,CAND,CAME,OAAO9Z,CAAP,EAAU;MACX,OAAO,EAAP;IACA;EACD,CAlkCmB;;EAqkCpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,qBAAqB,IAxmCD;;EA2mCpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,iBAAiB,IAhoCG;;EAmoCpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,uBAAuB,UAAW5pB,QAAX,EAAqBrB,IAArB,EAA4B;IAClD,IAAI;MACH,CAACqB,QAAQ,CAACg5B,cAAT,KAA4B,CAAC,CAA7B,GAAiCsK,cAAjC,GAAkDC,YAAnD,EAAiEI,OAAjE,CACC,gBAAc3jC,QAAQ,CAACu1B,SAAvB,GAAiC,GAAjC,GAAqCkO,QAAQ,CAACC,QAD/C,EAECN,IAAI,CAACQ,SAAL,CAAgBjlC,IAAhB,CAFD;IAIA,CALD,CAKE,OAAOirB,CAAP,EAAU,CAAE;EACd,CAvqCmB;;EA0qCpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,qBAAqB,IAlsCD;;EAqsCpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,kBAAkB,IAttCE;;EAytCpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,iBAAiB,IAlwCG;;EAqwCpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,kBAAkB,EAtxCE;;EAyxCpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,iBAAiB,CA3yCG;;EA8yCpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,aAAa,CAl0CO;;EAq0CpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,YAAY,EA70CQ;;EAg1CpB;AACD;AACA;AACA;AACA;AACA;AACA;EACC,aAAa;IACZ;AACF;AACA;AACA;AACA;AACA;AACA;IACE,SAAS;MACR;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACG,kBAAkB,qCAtBV;;MAwBR;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACG,mBAAmB;IA7CX,CARG;;IAwDZ;AACF;AACA;AACA;AACA;AACA;IACE,aAAa;MACZ;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACG,UAAU,OArBE;;MAwBZ;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACG,SAAS,MA5CG;;MA+CZ;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACG,SAAS,MAnEG;;MAsEZ;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACG,aAAa;IA1FD,CA9DD;;IA2JZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,eAAe,4BA/KH;;IAkLZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,SAAS,6CA/MG;;IAkNZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,cAAc,6BApOF;;IAuOZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,iBAAiB,qCA1PL;;IA6PZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,gBAAgB,EAjRJ;;IAoRZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,YAAY,EAhTA;;IAmTZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,cAAc,GAvUF;;IA0UZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,eAAe,qBAhXH;;IAmXZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,mBAAmB,YAxYP;;IA2YZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,eAAe,EA5ZH;;IA+ZZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,WAAW,SA/bC;;IAkcZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,sBAAsB,EA1cV;;IA6cZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,QAAQ,EAneI;;IAseZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,gBAAgB;EAzfJ,CAv1CO;;EAo1DpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,WAAW1rB,CAAC,CAACkI,MAAF,CAAU,EAAV,EAAcjI,SAAS,CAACgJ,MAAV,CAAiBsO,OAA/B,CAz2DS;;EA42DpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,iBAAiB,MA93DG;;EAi4DpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,eAAe,IAj5DK;;EAo5DpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,QAAQ,QAv8DY;;EA08DpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,eAAe,IA39DK;;EA89DpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,mBAAmB,gBAv/DC;;EA0/DpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,YAAY,EAhhEQ;;EAmhEpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,iBAAiB,EAxiEG;;EA2iEpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,YAAY,EAhkEQ;;EAmkEpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,iBAAiB,KAllEG;;EAqlEpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,YAAY,IApmEQ;;EAumEpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAAS;AA/mEW,CAArB;;AAknEA3B,eAAe,CAAE3V,SAAS,CAAC2H,QAAZ,CAAf;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AACA3H,SAAS,CAAC2H,QAAV,CAAmBhE,MAAnB,GAA4B;EAC3B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,aAAa,IAvCc;EAwC3B,aAAa,CAAC,CAxCa;;EA2C3B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,aAAa,CAAE,KAAF,EAAS,MAAT,CA/Ec;;EAkF3B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,eAAe,IAhHY;;EAmH3B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,aAAa,IAjJc;;EAoJ3B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,YAAY,IAlLe;;EAqL3B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,iBAAiB,IAlNU;;EAqvYkjgBgB;;EAogB3B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,aAAa,IAzhBc;;EA4hB3B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,UAAU,EA5jBiB;;EA8jB3B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,mBAAmB,EA7lBQ;;EAgmB3B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,mBAAmB,IAxoBQ;;EA2oB3B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAAS,EAprBkB;;EAurB3B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,iBAAiB,KA9tBU;;EAiuB3B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,UAAU,IAlwBiB;;EAqwB3B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAAS,IA3yBkB;;EA8yB3B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,UAAU;AAj1BiB,CAA5B;;AAo1BAgS,eAAe,CAAE3V,SAAS,CAAC2H,QAAV,CAAmBhE,MAArB,CAAf;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA3D,SAAS,CAACgJ,MAAV,CAAiBD,SAAjB,GAA6B;EAC5B;AACD;AACA;AACA;EACC,aAAa;IAEZ;AACF;AACA;AACA;AACA;AACA;AACA;IACE,cAAc,IATF;;IAWZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,gBAAgB,IApBJ;;IAsBZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,WAAW,IA9BC;;IAgCZ;AACF;AACA;AACA;AACA;AACA;AACA;IACE,SAAS,IAvCG;;IAyCZ;AACF;AACA;AACA;AACA;AACA;AACA;IACE,iBAAiB,IAhDL;;IAkDZ;AACF;AACA;AACA;AACA;AACA;AACA;IACE,aAAa,IAzDD;;IA2DZ;AACF;AACA;AACA;AACA;AACA;AACA;IACE,eAAe,IAlEH;;IAoEZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,eAAe,IA5EH;;IA8EZ;AACF;AACA;AACA;AACA;AACA;IACE,SAAS,IApFG;;IAsFZ;AACF;AACA;AACA;AACA;AACA;IACE,cAAc,IA5FF;;IA8FZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,gBAAgB,IAtGJ;;IAwGZ;AACF;AACA;AACA;AACA;AACA;IACE,cAAc;EA9GF,CALe;;EAuH5B;AACD;AACA;AACA;EACC,WAAW;IACV;AACF;AACA;AACA;AACA;AACA;AACA;IACE,aAAa,IARH;;IAUV;AACF;AACA;AACA;AACA;AACA;IACE,aAAa,CAhBH;;IAkBV;AACF;AACA;AACA;AACA;AACA;AACA;IACE,MAAM,IAzBI;;IA2BV;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,WAAW,IAnCD;;IAqCV;AACF;AACA;AACA;AACA;AACA;AACA;IACE,MAAM;EA5CI,CA3HiB;;EA0K5B;AACD;AACA;AACA;AACA;EACC,aAAa;IACZ;AACF;AACA;AACA;AACA;AACA;IACE,kBAAkB;EAPN,CA/Ke;;EAyL5B;AACD;AACA;AACA;EACC,YAAY;IACX;AACF;AACA;AACA;AACA;AACA;IACE,mBAAmB,KAPR;;IASX;AACF;AACA;AACA;AACA;AACA;AACA;IACE,kBAAkB,KAhBP;;IAkBX;AACF;AACA;AACA;AACA;IACE,aAAa,KAvBF;;IAyBX;AACF;AACA;AACA;AACA;IACE,YAAY;EA9BD,CA7LgB;EA+N5B,QAAQ,IA/NoB;;EAkO5B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,eAAe,EAhPa;;EAkP5B;AACD;AACA;AACA;AACA;AACA;EACC,UAAU,EAxPkB;;EA0P5B;AACD;AACA;AACA;AACA;EACC,aAAa,EA/Pe;;EAiQ5B;AACD;AACA;AACA;AACA;EACC,mBAAmB,EAtQS;;EAwQ5B;AACD;AACA;AACA;AACA;EACC,QAAQ,EA7QoB;;EA+Q5B;AACD;AACA;AACA;AACA;EACC,aAAa,EApRe;;EAsR5B;AACD;AACA;AACA;AACA;EACC,YAAY,EA3RgB;;EA6R5B;AACD;AACA;AACA;AACA;EACC,YAAY,EAlSgB;;EAoS5B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,mBAAmB,EA5SS;;EA8S5B;AACD;AACA;AACA;AACA;AACA;AACA;EACC,mBAAmB,EArTS;;EAuT5B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,aAAa,IAnUe;;EAqU5B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,kBAAkB,EA7UU;;EA+U5B;AACD;AACA;AACA;AACA;AACA;AACA;EACC,mBAAmB,IAtVS;;EAwV5B;AACD;AACA;AACA;AACA;EACC,oBAAoB,EA7VQ;;EA+V5B;AACD;AACA;AACA;AACA;EACC,iBAAiB,CApWW;;EAsW5B;AACD;AACA;AACA;AACA;EACC,iBAAiB,EA3WW;;EA6W5B;AACD;AACA;AACA;AACA;EACC,oBAAoB,EAlXQ;;EAoX5B;AACD;AACA;AACA;AACA;EACC,oBAAoB,EAzXQ;;EA2X5B;AACD;AACA;AACA;AACA;EACC,kBAAkB,EAhYU;;EAkY5B;AACD;AACA;AACA;AACA;EACC,wBAAwB,EAvYI;;EAyY5B;AACD;AACA;AACA;AACA;AACA;EACC,qBAAqB,EA/YO;;EAiZ5B;AACD;AACA;AACA;AACA;EACC,kBAAkB,EAtZU;;EAyZ5B;AACD;AACA;AACA;AACA;AACA;EACC,qBAAqB,EA/ZO;;EAia5B;AACD;AACA;AACA;AACA;AACA;EACC,qBAAqB,EAvaO;;EAya5B;AACD;AACA;AACA;AACA;AACA;EACC,iBAAiB,EA/aW;;EAib5B;AACD;AACA;AACA;AACA;EACC,YAAY,EAtbgB;;EAwb5B;AACD;AACA;AACA;AACA;EACC,UAAU,IA7bkB;;EA+b5B;AACD;AACA;AACA;AACA;EACC,UAAU,IApckB;;EAsc5B;AACD;AACA;AACA;AACA;EACC,UAAU,IA3ckB;;EA6c5B;AACD;AACA;AACA;AACA;EACC,UAAU,IAldkB;;EAod5B;AACD;AACA;AACA;AACA;EACC,iBAAiB,IAzdW;;EA2d5B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,iBAAiB,KAneW;;EAqe5B;AACD;AACA;AACA;AACA;EACC,gBAAgB,KA1eY;;EA4e5B;AACD;AACA;AACA;AACA;AACA;EACC,cAAc,EAlfc;;EAof5B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,QAAQ,IA5foB;;EA8f5B;AACD;AACA;AACA;AACA;EACC,eAAe,IAngBa;;EAqgB5B;AACD;AACA;AACA;AACA;AACA;AACA;EACC,mBAAmB,YA5gBS;;EA8gB5B;AACD;AACA;AACA;AACA;AACA;AACA;EACC,kBAAkB,CArhBU;;EAuhB5B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,eAAe,EApiBa;;EAsiB5B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,eAAe,EAjjBa;;EAmjB5B;AACD;AACA;AACA;AACA;EACC,eAAe,IAxjBa;;EA0jB5B;AACD;AACA;AACA;AACA;EACC,gBAAgB,IA/jBY;;EAikB5B;AACD;AACA;AACA;AACA;AACA;AACA;EACC,eAAe,IAxkBa;;EA0kB5B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,iBAAiB,IAllBW;;EAolB5B;AACD;AACA;AACA;AACA;AACA;AACA;EACC,SAAS,IA3lBmB;;EA6lB5B;AACD;AACA;AACA;AACA;EACC,QAAQ1H,SAlmBoB;;EAomB5B;AACD;AACA;AACA;AACA;EACC,aAAaA,SAzmBe;;EA2mB5B;AACD;AACA;AACA;AACA;AACA;EACC,gBAAgB,IAjnBY;;EAmnB5B;AACD;AACA;AACA;AACA;AACA;EACC,kBAAkB,EAznBU;;EA2nB5B;AACD;AACA;AACA;AACA;AACA;AACA;EACC,iBAAiB,IAloBW;;EAooB5B;AACD;AACA;AACA;AACA;AACA;EACC,kBAAkB,IA1oBU;;EA4oB5B;AACD;AACA;AACA;AACA;AACA;AACA;EACC,eAAe,IAnpBa;;EAqpB5B;AACD;AACA;AACA;AACA;AACA;EACC,SAAS,CA3pBmB;;EA6pB5B;AACD;AACA;AACA;AACA;EACC,YAAY,KAlqBgB;;EAoqB5B;AACD;AACA;AACA;AACA;EACC,cAAc,CAAC,CAzqBa;;EA2qB5B;AACD;AACA;AACA;AACA;EACC,mBAAmB,EAhrBS;;EAkrB5B;AACD;AACA;AACA;AACA;EACC,kBAAkB,CAvrBU;;EAyrB5B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,kBAAkB,CAlsBU;;EAosB5B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,oBAAoB,CA7sBQ;;EA+sB5B;AACD;AACA;AACA;AACA;EACC,YAAY,EAptBgB;;EAstB5B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,aAAa,KA9tBe;;EAguB5B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,KAxuBiB;;EA0uB5B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,iBAAiB,IAlvBW;;EAovB5B;AACD;AACA;AACA;AACA;EACC,SAAS,IAzvBmB;;EA2vB5B;AACD;AACA;AACA;AACA;AACA;EACC,qBAAqB,EAjwBO;;EAowB5B;AACD;AACA;AACA;EACC,kBAAkB,YAClB;IACC,OAAO0N,aAAa,CAAE,IAAF,CAAb,IAAyB,KAAzB,GACN,KAAKzD,cAAL,GAAsB,CADhB,GAEN,KAAK0E,eAAL,CAAqBxJ,MAFtB;EAGA,CA7wB2B;;EA+wB5B;AACD;AACA;AACA;EACC,oBAAoB,YACpB;IACC,OAAOuI,aAAa,CAAE,IAAF,CAAb,IAAyB,KAAzB,GACN,KAAK1D,gBAAL,GAAwB,CADlB,GAEN,KAAK0E,SAAL,CAAevJ,MAFhB;EAGA,CAxxB2B;;EA0xB5B;AACD;AACA;AACA;EACC,gBAAgB,YAChB;IACC,IACCD,GAAG,GAAQ,KAAKijB,eADjB;IAAA,IAEC/W,KAAK,GAAM,KAAKxH,cAFjB;IAAA,IAGC03B,IAAI,GAAOlwB,KAAK,GAAGlM,GAHpB;IAAA,IAICqqB,OAAO,GAAI,KAAK7gB,SAAL,CAAevJ,MAJ3B;IAAA,IAKCyH,QAAQ,GAAG,KAAKvE,SALjB;IAAA,IAMCg8B,QAAQ,GAAGz3B,QAAQ,CAACgY,SANrB;;IAQA,IAAKhY,QAAQ,CAACkV,WAAd,EAA4B;MAC3B,OAAOuiB,QAAQ,KAAK,KAAb,IAAsBn/B,GAAG,KAAK,CAAC,CAA/B,GACNkM,KAAK,GAAGme,OADF,GAENjY,IAAI,CAACgtB,GAAL,CAAUlzB,KAAK,GAAClM,GAAhB,EAAqB,KAAK8E,gBAA1B,CAFD;IAGA,CAJD,MAKK;MACJ,OAAO,CAAEq6B,QAAF,IAAc/C,IAAI,GAAC/R,OAAnB,IAA8BrqB,GAAG,KAAG,CAAC,CAArC,GACNqqB,OADM,GAEN+R,IAFD;IAGA;EACD,CAlzB2B;;EAozB5B;AACD;AACA;AACA;AACA;EACC,aAAa,IAzzBe;;EA2zB5B;AACD;AACA;AACA;AACA;AACA;AACA;EACC,aAAa,IAl0Be;;EAo0B5B;AACD;AACA;AACA;EACC,aAAa,CAx0Be;;EA00B5B;AACD;AACA;EACC,eAAe,IA70Ba;;EA+0B5B;AACD;AACA;EACC,eAAe,IAl1Ba;;EAo1B5B;AACD;AACA;AACA;AACA;EACC,aAAa,EAz1Be;;EA21B5B;AACD;AACA;AACA;AACA;EACC,YAAY,EAh2BgB;;EAk2B5B;AACD;AACA;AACA;AACA;EACC,WAAW,IAv2BiB;;EAy2B5B;AACD;AACA;AACA;AACA;EACC,SAAS;AA92BmB,CAA7B;AAi3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA3iC,SAAS,CAAC4G,GAAV,GAAgBhG,IAAI,GAAG;EACtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC6vB,OAAO,EAAE,EATa;;EAYtB;AACD;AACA;AACA;AACA;AACA;EACC7lB,OAAO,EAAE,EAlBa;;EAqBtB;AACD;AACA;AACA;AACA;EACCg7B,OAAO,EAAE,UA1Ba;;EA6BtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCzK,OAAO,EAAE,OAtCa;;EAyCtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCxU,OAAO,EAAE,EA9Ea;;EAiFtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCjjB,MAAM,EAAE,EA3Ic;;EA8ItB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCzD,QAAQ,EAAE;IACTiE,IAAI,EAAE,EADG;IAETP,MAAM,EAAE,EAFC;IAGTvC,GAAG,EAAE;EAHI,CAtKY;;EA6KtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCsF,QAAQ,EAAE,EAvLY;;EA0LtB;AACD;AACA;AACA;AACA;AACA;EACCsjB,MAAM,EAAE;IACP;AACF;AACA;AACA;AACA;AACA;AACA;IACExe,IAAI,EAAE;EARC,CAhMc;;EA4MtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC4kB,KAAK,EAAE,EAzPe;EA4PtB8L,QAAQ,EAAE;IACT2J,UAAU,EAAE,EADH;IAETtS,MAAM,EAAE;EAFC,CA5PY;;EAkQtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC5tB,KAAK,EAAE,EA1Se;;EA6StB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC5B,IAAI,EAAE;IACL;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEkZ,MAAM,EAAE,EAzCH;;IA4CL;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEvZ,MAAM,EAAE,EAhFH;;IAmFL;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEiC,KAAK,EAAE;EAnJF,CAvTgB;;EA6ctB;AACD;AACA;AACA;AACA;AACA;EACCmD,OAAO,EAAE,CAnda;EAsdtB;EACA;EACA;EACA;EACA;EACA;;EAEA;AACD;AACA;AACA;AACA;EACC1C,cAAc,EAAEpG,SAAS,CAACoG,cAleJ;;EAqetB;AACD;AACA;AACA;AACA;EACCvF,SAAS,EAAE,CA1eW;;EA6etB;AACD;AACA;AACA;AACA;EACCilC,WAAW,EAAE,EAlfS;;EAqftB;AACD;AACA;AACA;AACA;EACCC,QAAQ,EAAE/lC,SAAS,CAACsjC;AA1fE,CAAvB,C,CA8fA;AACA;AACA;;AACAvjC,CAAC,CAACkI,MAAF,CAAUrH,IAAV,EAAgB;EACfolC,YAAY,EAAEplC,IAAI,CAAC8C,MADJ;EAEfuiC,MAAM,EAAQrlC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"},"metadata":{},"sourceType":"module"}